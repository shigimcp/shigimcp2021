{"version":3,"sources":["serviceWorker.js","components/Header.jsx","components/Wrapper.jsx","components/three/Hed.jsx","components/three/Logo.jsx","components/three/Scene.jsx","components/three/Lights.jsx","components/three/Camera.jsx","pages/Home.jsx","data/MyData.jsx","pages/About.jsx","pages/Resume.jsx","pages/Contact.jsx","pages/NotFound.jsx","pages/Isotope03.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","navLoc","Wrapper","children","className","resumeNavTL","gsap","timeline","paused","mobileNavTL","Header","props","useCurrentPath","usePath","useState","workNavShow","setWorkNavShow","resumeNavShow","setResumeNavShow","mobileNavShow","setMobileNavShow","navBar_Ref","useRef","activeNavDiv_Ref","resumeNav_Ref","useLayoutEffect","setActiveNavDiv","thisLocX","document","getElementById","offsetLeft","thisLocW","offsetWidth","set","current","x","width","addEventListener","scrollTo","removeEventListener","useEffect","currentPath","charAt","length","slice","pathEnd","split","pop","pathMid","substring","lastIndexOf","thisNavLocX","thisNavLocW","to","duration","resumeNavHeight","getBoundingClientRect","height","fromTo","y","autoAlpha","resume","innerWidth","stagger","play","reverse","id","href","onClick","e","version","xmlns","viewBox","fill","stroke","maskContentUnits","maskUnits","d","setResumeModalOpen","resumeModalOpen","ref","active","burger","color","hoverOpacity","scale","Text","vAlign","hAlign","size","font","useLoader","THREE","config","useMemo","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","meshRef","useUpdate","self","geometry","computeBoundingBox","boundingBox","getSize","position","castShadow","attach","args","Hed","hedRef","checkWindow","thisObject","thisScale","innerHeight","documentElement","clientHeight","body","clientWidth","z","LogoMesh","meshScaleFactor","extrudeSettings","steps","depth","extrudeDir","receiveShadow","wireframe","depthWrite","transparent","opacity","fillOpacity","shape","LogoShape","paths","SVGLoader","url","shapes","flatMap","thisPath","i","toShapes","map","fillColor","nodeID","userData","node","logoShape_Ref","bBox","Box3","setFromObject","bSize","Vector3","xOffset","yOffset","forEach","item","timeoutId","resizeListener","clearTimeout","setTimeout","useFrame","rotation","uuid","Logo","remoteGitImageLoc","Scene","GroundPlane","metalness","BackDrop","Lights","KeyLight","brightness","intensity","lookAt","penumbra","FillLight","RimLight","ShadowLight","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-near","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","Camera01","cameraRef","setDefaultCamera","useThree","Camera","fov","Home","scene","title","shadowMap","fallback","localStorage","setItem","employers","work","about","skills","myData","registerPlugin","MotionPathPlugin","aboutData","CurlLB","curlSvgID","brain","thought","enableBackground","curlPathID","curlRectID","handleThought","target","CurlRB","MyThoughts","leftCurls","filter","isLeft","keyProxy","about_index","format","format_src","link","aWidth","aHeight","rightCurls","isRight","randomize2x","Math","random","addGuides","refContainer","refContainerDims","offsetTop","offsetHeight","outerEllipse","createElementNS","outerEllipsePath","posFactor","scaleFactor","outer_cx","outer_cy","outer_rx","outer_ry","setAttributeNS","setAttribute","appendChild","innerEllipse","innerEllipsePath","inner_cx","inner_cy","inner_rx","inner_ry","disperseChildren","parentContainer","outerSVGDims","innerSVGDims","outerRadius","innerRadius","p","thisCurl","curlFactorX","curlFactorY","getAttribute","thisAngle","PI","thisRadius","curlX","cos","curlY","sin","curlAngle","thoughtAnimTL","delay","thisCurlPath","parentElement","thisBrain","thisThought","thoughtBubble","boing","boingPath","innerHTML","thisBoingX","thisBoingY","thisCurlDims","outerEllipseDims","boingDims","rotationY","motionPath","path","align","alignOrigin","start","thisThoughtBubbleX","thoughtBubbleDims","autoRotate","ease","transform","closeThought","About","aboutContainer_Ref","aboutAfro_Ref","afroContainer_Ref","curlContainer_Ref","thoughtBubble_Ref","boing_Ref","guideContainer_Ref","haiku_Ref","resetThoughts_Ref","thisEllipse","resetThoughts","strokeWidth","strokeLinecap","strokeMiterlimit","cx","cy","r","textAnchor","dy","employerData","skillData","remoteImgLoc","EmployerItem","availability","employerLogo","src","alt","employer","dateEnd","Moment","dateStart","info","thisInfo","key","otherType","dangerouslySetInnerHTML","__html","otherHtml","software","languages","EmployerList","employerItems","album_id","date_start","date_end","otherInfo","info_other","other_html","other_type","other","employerLogoPath","logopath","logo","SkillChartItem","skill","notes","SkillChart","skillItems","thisCategory","category","level","level_difference","exp","index","SkillSet","Resume","dialogModal_Ref","dialogHotspot_Ref","dialogBox_Ref","remoteResumeLoc","download","rel","Contact","NotFound","remoteLoc","workData","filterEmployer","isInGallery","push","filterType","value","label","workNavTL","Isotope03","isotope_Ref","workNav_Ref","employerNav_Ref","activeEmplDiv_Ref","typeNav_Ref","activeTypeDiv_Ref","toggleNav_Ref","toggleBtn_Ref","galleryContainer_Ref","filterKey","setFilterKey","workNavToggleText","setWorkNavToggleText","workNavToggleBtn","setWorkNavToggleBtn","lastChild","thisLocY","thisLocH","workNavWidth","workNavHeight","isBrowser","restart","click","Isotope","itemSelector","percentPosition","layoutMode","destroy","arrange","handleFilterKeyChange","keyJSONnode","currentTarget","parentNode","RenderEmployers","album_index","RenderFilters","isSrc","workItem","masonryWidth","masonryHeight","event","console","log","handleClick","caption","App","routes","locID","loadStatus","useRoutes","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fecbd38b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//#region ==================== IMPORTS ====================\n\nimport React from 'react';\n\nimport { useRef, useEffect, useState } from 'react';\nimport { useLayoutEffect } from 'react';\nimport { A } from 'hookrouter';\nimport {usePath} from 'hookrouter';\n\nimport gsap from 'gsap';\n\nimport Burger from 'react-css-burger';\n\nimport '../stylesheets/Header.scss';\n// import scssVars from '../stylesheets/Global.scss';\n// import { scssVars } from '../stylesheets/Global.scss';\n// import '../stylesheets/Global.scss';\n\n\n//#region -------------------- IMPORTS: DATA --------------------\n\n// import myData from '../data/MyData';\n\n//#endregion -------------------- IMPORTS: DATA --------------------\n\n//#endregion ==================== IMPORTS ====================\n\n\n//#region ==================== CONSTANTS n VARS ====================\n\n// console.log(myData);\n\n// const employerData = myData[0];\n// const workData = myData[1];\n// const aboutData = myData[2];\n// const skillData = myData[3];\n\n// const workNavTL = new gsap.timeline({ paused: true });\nconst resumeNavTL = new gsap.timeline({ paused: true });\nconst mobileNavTL = new gsap.timeline({ paused: true });\n\nlet navLoc;\n// let emplLoc;\n\n//#endregion ==================== CONSTANTS n VARS ====================\n\n\n//#region ==================== FUNCTIONS ====================\n\n// #region -------------------- FUNCTION (GENERAL) - clearContentFAKE() --------------------\n\n// function clearContentFAKE() {\n\n//     // console.log('');\n//     // console.log('==================== FUNCTION: clearContentFAKE ====================');\n//     // console.log('NOTE/ISSUE: audio from an external html wouldnt\\'t stop playing when switching employers. (see Hearst => banners)');\n//     // console.log('THIS IS A DIRTY, DIRTY WORKAROUND!!!');\n//     // console.log('This clears the banneriFrameID source ONLY! NO STATE CONTROL for Work.jsx');\n//     // console.log('(DAMMIT! How do I call THIS function?!?!?! see: Work.jsx => WorkList({ currentEmployer }) => clearContent()');\n\n\n//     let banner = document.getElementById('banneriFrameID');\n\n//     // console.log('banner = ' + banner);\n//     // console.log(banner);\n\n//     banner.src = '';\n// }\n\n// #endregion -------------------- FUNCTION (GLOBAL) - clearContentFAKE() --------------------\n\n//#endregion ==================== FUNCTIONS ====================\n\n\n\nexport const Header = (props) => {\n\n    // console.log('');\n    // console.log('==================== COMPONENT: Header.jsx ====================');\n\n    // // console.log('');\n    // console.log('props = ' + props);\n    // console.log(props);\n\n\n    //#region ==================== use DEFs ====================\n\n    // const currentPath = usePath();\n    // let currentPath = usePath();\n    let useCurrentPath = usePath();\n\n    const [workNavShow, setWorkNavShow] = useState(null);\n\n    // const [currentEmployer, setCurrentEmployer] = useState(null);\n    // const [currentEmployer, setCurrentEmployer] = useState('ea');\n    // const [currentEmployer, setCurrentEmployer] = useState('ctm');\n    // const initEmployer = '/shigimcp2021/work/' + currentEmployer;\n\n    const [resumeNavShow, setResumeNavShow] = useState(null);\n\n    const [mobileNavShow, setMobileNavShow] = useState(false);\n\n    //#endregion ==================== use DEFs ====================\n\n\n    //#region ==================== ASSETS _Ref ====================\n\n    let navBar_Ref = useRef(null);\n    let activeNavDiv_Ref = useRef(null);\n\n    // let workNav_Ref = useRef(null);\n    // let activeEmplDiv_Ref = useRef(null);\n\n    let resumeNav_Ref = useRef(null);\n\n    //#endregion ==================== ASSETS _Ref ====================\n\n\n\n    //#region ==================== useLayoutEffect: setActiveNavDiv / WINDOW RESIZE ====================\n\n    useLayoutEffect(() => {\n\n        // console.log('');\n        // console.log('------------------------- useLayoutEffect: setActiveNavDiv / WINDOW RESIZE -------------------------');\n\n        //#region -------------------- setActiveNavDiv --------------------\n\n        const setActiveNavDiv = () => {\n\n            let thisLocX = document.getElementById(navLoc).offsetLeft;\n            // let thisLocY = document.getElementById(navLoc).offsetTop;\n            let thisLocW = document.getElementById(navLoc).offsetWidth;\n            // let thisLocH = document.getElementById(navLoc).offsetHeight;\n\n            gsap.set([activeNavDiv_Ref.current], { x: thisLocX, width: thisLocW });\n            // gsap.set([activeNavDiv_Ref.current], { x: thisLocX, top: thisLocY, width: thisLocW, height: thisLocH });\n        }\n\n        //#endregion -------------------- setActiveNavDiv --------------------\n\n\n        //#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n        window.addEventListener('resize', setActiveNavDiv);\n\n        window.scrollTo(0, 0);\n\n        // clean up function\n        return () => {\n            window.removeEventListener('resize', setActiveNavDiv);\n        }\n\n        //#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n    });\n\n    //#endregion ==================== useLayoutEffect: setActiveNavDiv / WINDOW RESIZE ====================\n\n\n    //#region ==================== useEffect: currentPath => set active[X]Divs ====================\n\n    useEffect(() => {\n\n        // console.log('');\n        // console.log('------------------------- useEffect: currentPath => set active[X]Divs -------------------------');\n\n        // let currentPath = usePath();\n        let currentPath = useCurrentPath;\n\n        // // console.log('');\n        // console.log('currentPath = ' + currentPath);\n\n\n        const lastChar = currentPath.charAt(currentPath.length-1);\n\n        if (lastChar === '/') {\n            currentPath = currentPath.slice(0, -1);\n        }\n\n\n        // console.log('');\n        // console.log('currentPath = ' + currentPath);\n\n\n        const pathEnd = currentPath.split('/').pop();\n\n        const pathMid = currentPath.substring(\n            // currentPath.lastIndexOf('react/') + 6,\n            // currentPath.lastIndexOf('react/') + 2,\n            currentPath.lastIndexOf('react/') + 15,\n            currentPath.lastIndexOf('/')\n        );\n\n\n        // console.log('');\n        // console.log('pathEnd = ' + pathEnd);\n        // console.log('pathMid = ' + pathMid);\n\n\n        // let thisEmplLocX;\n        // // let thisEmplLocY;\n        // let thisEmplLocW;\n        // // let thisEmplLocH;\n\n\n        switch (pathMid) {\n\n            case '/':\n\n                // console.log('');\n                // console.log('pathMid = /');\n\n                navLoc = pathEnd + 'ID';\n                // emplLoc = '';\n\n                break;\n\n            case 'work':\n\n                // console.log('');\n                // console.log('pathMid = work');\n\n                navLoc = pathMid + 'ID';\n                // emplLoc = pathEnd + 'ID';\n\n                // thisEmplLocX = document.getElementById(emplLoc).offsetLeft;\n                // // thisEmplLocY = document.getElementById(emplLoc).offsetTop;\n                // thisEmplLocW = document.getElementById(emplLoc).offsetWidth;\n                // // thisEmplLocH = document.getElementById(emplLoc).offsetHeight;\n\n                break;\n\n            default:\n\n                // console.log('');\n                // console.log('pathMid = default');\n\n                navLoc = 'homeID';\n                // navLoc = pathEnd + 'ID';\n                // emplLoc = '';\n\n                break;\n        }\n\n\n        // console.log('');\n        // console.log('navLoc = ' + navLoc);\n        // console.log('emplLoc = ' + emplLoc);\n\n\n        const thisNavLocX = document.getElementById(navLoc).offsetLeft;\n        // const thisNavLocY = document.getElementById(navLoc).offsetTop;\n        const thisNavLocW = document.getElementById(navLoc).offsetWidth;\n        // const thisNavLocH = document.getElementById(navLoc).offsetHeight;\n\n        gsap.to([document.getElementById('activeNavDivID')], { x: thisNavLocX, width: thisNavLocW, duration: 0.375 });\n        // gsap.to([document.getElementById('activeNavDivID')], { x: thisNavLocX, top: thisNavLocY, width: thisNavLocW, height: thisNavLocH, duration: 0.375 });\n\n        // gsap.to([document.getElementById('activeEmplDivID')], { x: thisEmplLocX, width: thisEmplLocW, duration: 0.375 });\n        // gsap.to([document.getElementById('activeEmplDivID')], { x: thisEmplLocX + 1, width: thisEmplLocW, duration: 0.375 });\n        // gsap.to([document.getElementById('activeEmplDivID')], { x: thisEmplLocX, width: thisEmplLocW + 2, duration: 0.375 });\n        // gsap.to([document.getElementById('activeEmplDivID')], { x: thisEmplLocX, top: thisEmplLocY, width: thisEmplLocW, height: thisEmplLocH, duration: 0.375 });\n\n    // }, []);\n    // }, [currentPath]);\n    }, [useCurrentPath]);\n\n    //#endregion ==================== useEffect: currentPath => set active[X]Divs ====================\n\n\n    //#region ==================== useEffect: [workNavShow, setWorkNavShow] ====================\n\n    // useEffect(() => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- useEffect: [workNavShow, setWorkNavShow] -------------------------');\n\n    //     let workNavHeight = workNav_Ref.getBoundingClientRect().height;\n\n    //     setWorkNavShow(\n    //         workNavTL\n    //             .fromTo([workNav_Ref], { y: 0, autoAlpha: 0 }, { y: workNavHeight, autoAlpha: 1, duration: 0.5 }, 'frame01')\n    //     );\n\n    //     if (navLoc === 'workID') {\n    //         workNavTL.resume();\n    //     }\n\n    //     window.scrollTo(0, 0);\n\n    // }, []);\n    // // }, [workNavShow]);\n\n    //#endregion ==================== useEffect: [workNavShow, setWorkNavShow] ====================\n\n\n    //#region ==================== useEffect: [resumeNavShow, setResumeNavShow] ====================\n\n    // const dialogModal_Ref = React.createRef();\n\n    useEffect(() => {\n\n        // console.log('');\n        // console.log('------------------------- useEffect: [resumeNavShow, setResumeNavShow] -------------------------');\n\n\n        let resumeNavHeight = resumeNav_Ref.getBoundingClientRect().height;\n        // let resumeNavHeight = resumeNav_Ref.getBoundingClientRect().height * 0.5;\n\n        setResumeNavShow(\n            resumeNavTL\n                // .fromTo([resumeNav_Ref], { y: 0, autoAlpha: 0 }, { y: resumeNavHeight, autoAlpha: 1, duration: 0.25 }, 'frame01')\n                .fromTo([resumeNav_Ref], { y: -resumeNavHeight, autoAlpha: 0 }, { y: 0, autoAlpha: 1, duration: 0.25 }, 'frame01')\n        );\n\n        if (navLoc === 'resumeID') {\n            resumeNavTL.resume();\n\n            // console.log('dialogModal_Ref.current = ' + dialogModal_Ref.current);\n        }\n\n        window.scrollTo(0, 0);\n\n    }, [resumeNavShow]);\n    // }, [resumeNavShow, dialogModal_Ref]);\n\n    //#endregion ==================== useEffect: [resumeNavShow, setResumeNavShow] ====================\n\n\n    //#region ==================== useEffect: [mobileNavShow, setMobileNavShow] ====================\n\n    const breakpointMobile = 768;\n\n    useEffect(() => {\n\n        if (window.innerWidth <= breakpointMobile) {\n            mobileNavTL.fromTo(['.navItem', '.activeNavDiv'], { autoAlpha: 0 }, { autoAlpha: 1, duration: 0.25, stagger: 0.0625 }, 'frame00');\n        } else {\n            mobileNavTL.set(['.navItem', '.activeNavDiv'], { autoAlpha: 1 });\n        }\n\n        if (mobileNavShow) {\n            mobileNavTL.play();\n        } else {\n            mobileNavTL.reverse();\n        }\n\n    }, [mobileNavShow]);\n\n    //#endregion ==================== useEffect: [mobileNavShow, setMobileNavShow] ====================\n\n\n\n    //#region ==================== WorkNavItems: REF https://reactjs.org/docs/lists-and-keys.html ====================\n\n    // const remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';\n\n\n    //#region -------------------- filteredNavArray: REF https://www.samanthaming.com/tidbits/43-3-ways-to-remove-array-duplicates/ --------------------\n    //        -------------------- NOTE: This step is to check * workData * for employers that have content to display --------------------\n\n    // // console.log('');\n    // // console.log('------------------------- filteredNavArray: REF https://www.samanthaming.com/tidbits/43-3-ways-to-remove-array-duplicates/ -------------------------');\n    // // console.log('------------------------- NOTE: This step is to check * workData * for employers that have content to display -------------------------');\n    // // // console.log('');\n\n\n    // let filteredNavArray = workData.filter(thisContent => thisContent.availability === true).map((workImage) => (\n    //     workImage.album_id\n    // ));\n\n    // // filteredNavArray = new Set(filteredNavArray);\n    // // filteredNavArray = Array.from(filteredNavArray);\n    // filteredNavArray = Array.from(new Set(filteredNavArray));\n\n\n    // // console.log('filteredNavArray = ' + filteredNavArray);\n    // // console.log(filteredNavArray);\n\n    //#endregion -------------------- filteredNavArray: REF https://www.samanthaming.com/tidbits/43-3-ways-to-remove-array-duplicates/ --------------------\n\n\n    //#region -------------------- FUNCTION: WorkNavItem(props) --------------------\n\n    // function WorkNavItem(props) {\n\n    //     // console.log('');\n    //     // console.log('------------------------- FUNCTION: WorkNavItem(props) -------------------------');\n    //     // console.log('props = ' + props);\n    //     // console.log(props);\n\n\n    //     return (\n    //         // <A href={props.link} className='employerIcon' id={props.album_id + 'ID'} onClick={() => { workNavShow.pause(); setCurrentEmployer(props.album_id); }}>\n    //         <A href={props.link} className='employerIcon' id={props.album_id + 'ID'} onClick={() => { workNavShow.pause(); setCurrentEmployer(props.album_id); clearContentFAKE(); }}>\n    //             <img src={remoteLoc + props.employerLogo} alt={'employer: ' + props.employer} />\n    //         </A>\n    //     )\n    // }\n\n\n    // // console.log('');\n    // // console.log('------------------------- CONST: WorkNavItems -------------------------');\n\n    // // const WorkNavItems = employerData.map((employer) =>\n    // const WorkNavItems = employerData.filter(contentExists => filteredNavArray.includes(contentExists.album_id)).map((employer) =>\n    //     <WorkNavItem\n    //         key={employer.album_id}\n    //         album_id={employer.album_id}\n    //         employer={employer.employer}\n    //         title={employer.title}\n    //         dateStart={employer.date_start}\n    //         dateEnd={employer.date_end}\n    //         info={employer.info}\n    //         otherInfo={employer.info_other}\n    //         languages={employer.languages}\n    //         employerLogo={employer.logopath}\n    //         link={'/shigimcp2021/work/' + employer.album_id}\n    //     />\n    // );\n\n\n    // // console.log('WorkNavItems = ' + WorkNavItems);\n    // // console.log(WorkNavItems);\n\n    //#endregion -------------------- FUNCTION: WorkNavItem(props) --------------------\n\n    //#endregion ==================== WorkNavItems: REF https://reactjs.org/docs/lists-and-keys.html ====================\n\n\n    return (\n\n        <div className='header' id='headerID'>\n\n            <div className='hed' id='hedID'>\n\n                <div className='hed01' id='hed01'>Shigeru McPherson</div>\n                <div className='hed02' id='hed02'>digital designer <span className='bullet'>&#8226;</span> art director</div>\n                {/* <div className='hed02' id='hed02'>digital designer <span className='bullet'>&#8226;</span> art director <span className='bullet'>&#8226;</span> front-end developer</div> */}\n\n                <div className='contact'>\n                    212.464.7989 &nbsp;\n                    <a href='mailto:shigimcp@yahoo.com?Subject=Hi Shigi! I saw your website, and...' className='email'>shigimcp@yahoo.com</a>\n                </div>\n\n\n            {/* #region ==================== LOGO (inline SVG) ==================== */}\n\n                {/* <A href='/shigimcp2021' id='homeID' onClick={(e) => { setWorkNavShow(workNavShow.reverse()); moveObjectTo(activeNavDiv_Ref.current, e.target.id); setMobileNavShow(false); }}> */}\n                {/* <A href='/shigimcp2021' onClick={(e) => { setWorkNavShow(workNavShow.reverse()); moveObjectTo(activeNavDiv_Ref.current, 'homeID'); setMobileNavShow(false); }}> */}\n                <A href='/shigimcp2021' onClick={(e) => { setWorkNavShow(workNavShow.reverse()); setMobileNavShow(false); }}>\n\n                    <svg version='1.1' className='logoIcon' id='logoIconID' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 1000 880'>\n                    {/* <svg version='1.1' className='logoIcon' id='logoIconID' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 1000 880' onClick={(e) => { setWorkNavShow(workNavShow.reverse()); moveObjectTo(activeNavDiv_Ref.current, e.target.id); setMobileNavShow(false); }}> */}\n                    {/* <svg version='1.1' className='logoIcon' id='logoIconID' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 1000 880' onClick={(e) => { setWorkNavShow(workNavShow.reverse()); moveObjectTo(activeNavDiv_Ref.current, 'homeID'); setMobileNavShow(false); }}> */}\n\n                        <defs>\n\n                        {/* #region ==================== CLIPPING PATHS ==================== */}\n\n                            <clipPath id='shigeru_logo_afro_k_clip'>\n                                <rect id='header_clip_afro_k' x='0' y='0367.5' width='100%' height='517.5' fill='white' />\n                            </clipPath>\n\n                            <clipPath id='shigeru_logo_afro_w_clip'>\n                                <rect id='header_clip_afro_w' x='0' y='0' width='100%' height='367.5' fill='white' />\n                            </clipPath>\n\n                            <clipPath id='shigeru_logo_glasses_k_clip'>\n                                <rect id='header_clip_glasses_k' x='0' y='367.5' width='100%' height='517.5' fill='white' />\n                            </clipPath>\n\n                            <clipPath id='shigeru_logo_glasses_w_clip'>\n                                <rect id='header_clip_glasses_w' x='0' y='0' width='100%' height='367.5' fill='white' />\n                            </clipPath>\n\n                            <clipPath id='shigeru_logo_kanji_w_clip'>\n                                <rect id='header_clip_kanji' x='0' y='367.5' width='100%' height='367.5' fill='white' />\n                            </clipPath>\n\n                            <clipPath id='bg_clip'>\n                                <rect id='bg_clip_rect' x='0' y='60' width='200%' height='125%' fill='white' stroke='blue' />\n                            </clipPath>\n\n                        {/* #endregion ==================== CLIPPING PATHS ==================== */}\n\n\n                        {/* #region ==================== MASKS ==================== */}\n\n                            <mask id='shigeru_logo_afro_k_mask' maskContentUnits='userSpaceOnUse' maskUnits='userSpaceOnUse'>\n                                <rect id='header_mask_afro_k' x='0' y='0367.5' width='100%' height='517.5' fill='white' />\n                            </mask>\n\n                            <mask id='shigeru_logo_afro_w_mask' maskContentUnits='userSpaceOnUse' maskUnits='userSpaceOnUse'>\n                                <rect id='header_mask_afro_w' x='0' y='0' width='100%' height='367.5' fill='white' />\n                            </mask>\n\n                            <mask id='shigeru_logo_glasses_k_mask' maskContentUnits='userSpaceOnUse' maskUnits='userSpaceOnUse'>\n                                <rect id='header_mask_glasses_k' x='0' y='367.5' width='100%' height='517.5' fill='white' />\n                            </mask>\n\n                            <mask id='shigeru_logo_glasses_w_mask' maskContentUnits='userSpaceOnUse' maskUnits='userSpaceOnUse'>\n                                <rect id='header_mask_glasses_w' x='0' y='0' width='100%' height='367.5' fill='white' />\n                            </mask>\n\n                            <mask id='shigeru_logo_kanji_w_mask' maskContentUnits='userSpaceOnUse' maskUnits='userSpaceOnUse'>\n                                <rect id='header_mask_kanji' x='0' y='367.5' width='100%' height='367.5' fill='white' />\n                            </mask>\n\n                            <mask id='bg_mask' maskContentUnits='userSpaceOnUse' maskUnits='userSpaceOnUse'>\n                                <rect id='bg_mask_rect' x='0' y='60' width='200%' height='125%' fill='white' stroke='blue' />\n                            </mask>\n\n                        {/* #region ==================== MASKS ==================== */}\n\n                        </defs>\n\n\n                    {/* #region ==================== PATHS ==================== */}\n\n                        <g id='shigeru_logo_afro'>\n                            <path id='shigeru_logo_afro_k' fill='#000000' d='M983.409,470.499c9.111-0.163,16.494-7.511,16.59-16.647c0.107-9.107-7.092-16.608-16.175-16.993c9.044-0.951,15.75-8.896,15.074-17.984c-0.677-9.078-8.474-15.944-17.556-15.569c8.918-1.721,14.918-10.193,13.459-19.195c-1.449-8.992-9.826-15.166-18.841-14.021c8.744-2.472,14.001-11.425,11.779-20.263c-2.242-8.905-11.218-14.367-20.165-12.328c8.619-3.136,13.17-12.579,10.184-21.254c-2.976-8.655-12.339-13.328-21.054-10.608c8.271-3.875,11.971-13.617,8.28-21.993c-3.681-8.348-13.353-12.233-21.788-8.857c7.855-4.549,10.715-14.522,6.358-22.542c-4.339-8.001-14.261-11.088-22.378-7.068c7.421-5.175,9.45-15.32,4.474-22.946c-4.966-7.616-15.063-9.914-22.832-5.299c6.957-5.742,8.165-15.983,2.618-23.186c-5.536-7.193-15.759-8.703-23.141-3.539c6.474-6.251,6.89-16.532,0.822-23.282c-6.059-6.742-16.349-7.482-23.306-1.808c5.952-6.713,5.585-16.974-0.957-23.244c-6.599-6.328-17.025-6.261-23.537,0.067c5.594-7.136,4.522-17.454-2.513-23.282c-7.044-5.838-17.44-5.01-23.47,1.76c5.073-7.51,3.276-17.723-4.164-23.051c-7.431-5.318-17.731-3.77-23.276,3.404c4.531-7.838,2.019-17.897-5.769-22.696c-7.787-4.789-17.962-2.529-22.976,5.01c3.98-8.136,0.782-18.002-7.315-22.253c-8.097-4.25-18.078-1.308-22.581,6.549c3.42-8.376-0.444-18.002-8.803-21.695c-8.357-3.702-18.106-0.106-22.078,8.011c2.831-8.578-1.652-17.907-10.242-21.041c-8.581-3.135-18.078,1.096-21.489,9.472c2.27-8.751-2.831-17.782-11.604-20.349c-8.764-2.568-17.943,2.261-20.813,10.829c1.68-8.867-3.99-17.532-12.9-19.532c-8.918-1.99-17.769,3.414-20.068,12.146c1.101-8.953-5.111-17.243-14.136-18.666c-9.025-1.423-17.508,4.54-19.247,13.397c0.541-9.011-6.194-16.888-15.286-17.743c-9.083-0.846-17.17,5.616-18.349,14.55c-0.048-9.011-7.256-16.435-16.378-16.723c-9.141-0.288-16.812,6.693-17.402,15.704c-0.59-9.011-8.252-16.003-17.383-15.733c-9.121,0.279-16.339,7.684-16.406,16.695C465.5,7.769,457.431,1.287,448.34,2.124v0.009c-9.092,0.837-15.837,8.703-15.315,17.705C431.305,10.981,422.831,5,413.798,6.413h0.009c-9.035,1.413-15.266,9.684-14.174,18.637c-2.281-8.732-11.122-14.156-20.04-12.175c-8.919,1.991-14.609,10.646-12.938,19.522c-2.841-8.578-12.03-13.425-20.803-10.876c-8.773,2.558-13.894,11.579-11.633,20.33c-3.402-8.386-12.88-12.636-21.48-9.511c-8.589,3.125-13.102,12.463-10.271,21.051c-3.942-8.145-13.701-11.761-22.069-8.078c-8.368,3.683-12.242,13.3-8.841,21.686c-4.483-7.866-14.464-10.828-22.561-6.588c-8.106,4.232-11.324,14.089-7.363,22.234c-5.005-7.549-15.17-9.819-22.967-5.049c-7.788,4.78-10.329,14.829-5.817,22.687c-5.517-7.184-15.817-8.752-23.266-3.443c-7.44,5.308-9.266,15.521-4.203,23.042c-6.02-6.79-16.416-7.636-23.46-1.808c-7.14,5.885-8.174,16.396-2.348,23.551c-6.474-6.578-17.083-6.751-23.779-0.356c-6.677,6.377-6.948,16.897-0.657,23.61c-6.957-6.03-17.518-5.415-23.702,1.443c-6.174,6.846-5.671,17.349,1.082,23.58c-7.392-5.471-17.856-4.049-23.489,3.25c-5.614,7.271-4.338,17.657,2.812,23.369c-7.788-4.818-18.059-2.568-23.093,5.116c-5.015,7.664-2.957,17.877,4.57,23.042c-8.136-4.135-18.156-1.077-22.533,6.963c-4.377,8.011-1.526,17.993,6.329,22.561c-8.435-3.395-18.117,0.471-21.808,8.818c-3.681,8.309-0.058,18.002,8.097,21.926c-8.677-2.635-17.943,2.029-20.919,10.626c-2.967,8.559,1.42,17.878,9.817,21.148c-8.831-1.837-17.614,3.568-19.836,12.358c-2.242,8.837,2.995,17.8,11.73,20.291c-9.015-1.173-17.392,4.992-18.871,13.983c-1.469,8.991,4.512,17.483,13.43,19.224c-9.082-0.394-16.89,6.453-17.585,15.531c-0.696,9.117,6.039,17.09,15.121,18.022c-9.121,0.327-16.378,7.828-16.29,16.964c0.077,9.136,7.45,16.493,16.561,16.676c-9.044,1.115-15.614,9.193-14.754,18.291c0.86,9.088,8.851,15.81,17.953,15.204c-8.928,1.875-14.783,10.492-13.15,19.474c1.643,8.992,10.184,15.012,19.199,13.628c-8.735,2.616-13.837,11.704-11.431,20.522c2.406,8.828,11.431,14.098,20.31,11.944c-8.493,3.346-12.812,12.829-9.662,21.416c3.15,8.588,12.58,13.079,21.238,10.194c-8.174,4.038-11.672,13.848-7.817,22.137c3.855,8.29,13.623,11.982,22.01,8.405c-7.817,4.684-10.503,14.743-5.981,22.695v-0.009c4.522,7.954,14.561,10.848,22.62,6.597c-7.401,5.289-9.276,15.521-4.136,23.09c5.131,7.568,15.373,9.646,23.064,4.779c-6.966,5.857-8.039,16.195-2.319,23.34c5.701,7.136,16.058,8.433,23.354,3.001c-6.483,6.356-6.764,16.742-0.532,23.426c6.232,6.693,16.648,7.203,23.508,1.25c-5.99,6.819-5.488,17.185,1.218,23.388c6.706,6.212,17.121,5.963,23.518-0.461c-5.459,7.222-4.203,17.512,2.927,23.224c7.131,5.703,17.489,4.713,23.412-2.135c-4.928,7.587-2.947,17.753,4.57,22.946c7.508,5.183,17.759,3.471,23.19-3.76c-4.377,7.905-1.691,17.907,6.164,22.561c7.865,4.664,17.982,2.241,22.889-5.376c-3.845,8.193-0.483,18.002,7.682,22.119c8.165,4.126,18.098,1.019,22.465-6.915c-3.285,8.434,0.734,17.993,9.16,21.561c8.416,3.568,18.117-0.193,21.943-8.386c-2.705,8.626,1.932,17.896,10.57,20.897v0.01c8.812,3.058,18.456-1.568,21.537-10.348c0.032-0.091,0.051-0.182,0.081-0.273c0.23,0.072,0.462,0.139,0.692,0.211c-0.139,0.485-0.27,0.975-0.367,1.467c-0.106,0.539-0.193,1.088-0.242,1.626c-0.058,0.548-0.087,1.106-0.087,1.654c0,0.558,0.029,1.116,0.087,1.664c0.049,0.538,0.136,1.087,0.242,1.625c0.107,0.539,0.252,1.077,0.406,1.606c0.165,0.519,0.348,1.039,0.56,1.549c0.213,0.501,0.444,1.01,0.706,1.49c0.26,0.481,0.541,0.962,0.85,1.414c0.31,0.461,0.638,0.903,0.986,1.327c0.347,0.432,0.725,0.846,1.12,1.23c0.387,0.385,0.802,0.76,1.228,1.116c0.425,0.347,0.879,0.673,1.343,0.971c0.454,0.308,0.928,0.596,1.42,0.847c0.483,0.259,0.986,0.5,1.498,0.702c0.502,0.211,1.024,0.404,1.555,0.558c0.522,0.163,1.063,0.298,1.604,0.404c0.542,0.116,1.092,0.193,1.643,0.25c0.551,0.058,1.112,0.086,1.662,0.086c0.551,0,1.112-0.028,1.663-0.086c0.55-0.057,1.101-0.134,1.642-0.25c0.542-0.106,1.082-0.24,1.604-0.404c0.522-0.154,1.053-0.347,1.556-0.558c0.512-0.202,1.014-0.442,1.497-0.702c0.483-0.251,0.966-0.539,1.42-0.847c0.464-0.298,0.909-0.625,1.333-0.971c0.435-0.356,0.851-0.731,1.237-1.116c0.396-0.384,0.763-0.798,1.121-1.23c0.348-0.424,0.677-0.866,0.985-1.327c0.3-0.453,0.59-0.933,0.851-1.414c0.251-0.481,0.493-0.99,0.705-1.49c0.212-0.51,0.396-1.029,0.56-1.549c0.155-0.529,0.29-1.067,0.406-1.606c0.107-0.538,0.184-1.087,0.242-1.625c0.059-0.548,0.087-1.106,0.087-1.664c0-0.548-0.028-1.105-0.087-1.654c-0.058-0.538-0.135-1.087-0.242-1.626c-0.116-0.538-0.251-1.076-0.406-1.606c-0.164-0.519-0.348-1.039-0.56-1.548c-0.212-0.501-0.454-1.011-0.705-1.491c-0.261-0.481-0.551-0.962-0.851-1.413c-0.309-0.452-0.637-0.903-0.985-1.327c-0.348-0.433-0.725-0.846-1.121-1.231c-0.386-0.384-0.802-0.76-1.227-1.115c-0.435-0.346-0.879-0.673-1.344-0.972c-0.454-0.307-0.937-0.596-1.42-0.846c-0.483-0.259-0.985-0.5-1.497-0.702c-0.503-0.212-1.034-0.404-1.556-0.558c-0.522-0.163-1.062-0.299-1.604-0.404c-0.541-0.115-1.092-0.193-1.642-0.251c-1.102-0.105-2.223-0.105-3.324,0c-0.551,0.058-1.101,0.135-1.643,0.251c-0.541,0.105-1.082,0.24-1.604,0.404c-0.531,0.154-1.053,0.346-1.555,0.558c-0.512,0.202-1.015,0.442-1.498,0.702c-0.493,0.25-0.966,0.539-1.43,0.846c-0.454,0.299-0.909,0.625-1.333,0.972c-0.087,0.073-0.167,0.154-0.253,0.228c-0.182-0.225-0.366-0.447-0.547-0.673c7.28-5.472,8.912-15.744,3.592-23.184h-0.009c-5.335-7.448-15.633-9.255-23.206-4.169c-0.159-0.247-0.314-0.498-0.472-0.746c7.842-4.689,10.53-14.781,5.967-22.743c-4.565-7.958-14.661-10.784-22.725-6.441c-0.134-0.259-0.265-0.519-0.398-0.779c8.258-3.987,11.827-13.832,7.972-22.169c-3.856-8.341-13.706-12.022-22.123-8.367c-0.112-0.268-0.222-0.538-0.333-0.806c8.557-3.329,12.901-12.881,9.702-21.495c-3.201-8.627-12.754-13.065-21.433-10.044c-0.091-0.274-0.18-0.549-0.27-0.823c8.791-2.71,13.811-11.933,11.239-20.763c-2.581-8.829-11.783-13.937-20.672-11.53c-0.073-0.284-0.143-0.568-0.215-0.853c8.96-2.092,14.616-10.954,12.656-19.938c-1.961-8.993-10.799-14.716-19.832-12.924c-0.052-0.286-0.104-0.571-0.155-0.857c9.085-1.476,15.334-9.927,14.006-19.022c-1.338-9.102-9.746-15.415-18.875-14.252c-0.032-0.291-0.065-0.583-0.097-0.874c9.155-0.822,15.998-8.781,15.349-17.945c-0.659-9.16-8.574-16.071-17.746-15.596c-0.009-0.29-0.015-0.578-0.024-0.867c9.171-0.087,16.631-7.441,16.747-16.619c0.113-9.152-7.147-16.674-16.297-17.006c0.018-0.285,0.039-0.566,0.057-0.85c0.536,0.052,1.069,0.084,1.601,0.084c8.396,0,15.681-6.223,16.754-14.733c1.144-9.022-5.127-17.252-14.074-18.687c0.056-0.277,0.112-0.555,0.169-0.831c1.374,0.34,2.755,0.516,4.109,0.516c7.275,0,13.99-4.703,16.194-11.993c2.591-8.612-2.094-17.666-10.505-20.66c0.108-0.254,0.22-0.503,0.329-0.755c2.419,1.212,5.013,1.798,7.577,1.798c5.797,0,11.45-2.982,14.6-8.328c4.525-7.682,2.22-17.45-5.062-22.386c0.17-0.214,0.339-0.429,0.51-0.641c3.227,2.978,7.348,4.496,11.479,4.496c4.136,0,8.281-1.501,11.547-4.529v-0.01c6.531-6.068,7.12-16.086,1.57-22.887c0.223-0.157,0.447-0.312,0.672-0.468c3.149,5.159,8.712,8.074,14.445,8.074c2.677,0,5.392-0.625,7.914-1.962c7.985-4.216,11.162-13.893,7.393-21.948c0.304-0.123,0.605-0.248,0.91-0.369c0.103,0.293,0.196,0.59,0.316,0.872c0.212,0.509,0.444,1.01,0.706,1.49c0.26,0.481,0.541,0.962,0.85,1.413c0.299,0.462,0.638,0.904,0.985,1.327c0.348,0.433,0.725,0.846,1.112,1.231c0.396,0.394,0.811,0.76,1.236,1.116c0.426,0.347,0.879,0.673,1.334,0.98c0.463,0.299,0.937,0.587,1.43,0.847c0.483,0.25,0.986,0.49,1.488,0.702c0.512,0.211,1.034,0.394,1.565,0.558c0.522,0.154,1.062,0.288,1.604,0.404c0.541,0.106,1.092,0.183,1.643,0.24c0.55,0.057,1.111,0.086,1.662,0.086s1.111-0.029,1.662-0.086c0.542-0.057,1.102-0.134,1.643-0.24c0.531-0.115,1.073-0.25,1.604-0.404c0.522-0.163,1.044-0.347,1.555-0.558c0.512-0.211,1.015-0.452,1.498-0.702c0.483-0.26,0.966-0.548,1.42-0.847c0.463-0.307,0.908-0.634,1.333-0.98c0.435-0.356,0.85-0.721,1.237-1.116c0.386-0.385,0.763-0.798,1.121-1.231c0.347-0.423,0.676-0.865,0.985-1.327c0.098-0.147,0.191-0.301,0.286-0.454c0.191,0.114,0.379,0.232,0.571,0.346c-0.048,0.083-0.104,0.159-0.151,0.243c-4.512,8.145-1.547,18.377,6.637,22.868h-0.009c2.59,1.424,5.401,2.097,8.155,2.097c5.962,0,11.739-3.136,14.822-8.704c0.049-0.088,0.084-0.179,0.131-0.268c0.199,0.101,0.397,0.205,0.597,0.305c-0.043,0.089-0.096,0.171-0.138,0.261c-3.942,8.424-0.271,18.435,8.203,22.359c2.31,1.068,4.735,1.567,7.112,1.567c6.377,0,12.484-3.606,15.353-9.742c0.042-0.09,0.071-0.183,0.111-0.273c0.203,0.086,0.406,0.173,0.61,0.259c-0.038,0.093-0.086,0.179-0.122,0.274c-3.353,8.675,0.995,18.407,9.71,21.753c2,0.76,4.049,1.125,6.068,1.125c6.793,0,13.199-4.106,15.788-10.79c0.036-0.094,0.059-0.19,0.094-0.285c0.209,0.072,0.419,0.143,0.628,0.215c-0.032,0.095-0.073,0.185-0.103,0.281c-2.764,8.877,2.232,18.301,11.15,21.052c1.671,0.509,3.353,0.749,5.005,0.749c7.217,0,13.904-4.635,16.146-11.858c0.028-0.09,0.043-0.18,0.069-0.269c0.215,0.059,0.433,0.113,0.648,0.172c-0.024,0.092-0.057,0.179-0.08,0.272c-2.165,9.039,3.439,18.118,12.532,20.272c1.314,0.307,2.628,0.461,3.933,0.461c7.643,0,14.58-5.203,16.435-12.935c0.022-0.094,0.032-0.187,0.052-0.281c0.216,0.044,0.43,0.091,0.646,0.135c-0.017,0.092-0.045,0.18-0.061,0.272c-1.565,9.164,4.628,17.858,13.837,19.416c0.956,0.163,1.913,0.24,2.85,0.24c8.097,0,15.257-5.809,16.658-14.012c0.017-0.097,0.02-0.193,0.034-0.289c0.219,0.03,0.439,0.059,0.658,0.089c-0.012,0.097-0.035,0.19-0.045,0.288c-0.966,9.241,5.788,17.512,15.074,18.474c0.589,0.067,1.188,0.096,1.768,0.096c8.551,0,15.894-6.443,16.802-15.099c0.009-0.087,0.006-0.173,0.014-0.26c0.219,0.016,0.439,0.029,0.658,0.044c-0.005,0.089-0.021,0.175-0.024,0.264c-0.367,9.29,6.899,17.119,16.232,17.484c0.223,0.009,0.454,0.019,0.677,0.019c9.034,0,16.522-7.106,16.88-16.165c0.004-0.095-0.005-0.188-0.003-0.283c0.226,0.002,0.452,0.004,0.678,0.006c0.001,0.096-0.01,0.19-0.008,0.286c0.212,9.156,7.739,16.435,16.9,16.435c0.135,0,0.27-0.009,0.406-0.009c9.333-0.222,16.716-7.924,16.503-17.224c-0.002-0.09-0.016-0.177-0.02-0.267c0.222-0.012,0.445-0.019,0.667-0.032c0.006,0.09,0.002,0.179,0.01,0.27c0.773,8.761,8.154,15.368,16.832,15.368c0.493,0,0.985-0.02,1.488-0.068c9.305-0.808,16.184-8.973,15.373-18.233c-0.008-0.094-0.029-0.184-0.039-0.277c0.244-0.029,0.487-0.061,0.73-0.09c0.049,0.345,0.091,0.691,0.158,1.031c0.107,0.538,0.242,1.077,0.406,1.596c0.164,0.529,0.348,1.048,0.56,1.548c0.212,0.51,0.444,1.01,0.705,1.49c0.261,0.491,0.542,0.962,0.851,1.424c0.309,0.452,0.637,0.904,0.985,1.327c0.348,0.424,0.725,0.837,1.112,1.231c0.395,0.384,0.811,0.76,1.236,1.105c0.426,0.347,0.879,0.683,1.333,0.981c0.464,0.308,0.938,0.587,1.43,0.846c0.483,0.259,0.985,0.49,1.488,0.702c0.512,0.211,1.034,0.393,1.565,0.557c0.522,0.154,1.062,0.299,1.604,0.405c0.541,0.105,1.092,0.192,1.642,0.24c0.551,0.057,1.112,0.086,1.663,0.086c0.55,0,1.111-0.029,1.662-0.086c0.036-0.003,0.073-0.01,0.109-0.013c-6.443,3.445-10.126,10.808-8.545,18.285c1.614,7.606,8.146,12.924,15.586,13.338c-7.112,2.414-11.972,9.358-11.402,17.157c0.58,7.895,6.542,14.117,14.049,15.377c-7.478,1.606-13.14,8.155-13.314,16.099c-0.164,7.982,5.294,14.791,12.753,16.666c-7.642,0.98-13.874,7.106-14.647,15.069c-0.783,7.982,4.173,15.194,11.517,17.609c-7.72,0.423-14.397,6.125-15.721,14.031c-1.324,7.905,3.121,15.444,10.271,18.349c-7.73-0.068-14.744,5.174-16.59,12.983c-1.846,7.799,2.097,15.617,9.054,18.983c-7.71-0.586-15.073,4.193-17.44,11.858c-2.358,7.665,1.053,15.724,7.778,19.542c-7.652-1.106-15.325,3.144-18.204,10.626h-0.009c-2.88,7.473-0.048,15.733,6.367,20.013c-7.536-1.655-15.479,2.01-18.919,9.241c-3.42,7.203-1.265,15.608,4.744,20.359c-7.333-2.212-15.498,0.779-19.518,7.655c-4,6.857-2.6,15.359,2.918,20.609c-7.063-2.837-15.411-0.644-20.059,5.779c-4.619,6.399-4.069,14.916,0.82,20.675c-0.477-0.255-0.972-0.492-1.477-0.691c-0.503-0.212-1.034-0.404-1.556-0.558c-0.522-0.163-1.062-0.299-1.604-0.404c-0.541-0.115-1.092-0.193-1.642-0.251c-1.102-0.105-2.223-0.105-3.324,0c-0.551,0.058-1.101,0.135-1.643,0.251c-0.541,0.105-1.082,0.24-1.604,0.404c-0.522,0.154-1.053,0.346-1.555,0.558c-0.512,0.202-1.014,0.442-1.497,0.702c-0.493,0.25-0.966,0.539-1.421,0.846c-0.463,0.299-0.917,0.625-1.343,0.972c-0.426,0.355-0.841,0.731-1.228,1.115c-0.395,0.385-0.773,0.798-1.12,1.231c-0.348,0.424-0.677,0.875-0.986,1.327s-0.589,0.933-0.85,1.413c-0.26,0.481-0.493,0.991-0.705,1.491c-0.213,0.509-0.396,1.028-0.56,1.548c-0.164,0.53-0.3,1.068-0.406,1.606c-0.107,0.539-0.193,1.088-0.252,1.626c-0.048,0.548-0.077,1.106-0.077,1.654c0,0.558,0.029,1.116,0.077,1.664c0.058,0.538,0.145,1.087,0.252,1.625c0.106,0.539,0.242,1.077,0.406,1.606c0.164,0.519,0.347,1.039,0.56,1.549c0.212,0.501,0.444,1.01,0.705,1.49c0.261,0.481,0.541,0.962,0.85,1.414c0.31,0.461,0.638,0.903,0.986,1.327c0.347,0.432,0.725,0.846,1.12,1.23c0.387,0.385,0.802,0.76,1.228,1.116c0.426,0.347,0.879,0.673,1.343,0.971c0.455,0.308,0.928,0.596,1.421,0.847c0.483,0.259,0.985,0.5,1.497,0.702c0.502,0.211,1.033,0.404,1.555,0.558c0.522,0.163,1.063,0.298,1.604,0.404c0.542,0.116,1.092,0.193,1.643,0.25c0.551,0.058,1.112,0.086,1.662,0.086c0.551,0,1.112-0.028,1.663-0.086c0.55-0.057,1.101-0.134,1.642-0.25c0.542-0.106,1.082-0.24,1.604-0.404c0.522-0.154,1.053-0.347,1.556-0.558c0.512-0.202,1.014-0.442,1.497-0.702c0.493-0.251,0.966-0.539,1.42-0.847c0.464-0.298,0.918-0.625,1.344-0.971c0.425-0.356,0.841-0.731,1.227-1.116c0.396-0.384,0.773-0.798,1.121-1.23c0.348-0.424,0.677-0.866,0.986-1.327c0.309-0.453,0.589-0.933,0.85-1.414c0.26-0.481,0.493-0.99,0.705-1.49c0.212-0.51,0.396-1.029,0.56-1.549c0.155-0.529,0.3-1.067,0.406-1.606c0.107-0.538,0.193-1.087,0.242-1.625c0.059-0.548,0.087-1.106,0.087-1.664c0-0.548-0.028-1.105-0.087-1.654c-0.048-0.538-0.135-1.087-0.242-1.626c-0.053-0.271-0.117-0.543-0.186-0.813c2.524,6.74,8.958,10.949,15.83,10.949c1.846,0,3.71-0.298,5.556-0.933h-0.009c8.647-2.991,13.305-12.271,10.599-20.907c3.806,8.213,13.507,11.993,21.943,8.434c8.435-3.549,12.454-13.118,9.179-21.561c4.348,7.953,14.291,11.078,22.465,6.962c8.174-4.106,11.547-13.915,7.71-22.119c4.88,7.636,15.015,10.069,22.89,5.424c7.885-4.665,10.58-14.714,6.146-22.638c5.401,7.308,15.701,9.068,23.247,3.876c7.536-5.193,9.527-15.397,4.571-22.994c5.903,6.905,16.29,7.924,23.45,2.221c7.16-5.712,8.416-16.031,2.918-23.273c6.387,6.482,16.833,6.761,23.567,0.548c6.725-6.212,7.237-16.608,1.217-23.427c6.841,6.001,17.296,5.52,23.547-1.173c6.251-6.684,5.991-17.079-0.503-23.446c7.285,5.462,17.654,4.183,23.373-2.953c5.729-7.136,4.676-17.474-2.281-23.339c7.691,4.885,17.934,2.817,23.084-4.741h-0.009c5.159-7.559,3.294-17.811-4.107-23.109c8.048,4.269,18.106,1.404,22.648-6.55h-0.009c4.531-7.934,1.865-17.993-5.923-22.695c8.368,3.587,18.145-0.086,22.01-8.367c3.865-8.279,0.387-18.089-7.768-22.148c8.648,2.885,18.079-1.586,21.248-10.155c3.16-8.578-1.13-18.061-9.594-21.426c8.86,2.145,17.875-3.106,20.3-11.915c2.425-8.809-2.657-17.907-11.401-20.542c9.024,1.404,17.576-4.596,19.228-13.588h0.009c1.652-8.982-4.184-17.608-13.092-19.503c9.091,0.616,17.073-6.087,17.953-15.175C999.003,479.721,992.453,471.624,983.409,470.499z' />\n                            <path id='shigeru_logo_afro_w' fill='#ffffff' d='M983.409,470.499c9.111-0.163,16.494-7.511,16.59-16.647c0.107-9.107-7.092-16.608-16.175-16.993c9.044-0.951,15.75-8.896,15.074-17.984c-0.677-9.078-8.474-15.944-17.556-15.569c8.918-1.721,14.918-10.193,13.459-19.195c-1.449-8.992-9.826-15.166-18.841-14.021c8.744-2.472,14.001-11.425,11.779-20.263c-2.242-8.905-11.218-14.367-20.165-12.328c8.619-3.136,13.17-12.579,10.184-21.254c-2.976-8.655-12.339-13.328-21.054-10.608c8.271-3.875,11.971-13.617,8.28-21.993c-3.681-8.348-13.353-12.233-21.788-8.857c7.855-4.549,10.715-14.522,6.358-22.542c-4.339-8.001-14.261-11.088-22.378-7.068c7.421-5.175,9.45-15.32,4.474-22.946c-4.966-7.616-15.063-9.914-22.832-5.299c6.957-5.742,8.165-15.983,2.618-23.186c-5.536-7.193-15.759-8.703-23.141-3.539c6.474-6.251,6.89-16.532,0.822-23.282c-6.059-6.742-16.349-7.482-23.306-1.808c5.952-6.713,5.585-16.974-0.957-23.244c-6.599-6.328-17.025-6.261-23.537,0.067c5.594-7.136,4.522-17.454-2.513-23.282c-7.044-5.838-17.44-5.01-23.47,1.76c5.073-7.51,3.276-17.723-4.164-23.051c-7.431-5.318-17.731-3.77-23.276,3.404c4.531-7.838,2.019-17.897-5.769-22.696c-7.787-4.789-17.962-2.529-22.976,5.01c3.98-8.136,0.782-18.002-7.315-22.253c-8.097-4.25-18.078-1.308-22.581,6.549c3.42-8.376-0.444-18.002-8.803-21.695c-8.357-3.702-18.106-0.106-22.078,8.011c2.831-8.578-1.652-17.907-10.242-21.041c-8.581-3.135-18.078,1.096-21.489,9.472c2.27-8.751-2.831-17.782-11.604-20.349c-8.764-2.568-17.943,2.261-20.813,10.829c1.68-8.867-3.99-17.532-12.9-19.532c-8.918-1.99-17.769,3.414-20.068,12.146c1.101-8.953-5.111-17.243-14.136-18.666c-9.025-1.423-17.508,4.54-19.247,13.397c0.541-9.011-6.194-16.888-15.286-17.743c-9.083-0.846-17.17,5.616-18.349,14.55c-0.048-9.011-7.256-16.435-16.378-16.723c-9.141-0.288-16.812,6.693-17.402,15.704c-0.59-9.011-8.252-16.003-17.383-15.733c-9.121,0.279-16.339,7.684-16.406,16.695C465.5,7.769,457.431,1.287,448.34,2.124v0.009c-9.092,0.837-15.837,8.703-15.315,17.705C431.305,10.981,422.831,5,413.798,6.413h0.009c-9.035,1.413-15.266,9.684-14.174,18.637c-2.281-8.732-11.122-14.156-20.04-12.175c-8.919,1.991-14.609,10.646-12.938,19.522c-2.841-8.578-12.03-13.425-20.803-10.876c-8.773,2.558-13.894,11.579-11.633,20.33c-3.402-8.386-12.88-12.636-21.48-9.511c-8.589,3.125-13.102,12.463-10.271,21.051c-3.942-8.145-13.701-11.761-22.069-8.078c-8.368,3.683-12.242,13.3-8.841,21.686c-4.483-7.866-14.464-10.828-22.561-6.588c-8.106,4.232-11.324,14.089-7.363,22.234c-5.005-7.549-15.17-9.819-22.967-5.049c-7.788,4.78-10.329,14.829-5.817,22.687c-5.517-7.184-15.817-8.752-23.266-3.443c-7.44,5.308-9.266,15.521-4.203,23.042c-6.02-6.79-16.416-7.636-23.46-1.808c-7.14,5.885-8.174,16.396-2.348,23.551c-6.474-6.578-17.083-6.751-23.779-0.356c-6.677,6.377-6.948,16.897-0.657,23.61c-6.957-6.03-17.518-5.415-23.702,1.443c-6.174,6.846-5.671,17.349,1.082,23.58c-7.392-5.471-17.856-4.049-23.489,3.25c-5.614,7.271-4.338,17.657,2.812,23.369c-7.788-4.818-18.059-2.568-23.093,5.116c-5.015,7.664-2.957,17.877,4.57,23.042c-8.136-4.135-18.156-1.077-22.533,6.963c-4.377,8.011-1.526,17.993,6.329,22.561c-8.435-3.395-18.117,0.471-21.808,8.818c-3.681,8.309-0.058,18.002,8.097,21.926c-8.677-2.635-17.943,2.029-20.919,10.626c-2.967,8.559,1.42,17.878,9.817,21.148c-8.831-1.837-17.614,3.568-19.836,12.358c-2.242,8.837,2.995,17.8,11.73,20.291c-9.015-1.173-17.392,4.992-18.871,13.983c-1.469,8.991,4.512,17.483,13.43,19.224c-9.082-0.394-16.89,6.453-17.585,15.531c-0.696,9.117,6.039,17.09,15.121,18.022c-9.121,0.327-16.378,7.828-16.29,16.964c0.077,9.136,7.45,16.493,16.561,16.676c-9.044,1.115-15.614,9.193-14.754,18.291c0.86,9.088,8.851,15.81,17.953,15.204c-8.928,1.875-14.783,10.492-13.15,19.474c1.643,8.992,10.184,15.012,19.199,13.628c-8.735,2.616-13.837,11.704-11.431,20.522c2.406,8.828,11.431,14.098,20.31,11.944c-8.493,3.346-12.812,12.829-9.662,21.416c3.15,8.588,12.58,13.079,21.238,10.194c-8.174,4.038-11.672,13.848-7.817,22.137c3.855,8.29,13.623,11.982,22.01,8.405c-7.817,4.684-10.503,14.743-5.981,22.695v-0.009c4.522,7.954,14.561,10.848,22.62,6.597c-7.401,5.289-9.276,15.521-4.136,23.09c5.131,7.568,15.373,9.646,23.064,4.779c-6.966,5.857-8.039,16.195-2.319,23.34c5.701,7.136,16.058,8.433,23.354,3.001c-6.483,6.356-6.764,16.742-0.532,23.426c6.232,6.693,16.648,7.203,23.508,1.25c-5.99,6.819-5.488,17.185,1.218,23.388c6.706,6.212,17.121,5.963,23.518-0.461c-5.459,7.222-4.203,17.512,2.927,23.224c7.131,5.703,17.489,4.713,23.412-2.135c-4.928,7.587-2.947,17.753,4.57,22.946c7.508,5.183,17.759,3.471,23.19-3.76c-4.377,7.905-1.691,17.907,6.164,22.561c7.865,4.664,17.982,2.241,22.889-5.376c-3.845,8.193-0.483,18.002,7.682,22.119c8.165,4.126,18.098,1.019,22.465-6.915c-3.285,8.434,0.734,17.993,9.16,21.561c8.416,3.568,18.117-0.193,21.943-8.386c-2.705,8.626,1.932,17.896,10.57,20.897v0.01c8.812,3.058,18.456-1.568,21.537-10.348c0.032-0.091,0.051-0.182,0.081-0.273c0.23,0.072,0.462,0.139,0.692,0.211c-0.139,0.485-0.27,0.975-0.367,1.467c-0.106,0.539-0.193,1.088-0.242,1.626c-0.058,0.548-0.087,1.106-0.087,1.654c0,0.558,0.029,1.116,0.087,1.664c0.049,0.538,0.136,1.087,0.242,1.625c0.107,0.539,0.252,1.077,0.406,1.606c0.165,0.519,0.348,1.039,0.56,1.549c0.213,0.501,0.444,1.01,0.706,1.49c0.26,0.481,0.541,0.962,0.85,1.414c0.31,0.461,0.638,0.903,0.986,1.327c0.347,0.432,0.725,0.846,1.12,1.23c0.387,0.385,0.802,0.76,1.228,1.116c0.425,0.347,0.879,0.673,1.343,0.971c0.454,0.308,0.928,0.596,1.42,0.847c0.483,0.259,0.986,0.5,1.498,0.702c0.502,0.211,1.024,0.404,1.555,0.558c0.522,0.163,1.063,0.298,1.604,0.404c0.542,0.116,1.092,0.193,1.643,0.25c0.551,0.058,1.112,0.086,1.662,0.086c0.551,0,1.112-0.028,1.663-0.086c0.55-0.057,1.101-0.134,1.642-0.25c0.542-0.106,1.082-0.24,1.604-0.404c0.522-0.154,1.053-0.347,1.556-0.558c0.512-0.202,1.014-0.442,1.497-0.702c0.483-0.251,0.966-0.539,1.42-0.847c0.464-0.298,0.909-0.625,1.333-0.971c0.435-0.356,0.851-0.731,1.237-1.116c0.396-0.384,0.763-0.798,1.121-1.23c0.348-0.424,0.677-0.866,0.985-1.327c0.3-0.453,0.59-0.933,0.851-1.414c0.251-0.481,0.493-0.99,0.705-1.49c0.212-0.51,0.396-1.029,0.56-1.549c0.155-0.529,0.29-1.067,0.406-1.606c0.107-0.538,0.184-1.087,0.242-1.625c0.059-0.548,0.087-1.106,0.087-1.664c0-0.548-0.028-1.105-0.087-1.654c-0.058-0.538-0.135-1.087-0.242-1.626c-0.116-0.538-0.251-1.076-0.406-1.606c-0.164-0.519-0.348-1.039-0.56-1.548c-0.212-0.501-0.454-1.011-0.705-1.491c-0.261-0.481-0.551-0.962-0.851-1.413c-0.309-0.452-0.637-0.903-0.985-1.327c-0.348-0.433-0.725-0.846-1.121-1.231c-0.386-0.384-0.802-0.76-1.227-1.115c-0.435-0.346-0.879-0.673-1.344-0.972c-0.454-0.307-0.937-0.596-1.42-0.846c-0.483-0.259-0.985-0.5-1.497-0.702c-0.503-0.212-1.034-0.404-1.556-0.558c-0.522-0.163-1.062-0.299-1.604-0.404c-0.541-0.115-1.092-0.193-1.642-0.251c-1.102-0.105-2.223-0.105-3.324,0c-0.551,0.058-1.101,0.135-1.643,0.251c-0.541,0.105-1.082,0.24-1.604,0.404c-0.531,0.154-1.053,0.346-1.555,0.558c-0.512,0.202-1.015,0.442-1.498,0.702c-0.493,0.25-0.966,0.539-1.43,0.846c-0.454,0.299-0.909,0.625-1.333,0.972c-0.087,0.073-0.167,0.154-0.253,0.228c-0.182-0.225-0.366-0.447-0.547-0.673c7.28-5.472,8.912-15.744,3.592-23.184h-0.009c-5.335-7.448-15.633-9.255-23.206-4.169c-0.159-0.247-0.314-0.498-0.472-0.746c7.842-4.689,10.53-14.781,5.967-22.743c-4.565-7.958-14.661-10.784-22.725-6.441c-0.134-0.259-0.265-0.519-0.398-0.779c8.258-3.987,11.827-13.832,7.972-22.169c-3.856-8.341-13.706-12.022-22.123-8.367c-0.112-0.268-0.222-0.538-0.333-0.806c8.557-3.329,12.901-12.881,9.702-21.495c-3.201-8.627-12.754-13.065-21.433-10.044c-0.091-0.274-0.18-0.549-0.27-0.823c8.791-2.71,13.811-11.933,11.239-20.763c-2.581-8.829-11.783-13.937-20.672-11.53c-0.073-0.284-0.143-0.568-0.215-0.853c8.96-2.092,14.616-10.954,12.656-19.938c-1.961-8.993-10.799-14.716-19.832-12.924c-0.052-0.286-0.104-0.571-0.155-0.857c9.085-1.476,15.334-9.927,14.006-19.022c-1.338-9.102-9.746-15.415-18.875-14.252c-0.032-0.291-0.065-0.583-0.097-0.874c9.155-0.822,15.998-8.781,15.349-17.945c-0.659-9.16-8.574-16.071-17.746-15.596c-0.009-0.29-0.015-0.578-0.024-0.867c9.171-0.087,16.631-7.441,16.747-16.619c0.113-9.152-7.147-16.674-16.297-17.006c0.018-0.285,0.039-0.566,0.057-0.85c0.536,0.052,1.069,0.084,1.601,0.084c8.396,0,15.681-6.223,16.754-14.733c1.144-9.022-5.127-17.252-14.074-18.687c0.056-0.277,0.112-0.555,0.169-0.831c1.374,0.34,2.755,0.516,4.109,0.516c7.275,0,13.99-4.703,16.194-11.993c2.591-8.612-2.094-17.666-10.505-20.66c0.108-0.254,0.22-0.503,0.329-0.755c2.419,1.212,5.013,1.798,7.577,1.798c5.797,0,11.45-2.982,14.6-8.328c4.525-7.682,2.22-17.45-5.062-22.386c0.17-0.214,0.339-0.429,0.51-0.641c3.227,2.978,7.348,4.496,11.479,4.496c4.136,0,8.281-1.501,11.547-4.529v-0.01c6.531-6.068,7.12-16.086,1.57-22.887c0.223-0.157,0.447-0.312,0.672-0.468c3.149,5.159,8.712,8.074,14.445,8.074c2.677,0,5.392-0.625,7.914-1.962c7.985-4.216,11.162-13.893,7.393-21.948c0.304-0.123,0.605-0.248,0.91-0.369c0.103,0.293,0.196,0.59,0.316,0.872c0.212,0.509,0.444,1.01,0.706,1.49c0.26,0.481,0.541,0.962,0.85,1.413c0.299,0.462,0.638,0.904,0.985,1.327c0.348,0.433,0.725,0.846,1.112,1.231c0.396,0.394,0.811,0.76,1.236,1.116c0.426,0.347,0.879,0.673,1.334,0.98c0.463,0.299,0.937,0.587,1.43,0.847c0.483,0.25,0.986,0.49,1.488,0.702c0.512,0.211,1.034,0.394,1.565,0.558c0.522,0.154,1.062,0.288,1.604,0.404c0.541,0.106,1.092,0.183,1.643,0.24c0.55,0.057,1.111,0.086,1.662,0.086s1.111-0.029,1.662-0.086c0.542-0.057,1.102-0.134,1.643-0.24c0.531-0.115,1.073-0.25,1.604-0.404c0.522-0.163,1.044-0.347,1.555-0.558c0.512-0.211,1.015-0.452,1.498-0.702c0.483-0.26,0.966-0.548,1.42-0.847c0.463-0.307,0.908-0.634,1.333-0.98c0.435-0.356,0.85-0.721,1.237-1.116c0.386-0.385,0.763-0.798,1.121-1.231c0.347-0.423,0.676-0.865,0.985-1.327c0.098-0.147,0.191-0.301,0.286-0.454c0.191,0.114,0.379,0.232,0.571,0.346c-0.048,0.083-0.104,0.159-0.151,0.243c-4.512,8.145-1.547,18.377,6.637,22.868h-0.009c2.59,1.424,5.401,2.097,8.155,2.097c5.962,0,11.739-3.136,14.822-8.704c0.049-0.088,0.084-0.179,0.131-0.268c0.199,0.101,0.397,0.205,0.597,0.305c-0.043,0.089-0.096,0.171-0.138,0.261c-3.942,8.424-0.271,18.435,8.203,22.359c2.31,1.068,4.735,1.567,7.112,1.567c6.377,0,12.484-3.606,15.353-9.742c0.042-0.09,0.071-0.183,0.111-0.273c0.203,0.086,0.406,0.173,0.61,0.259c-0.038,0.093-0.086,0.179-0.122,0.274c-3.353,8.675,0.995,18.407,9.71,21.753c2,0.76,4.049,1.125,6.068,1.125c6.793,0,13.199-4.106,15.788-10.79c0.036-0.094,0.059-0.19,0.094-0.285c0.209,0.072,0.419,0.143,0.628,0.215c-0.032,0.095-0.073,0.185-0.103,0.281c-2.764,8.877,2.232,18.301,11.15,21.052c1.671,0.509,3.353,0.749,5.005,0.749c7.217,0,13.904-4.635,16.146-11.858c0.028-0.09,0.043-0.18,0.069-0.269c0.215,0.059,0.433,0.113,0.648,0.172c-0.024,0.092-0.057,0.179-0.08,0.272c-2.165,9.039,3.439,18.118,12.532,20.272c1.314,0.307,2.628,0.461,3.933,0.461c7.643,0,14.58-5.203,16.435-12.935c0.022-0.094,0.032-0.187,0.052-0.281c0.216,0.044,0.43,0.091,0.646,0.135c-0.017,0.092-0.045,0.18-0.061,0.272c-1.565,9.164,4.628,17.858,13.837,19.416c0.956,0.163,1.913,0.24,2.85,0.24c8.097,0,15.257-5.809,16.658-14.012c0.017-0.097,0.02-0.193,0.034-0.289c0.219,0.03,0.439,0.059,0.658,0.089c-0.012,0.097-0.035,0.19-0.045,0.288c-0.966,9.241,5.788,17.512,15.074,18.474c0.589,0.067,1.188,0.096,1.768,0.096c8.551,0,15.894-6.443,16.802-15.099c0.009-0.087,0.006-0.173,0.014-0.26c0.219,0.016,0.439,0.029,0.658,0.044c-0.005,0.089-0.021,0.175-0.024,0.264c-0.367,9.29,6.899,17.119,16.232,17.484c0.223,0.009,0.454,0.019,0.677,0.019c9.034,0,16.522-7.106,16.88-16.165c0.004-0.095-0.005-0.188-0.003-0.283c0.226,0.002,0.452,0.004,0.678,0.006c0.001,0.096-0.01,0.19-0.008,0.286c0.212,9.156,7.739,16.435,16.9,16.435c0.135,0,0.27-0.009,0.406-0.009c9.333-0.222,16.716-7.924,16.503-17.224c-0.002-0.09-0.016-0.177-0.02-0.267c0.222-0.012,0.445-0.019,0.667-0.032c0.006,0.09,0.002,0.179,0.01,0.27c0.773,8.761,8.154,15.368,16.832,15.368c0.493,0,0.985-0.02,1.488-0.068c9.305-0.808,16.184-8.973,15.373-18.233c-0.008-0.094-0.029-0.184-0.039-0.277c0.244-0.029,0.487-0.061,0.73-0.09c0.049,0.345,0.091,0.691,0.158,1.031c0.107,0.538,0.242,1.077,0.406,1.596c0.164,0.529,0.348,1.048,0.56,1.548c0.212,0.51,0.444,1.01,0.705,1.49c0.261,0.491,0.542,0.962,0.851,1.424c0.309,0.452,0.637,0.904,0.985,1.327c0.348,0.424,0.725,0.837,1.112,1.231c0.395,0.384,0.811,0.76,1.236,1.105c0.426,0.347,0.879,0.683,1.333,0.981c0.464,0.308,0.938,0.587,1.43,0.846c0.483,0.259,0.985,0.49,1.488,0.702c0.512,0.211,1.034,0.393,1.565,0.557c0.522,0.154,1.062,0.299,1.604,0.405c0.541,0.105,1.092,0.192,1.642,0.24c0.551,0.057,1.112,0.086,1.663,0.086c0.55,0,1.111-0.029,1.662-0.086c0.036-0.003,0.073-0.01,0.109-0.013c-6.443,3.445-10.126,10.808-8.545,18.285c1.614,7.606,8.146,12.924,15.586,13.338c-7.112,2.414-11.972,9.358-11.402,17.157c0.58,7.895,6.542,14.117,14.049,15.377c-7.478,1.606-13.14,8.155-13.314,16.099c-0.164,7.982,5.294,14.791,12.753,16.666c-7.642,0.98-13.874,7.106-14.647,15.069c-0.783,7.982,4.173,15.194,11.517,17.609c-7.72,0.423-14.397,6.125-15.721,14.031c-1.324,7.905,3.121,15.444,10.271,18.349c-7.73-0.068-14.744,5.174-16.59,12.983c-1.846,7.799,2.097,15.617,9.054,18.983c-7.71-0.586-15.073,4.193-17.44,11.858c-2.358,7.665,1.053,15.724,7.778,19.542c-7.652-1.106-15.325,3.144-18.204,10.626h-0.009c-2.88,7.473-0.048,15.733,6.367,20.013c-7.536-1.655-15.479,2.01-18.919,9.241c-3.42,7.203-1.265,15.608,4.744,20.359c-7.333-2.212-15.498,0.779-19.518,7.655c-4,6.857-2.6,15.359,2.918,20.609c-7.063-2.837-15.411-0.644-20.059,5.779c-4.619,6.399-4.069,14.916,0.82,20.675c-0.477-0.255-0.972-0.492-1.477-0.691c-0.503-0.212-1.034-0.404-1.556-0.558c-0.522-0.163-1.062-0.299-1.604-0.404c-0.541-0.115-1.092-0.193-1.642-0.251c-1.102-0.105-2.223-0.105-3.324,0c-0.551,0.058-1.101,0.135-1.643,0.251c-0.541,0.105-1.082,0.24-1.604,0.404c-0.522,0.154-1.053,0.346-1.555,0.558c-0.512,0.202-1.014,0.442-1.497,0.702c-0.493,0.25-0.966,0.539-1.421,0.846c-0.463,0.299-0.917,0.625-1.343,0.972c-0.426,0.355-0.841,0.731-1.228,1.115c-0.395,0.385-0.773,0.798-1.12,1.231c-0.348,0.424-0.677,0.875-0.986,1.327s-0.589,0.933-0.85,1.413c-0.26,0.481-0.493,0.991-0.705,1.491c-0.213,0.509-0.396,1.028-0.56,1.548c-0.164,0.53-0.3,1.068-0.406,1.606c-0.107,0.539-0.193,1.088-0.252,1.626c-0.048,0.548-0.077,1.106-0.077,1.654c0,0.558,0.029,1.116,0.077,1.664c0.058,0.538,0.145,1.087,0.252,1.625c0.106,0.539,0.242,1.077,0.406,1.606c0.164,0.519,0.347,1.039,0.56,1.549c0.212,0.501,0.444,1.01,0.705,1.49c0.261,0.481,0.541,0.962,0.85,1.414c0.31,0.461,0.638,0.903,0.986,1.327c0.347,0.432,0.725,0.846,1.12,1.23c0.387,0.385,0.802,0.76,1.228,1.116c0.426,0.347,0.879,0.673,1.343,0.971c0.455,0.308,0.928,0.596,1.421,0.847c0.483,0.259,0.985,0.5,1.497,0.702c0.502,0.211,1.033,0.404,1.555,0.558c0.522,0.163,1.063,0.298,1.604,0.404c0.542,0.116,1.092,0.193,1.643,0.25c0.551,0.058,1.112,0.086,1.662,0.086c0.551,0,1.112-0.028,1.663-0.086c0.55-0.057,1.101-0.134,1.642-0.25c0.542-0.106,1.082-0.24,1.604-0.404c0.522-0.154,1.053-0.347,1.556-0.558c0.512-0.202,1.014-0.442,1.497-0.702c0.493-0.251,0.966-0.539,1.42-0.847c0.464-0.298,0.918-0.625,1.344-0.971c0.425-0.356,0.841-0.731,1.227-1.116c0.396-0.384,0.773-0.798,1.121-1.23c0.348-0.424,0.677-0.866,0.986-1.327c0.309-0.453,0.589-0.933,0.85-1.414c0.26-0.481,0.493-0.99,0.705-1.49c0.212-0.51,0.396-1.029,0.56-1.549c0.155-0.529,0.3-1.067,0.406-1.606c0.107-0.538,0.193-1.087,0.242-1.625c0.059-0.548,0.087-1.106,0.087-1.664c0-0.548-0.028-1.105-0.087-1.654c-0.048-0.538-0.135-1.087-0.242-1.626c-0.053-0.271-0.117-0.543-0.186-0.813c2.524,6.74,8.958,10.949,15.83,10.949c1.846,0,3.71-0.298,5.556-0.933h-0.009c8.647-2.991,13.305-12.271,10.599-20.907c3.806,8.213,13.507,11.993,21.943,8.434c8.435-3.549,12.454-13.118,9.179-21.561c4.348,7.953,14.291,11.078,22.465,6.962c8.174-4.106,11.547-13.915,7.71-22.119c4.88,7.636,15.015,10.069,22.89,5.424c7.885-4.665,10.58-14.714,6.146-22.638c5.401,7.308,15.701,9.068,23.247,3.876c7.536-5.193,9.527-15.397,4.571-22.994c5.903,6.905,16.29,7.924,23.45,2.221c7.16-5.712,8.416-16.031,2.918-23.273c6.387,6.482,16.833,6.761,23.567,0.548c6.725-6.212,7.237-16.608,1.217-23.427c6.841,6.001,17.296,5.52,23.547-1.173c6.251-6.684,5.991-17.079-0.503-23.446c7.285,5.462,17.654,4.183,23.373-2.953c5.729-7.136,4.676-17.474-2.281-23.339c7.691,4.885,17.934,2.817,23.084-4.741h-0.009c5.159-7.559,3.294-17.811-4.107-23.109c8.048,4.269,18.106,1.404,22.648-6.55h-0.009c4.531-7.934,1.865-17.993-5.923-22.695c8.368,3.587,18.145-0.086,22.01-8.367c3.865-8.279,0.387-18.089-7.768-22.148c8.648,2.885,18.079-1.586,21.248-10.155c3.16-8.578-1.13-18.061-9.594-21.426c8.86,2.145,17.875-3.106,20.3-11.915c2.425-8.809-2.657-17.907-11.401-20.542c9.024,1.404,17.576-4.596,19.228-13.588h0.009c1.652-8.982-4.184-17.608-13.092-19.503c9.091,0.616,17.073-6.087,17.953-15.175C999.003,479.721,992.453,471.624,983.409,470.499z' />\n                        </g>\n\n                        <g id='shigeru_logo_glasses'>\n                            <path id='shigeru_logo_glasses_k' fill='#000000' d='M683.583,658.185c21.768-25.116,36.743-63.418,17.696-85.395c-16.87-19.465-158.908-27.628-182.853,0c-2.859,3.298-4.938,6.735-6.367,10.262c-3.866-0.51-7.894-0.78-12.054-0.78s-8.189,0.27-12.054,0.78c-1.429-3.527-3.509-6.964-6.367-10.262c-23.945-27.628-165.982-19.465-182.853,0c-19.047,21.977-4.072,60.279,17.696,85.395s124.079,19.674,141.493-0.419c11.203-12.926,27.693-32.956,31.656-52.956c3.237-0.46,6.72-0.72,10.429-0.72s7.191,0.26,10.429,0.72c3.964,20,20.453,40.029,31.656,52.956C559.504,677.859,661.815,683.301,683.583,658.185z' />\n                            <path id='shigeru_logo_glasses_w' fill='#ffffff' d='M683.583,658.185c21.768-25.116,36.743-63.418,17.696-85.395c-16.87-19.465-158.908-27.628-182.853,0c-2.859,3.298-4.938,6.735-6.367,10.262c-3.866-0.51-7.894-0.78-12.054-0.78s-8.189,0.27-12.054,0.78c-1.429-3.527-3.509-6.964-6.367-10.262c-23.945-27.628-165.982-19.465-182.853,0c-19.047,21.977-4.072,60.279,17.696,85.395s124.079,19.674,141.493-0.419c11.203-12.926,27.693-32.956,31.656-52.956c3.237-0.46,6.72-0.72,10.429-0.72s7.191,0.26,10.429,0.72c3.964,20,20.453,40.029,31.656,52.956C559.504,677.859,661.815,683.301,683.583,658.185z' />\n                        </g>\n\n                        <g id='shigeru_logo_kanji'>\n                            <path id='shigeru_logo_kanji_k' fill='#000000' d='M853.449,463.52c-0.17-0.341-0.341-0.682-0.511-1.023C853.595,463.182,853.357,462.73,853.449,463.52z M811.763,232.332c8.615,7.241,17.914,15.785,26.341,24.039c9.071,8.885,17.239,23.264,6.393,32.99c-1.312,1.177-8.154,1.933-10.23,2.557c-1.227-3.355-4.161-0.642-6.649-2.302c-2.427-1.618-3.985-3.845-6.905-5.626c-5.887-3.59-5.904-11.058-13.043-13.043c-7.251-2.016-19.978-1.076-26.085,1.534c-0.132,0.056-3.172,1.672-3.58,0.512c-0.764,0.729-3.101,2.925-5.115,2.302c11.32-6.07,22.883-13.451,32.223-22.249c-2.725-9.317-22.976-26.146-30.433-34.525c0.597,0.171,1.194,0.341,1.79,0.511c-0.085-0.256-0.17-0.511-0.256-0.767c-1.303-0.843-1.637-0.896-2.557-2.557c3.95,0.424,7.66,2.804,10.741,4.348c3.41,0.938,6.82,1.875,10.23,2.813C799.774,226.22,807.01,228.337,811.763,232.332z M784.655,368.897c-0.171-0.085-0.341-0.171-0.511-0.256c-0.171-0.256-0.341-0.512-0.511-0.767C784.578,368.352,784.165,367.993,784.655,368.897z M783.121,369.153c-0.979-0.669-1.246-0.864-1.534-2.302C782.098,367.618,782.609,368.385,783.121,369.153z M778.773,376.313c-0.341,0-0.682,0-1.023,0c-0.17-0.341-0.341-0.682-0.511-1.023c0.833-1.022,0.645-0.316,0.511-1.279c-0.996-0.431-0.389,0.25-0.767-0.767c0.085,0.17,0.17,0.341,0.256,0.511c0.17,0.085,0.341,0.17,0.511,0.256c0.597,0.426,1.194,0.852,1.79,1.279C778.481,376.006,778.925,375.044,778.773,376.313z M775.96,372.477c-0.426-0.597-0.852-1.194-1.279-1.79c1.331,0.422,1.517,0.922,2.302,1.79C776.642,372.477,776.301,372.477,775.96,372.477zM558.582,449.71c-3.81,6.172-4.996,11.819-8.184,16.367c-2.919-0.781-2.733,0.559-4.859,1.79c-7.242-0.825-15.485-2.671-18.925-6.393c0.173-3.109-5.093-6.301-6.649-8.951c-0.17-2.983-0.341-5.968-0.511-8.951c-1.933-6.477-4.839-14.122-5.371-21.994c-0.291-4.304,13.787-25.124,16.879-31.967c7.122-15.763,11.094-33.234,14.321-48.846c1.501-7.262-1.299-12.935,0.256-18.925c6.118,0.625,16.26,4.846,20.715,10.23c1.394,1.684,2.229,4.737,4.092,6.649c-0.171,0.511-0.341,1.023-0.511,1.534c0.004,3.245,2.097,10.166,3.58,14.321c1.464,4.103,0.519,9.244,1.79,13.81C583.13,396.843,572.047,427.896,558.582,449.71z M604.871,439.225c-0.085-0.17-0.17-0.341-0.256-0.511c-0.511-0.341-1.023-0.682-1.534-1.023C604.144,438.005,605.172,438.231,604.871,439.225z M616.123,445.363c0-0.171,0-0.341,0-0.511c0.085,0.085,0.17,0.17,0.256,0.256c1.025,0.356,0.445-0.086,0.767,0.767C616.805,445.704,616.464,445.533,616.123,445.363z M665.992,443.317c-1.705,0.284-4.539,2.114-7.416,1.023c0.767-0.597,1.535-1.194,2.302-1.79c0.852,0.256,1.705,0.511,2.557,0.767c0.085-0.426,0.171-0.852,0.256-1.279c0.852,0.085,1.705,0.171,2.557,0.256C665.417,442.943,665.476,442.397,665.992,443.317z M853.449,497.789c0.085,1.023,0.171,2.046,0.256,3.069c-7.219,3.477-14.395,9.235-24.039,7.161c-0.468-0.101-2.151-0.361-2.557,0.511c-1.849-1.783-15.094-4.007-19.436-5.626c-3.414-1.273-9.276-5.271-13.298-7.416c-22.93-12.231-42.817-27.263-61.377-44.499c-6.649-6.989-13.299-13.981-19.948-20.971c-2.34-2.933-4.805-8.199-7.928-9.462c-4.347,3.324-8.695,6.65-13.043,9.974c-2.649,2.129-7.501,2.322-10.485,5.371c-0.767-0.171-1.535-0.341-2.302-0.511c-3.486,1.97-4.326,3.984-8.439,6.138c-3.604,1.888-7.02-1.976-12.02,0c-6.142,2.427-12.08,6.042-19.18,6.649c-1.937-1.539-2.511-1.669-5.626-1.023c0,0.085,0,0.17,0,0.256c0.682,0.256,1.364,0.511,2.046,0.767c-7.025,0.052-25.91-5.14-30.177-8.695c0.067-1.779-12.016-9.64-15.089-10.997c0-0.085,0-0.17,0-0.256c0.341-0.256,0.682-0.511,1.023-0.767c1.184,1.162,0.232,0.771,1.79,0.767c-1.153-2.935-3.408-4.857-4.859-6.905c0.085,0,0.171,0,0.256,0c5.74,2.986,9.552,3.566,16.367,5.626c-0.426-0.682-0.852-1.364-1.279-2.046c12.987,7.766,26.23-1.133,38.872-3.069c-0.171-0.085-0.341-0.17-0.512-0.256c-0.597-0.17-1.194-0.341-1.79-0.511c2.299-1.002,4.74-0.577,6.905-1.279c5.609-1.819,12.154-9.048,18.157-8.439c-0.239-1.039,0.326-0.282-0.511-1.023c6.2-3.905,11.339-7.811,16.367-12.787c-0.597,0.085-1.194,0.171-1.79,0.256c0.085-0.256,0.17-0.511,0.256-0.767c10.221-2.868-0.155-15.619-3.836-22.505c-10.049-18.8-19.81-42.31-29.666-62.4c-3.188-0.303-13.189,3.267-15.856,4.092c-17.224,5.329-49.61,1.357-56.007-11.764c12.284-0.351,23.368-8.661,30.433-9.974c0.738-1.288,1.081-2.018,2.046-2.557c-0.085,0.341-0.17,0.682-0.256,1.023c3.239-1.364,6.479-2.728,9.718-4.092c-0.365-0.953-0.487-0.583,0-1.79c-1.493,0.328-0.928,0.308-2.302-0.256c0.085,0.426,0.17,0.852,0.256,1.279c-2.526,0.202-2.836,1.839-5.115,1.279c0.81-0.536,9.496-7.202,8.439-9.207c-0.085,0.171-0.17,0.341-0.256,0.511c-0.426,0.426-0.852,0.852-1.279,1.279c-0.341-0.085-0.682-0.17-1.023-0.256c0.17-0.426,0.341-0.852,0.511-1.279c-0.341,0-0.682,0-1.023,0c-0.341,0.767-0.682,1.535-1.023,2.302c0.907,0.166,0.956-0.391,0.767,0.512c-0.426,0.682-0.852,1.364-1.279,2.046c-0.341-0.171-0.682-0.341-1.023-0.511c0.085-0.256,0.17-0.511,0.256-0.767c-0.852,0.511-1.705,1.023-2.557,1.534c0-0.085,0-0.171,0-0.256c0.085-0.341,0.171-0.682,0.256-1.023c2.27-0.886,1.433-1.23,3.325-0.767c-0.171-0.597-0.341-1.194-0.511-1.79c3.777-3.539,7.634-7.819,9.974-12.02c0.341,0.341,0.682,0.682,1.023,1.023c0.085-0.341,0.17-0.682,0.256-1.023c-0.437-3.637,2.446-3.214,4.092-5.882c-0.426,0-0.852,0-1.279,0c0.852-0.852,1.705-1.705,2.557-2.557c0.035-0.132-5.882-30.433-5.882-30.433c8.906-0.113,13.085,5.842,20.459,9.974c0.17,0,0.341,0,0.511,0c-0.203-2.223,7.733-13.009,10.23-15.344c-1.192-0.464-0.548,0.322-1.023-0.767c1.103-0.206,0.589,0.333,1.279-0.767c-0.511,0.005-0.241-0.061,0-0.511c0.773-6.169,8.349-13.007,11.253-19.436c6.527-14.452,15.008-29.685,19.436-46.8c0-0.085,0-0.171,0-0.256c-8.038-0.162-45.994,4.783-49.102,7.928c-5.976,6.047-7.88,28.317-9.718,34.269c-1.119,3.623,1.525,8.772,1.023,11.508c-0.505,2.752-5.502,7.684-4.348,11.253c-1.875,1.534-3.751,3.069-5.626,4.603c-18.336,9.107-30.361-23.083-36.059-29.666c-0.256,0.085-0.511,0.171-0.767,0.256c-7.505,20.458-21.062,32.756-43.476,22.249c-7.957-3.73-15.725-4.666-21.738-10.485c-0.622-0.602-3.731-0.585-5.371-1.534c-1.79-1.705-3.581-3.41-5.37-5.115c-0.941-0.787-1.982,0.68-2.813,0.256c-4.029-2.057-8.509-6.405-9.718-11.764c4.67-4.781,22.502-8.329,29.154-5.882c11.216-3.023,24.695-4.159,33.758-9.462c2.391-1.4,17.071-5.222,16.623-6.905c1.229-2.031-0.466-4.013-1.023-6.138c-2.04-7.779-5.17-29.944-1.023-35.036c-0.256,0-0.511,0-0.767,0c0-0.085,0-0.17,0-0.256c9.5,0.881,23.17,17.056,28.131,23.528c2.048,2.672,3.459,7.501,6.138,8.695c9.461-2.301,18.926-4.604,28.387-6.905c2.503-0.445,8.22-0.044,11.253-1.79c1.705-2.216,3.41-4.433,5.115-6.649c-0.938,2.046-1.876,4.092-2.813,6.138c14.053-1.107,31.082-4.261,44.243-5.371c3.237-10.728,7.673-22.862,10.485-33.246c1.705-6.296,1.513-15.959,0.511-20.459c-0.1-0.447-0.604-2.349-0.767-1.79c-0.819-5.018,1.981-7.226-0.511-13.043c0.085-0.085,0.17-0.17,0.256-0.256c0.938,0.682,1.875,1.364,2.813,2.046c-0.256-1.108-0.511-2.216-0.767-3.325c0.682,0.426,1.364,0.852,2.046,1.279c-0.17-0.256-0.341-0.511-0.511-0.767c0-0.256,0-0.511,0-0.767c3.403,1.174,5.334,4.333,7.416,6.905c0.578,0.714,3.401,1.108,4.092,2.046c10.429,14.166,20.959,26.554,25.318,43.22c1.321,5.051-5.667,15.935-5.882,18.669c0.727,0.505,0.327,0.371,1.023,0.511c3.458,1.033,9.311-1.645,13.043,0.767c3.737,2.416,8.527,2.916,12.531,4.859c7.164,3.476,22.668,14.79,25.83,19.948c1.907,3.111,3.291,5.711,4.603,9.207c0.085,1.364,0.171,2.728,0.256,4.092c-1.966,3.424-5.117,8.164-8.439,10.741c-12.594,9.767-33.069-12.27-36.315-17.646c-1.787-2.96-7.899-10.49-12.531-9.207c-1.329,0.368-14.485,4.785-14.577,4.859c-3.368,2.689-3.584,8.768-6.649,11.764c-5.043,4.929-8.83,12.247-14.577,18.669c-0.597,1.96-1.194,3.922-1.79,5.882c-0.369,0.627-5.753,7.174-6.649,5.37c-2.472,3.324-4.945,6.65-7.416,9.974c0.341,0.17,0.682,0.341,1.023,0.511c-4.983,0.592-8.936,10.137-13.043,12.787c-0.992,0.26-0.197,0.334-1.279-0.256c-1.289,5.647-2.498,5.705-8.695,10.23c1.227,0.815-0.188,0.424-1.023,1.279c0.256,0.597,0.511,1.194,0.767,1.79c0.511-0.512,1.023-1.023,1.534-1.534c-0.085,0.171-0.17,0.341-0.256,0.511c-0.767,1.023-1.535,2.046-2.302,3.069c1.772,3.005,4.603,5.747,7.161,7.416c2.387-1.364,4.774-2.728,7.161-4.092c1.313-1.141,1.463-3.134,3.069-4.092c11.454-6.831,21.473-9.889,36.315-10.741c14.84-0.852,32.731,21.586,9.207,29.41c0.853,1.36,0.875,1.419-0.256,2.557c-11.369,0.627-23.171,13.91-31.712,19.436c-3.008,1.946-13.306,4.158-14.066,5.882c-2.36,5.357,3.424,13.178,3.836,18.669c0.594,7.924,13.026,45.452,20.459,51.404c0.085-0.085,0.17-0.171,0.256-0.256c5.771-15.143,15.191-31.323,21.226-46.544c2.677-6.753-1.162-17.288,1.023-20.971c7.442,1.681,12.332,7.665,15.856,10.997c8.461,7.999,12.96,15.625,16.112,25.574c0.848,2.677-1.21,7.622-1.279,10.997c-0.597,0.938-1.194,1.875-1.79,2.813c-2.504,8.034-7.357,14.869-12.531,21.226c-0.426,1.108-0.852,2.216-1.279,3.325c-5.213,6.059-12.579,14.067-15.856,21.994c16.458,18.744,36.254,34.247,56.263,48.59c4.609,3.304,12.618,7.516,16.879,10.23c2.579,1.642,5.812,1.627,7.416,3.58c0.341-0.085,0.682-0.17,1.023-0.256c0.341-3.41,0.682-6.82,1.023-10.23c-0.682-3.154-1.364-6.309-2.046-9.462c0.663,1.179,0.613,2.087,1.79,2.813c-6.047-20.825-7.51-31.956-17.39-49.358c-1.364-2.813-2.728-5.627-4.092-8.439c-0.085,0.256-0.171,0.511-0.256,0.767c-2.319-3.803-2.448-5.069-4.859-8.951c0.085,0,0.171,0,0.256,0c1.642,0.436,2.813,0.256,2.813,0.256c1.141,2.598,1.362,5.063,3.069,7.161c0.985-0.377,0.123-0.383,1.023-0.256c0.747-1.286-0.535-0.563-0.767-1.534c-0.256,0-0.511,0-0.767,0c1.225-0.729,0.757-0.607,2.046,0c-1.023-2.046-2.046-4.092-3.069-6.138c0.341-0.085,0.682-0.17,1.023-0.256c4.603,6.904,9.207,13.811,13.81,20.715c-0.701-8.608-10.484-18.442-14.066-27.62c0.341-0.085,0.682-0.171,1.023-0.256c0.085,0,0.17,0,0.256,0c1.228,3.986,13.102,16.46,16.623,21.994c8.288,13.026,17.493,25.38,27.876,38.105c0.597-0.256,1.194-0.511,1.79-0.767c0.085,0.256,0.171,0.511,0.256,0.767c-0.17,0.341-0.341,0.682-0.511,1.023c-0.17-0.341-0.341-0.682-0.511-1.023c-0.085,0.341-0.17,0.682-0.256,1.023c0.767,0.426,1.535,0.852,2.302,1.279c0.171,0.597,0.341,1.194,0.511,1.79c1.52-0.702,7.879,16.51,9.718,15.856c0.677,0.337,1.474,1.59,1.79,1.023c3.32,4.083,1.487,10.871,6.905,13.043c-0.17-0.682-0.341-1.364-0.511-2.046c0.256,0,0.511,0,0.767,0c0.793,1.975,1.096,1.321,2.302,2.813c1.279,4.432,2.557,8.866,3.836,13.298c0.852,0.682,1.705,1.364,2.557,2.046C862.36,483.385,855.427,496.909,853.449,497.789z M601.546,425.415c-1.472,0.311-4.167-1.041-5.371-2.302C597.966,423.88,599.756,424.648,601.546,425.415z M598.733,422.602c2.12,0.329,3.588,0.694,4.859,1.79C601.973,423.795,600.352,423.199,598.733,422.602z M606.149,424.648c0.256,0.085,0.511,0.17,0.767,0.256C606.551,424.811,606.636,425.016,606.149,424.648z M651.927,416.72c0.085-0.17,0.171-0.341,0.256-0.511c0.256,0.085,0.511,0.17,0.767,0.256C652.609,416.549,652.268,416.635,651.927,416.72z M656.018,414.418c0.256,0,0.511,0,0.767,0C656.066,414.685,656.656,414.795,656.018,414.418z M661.133,411.605c0.256,0,0.511,0,0.767,0C661.214,411.949,661.252,411.703,661.133,411.605z M664.202,409.559c0.341,0.171,0.682,0.341,1.023,0.511c-0.256,0-0.511,0-0.767,0C664.373,409.9,664.287,409.73,664.202,409.559z M672.13,404.7c-0.719,0.266-0.13,0.377-0.767,0C671.619,404.7,671.874,404.7,672.13,404.7z M671.619,403.677c1.108-0.597,2.216-1.194,3.325-1.79c0.256,0.085,0.511,0.17,0.767,0.256c-1.256,0.977-2.918,1.811-3.58,2.046C671.96,404.018,671.789,403.848,671.619,403.677zM601.802,292.942c0.256,0.171,0.511,0.341,0.767,0.511C601.654,293.337,601.909,293.582,601.802,292.942z M605.382,292.942c-0.085-0.341-0.17-0.682-0.256-1.023C605.925,292.608,605.877,292.011,605.382,292.942z M605.126,290.641c0.256-0.256,0.511-0.511,0.767-0.767C605.894,289.873,606.133,291.047,605.126,290.641z M609.73,288.083c0-0.426,0-0.852,0-1.279c0.341,0.341,0.682,0.682,1.023,1.023c-0.085,0.085-0.17,0.17-0.256,0.256C610.241,288.083,609.985,288.083,609.73,288.083zM772.891,275.808c-0.426,0.17-0.852,0.341-1.279,0.511c0.256-0.256,0.511-0.511,0.767-0.767C772.55,275.637,772.721,275.723,772.891,275.808z M689.52,219.034c0-0.085,0-0.17,0-0.256c0.597-0.767,1.194-1.534,1.79-2.302C692.322,217.07,690.625,218.448,689.52,219.034z M675.71,234.89c-0.537,0.881-0.207,0.622-1.279,1.023c0.256-0.341,0.512-0.682,0.767-1.023C675.369,234.89,675.54,234.89,675.71,234.89z M673.664,237.703c-0.426,0.256-0.852,0.511-1.279,0.767c0.085-0.341,0.171-0.682,0.256-1.023c0.426-0.511,0.852-1.023,1.279-1.534C674.501,236.312,674.066,236.848,673.664,237.703z M714.838,276.831c-0.597,0.511-1.194,1.023-1.79,1.534c0.341-0.511,0.682-1.023,1.023-1.534C714.327,276.831,714.583,276.831,714.838,276.831z M707.166,282.201c0.085-0.341,0.17-0.682,0.256-1.023C707.344,281.73,707.587,281.629,707.166,282.201z M792.327,408.025c0.341,0.171,0.682,0.341,1.023,0.511c-0.256,0-0.511,0-0.767,0C792.498,408.366,792.412,408.195,792.327,408.025zM784.144,374.012c0.988,0.56,0.825,0.431,1.023,1.79c-0.17-0.341-0.341-0.682-0.511-1.023C784.485,374.523,784.314,374.267,784.144,374.012z M612.543,178.627c3.521-0.988,10.992-6.833,11.508-9.718c-2.609,2.121-9.623,3.171-13.043,6.649C611.52,176.581,612.031,177.604,612.543,178.627z M633.769,273.506c-0.785,2.136-7.978,4.11-6.649,6.905c-2.742,0.661-3.127,2.715-5.115,2.557c0.085-0.085,0.17-0.17,0.256-0.256c0.597-0.682,1.194-1.364,1.79-2.046c-0.171,0.171-0.341,0.341-0.511,0.511c-1.591,0.588-2.699,2.031-3.58,3.325c1.532-0.587,1.337-1.133,2.557-0.256c-1.414,0.323-4.294,2.96-5.626,4.348c7.057-1.085,14.227-5.842,18.413-8.695c-0.341-0.085-0.682-0.17-1.023-0.256c0.535-0.792,1.004-1.242,1.023-1.279C635.633,277.109,635.016,274.227,633.769,273.506zM616.89,278.109c0.664,0.462,0.312,0.083,0.256,0.767c0.085,0.085,0.17,0.17,0.256,0.256c0.511-0.511,1.023-1.023,1.534-1.534C618.255,277.768,617.572,277.939,616.89,278.109z M625.586,278.621c-0.256,0.426-0.511,0.852-0.767,1.279c0.597-0.341,1.194-0.682,1.79-1.023C626.268,278.791,625.927,278.706,625.586,278.621z M619.192,279.132c-0.17,0.17-0.341,0.341-0.511,0.511C618.944,279.614,619.9,278.986,619.192,279.132z M787.724,385.776c0.759,0.252,0.114,0.37,1.023,0c-1.325-0.56-1.567-1.058-2.557-1.79C786.6,385.251,786.556,385.261,787.724,385.776zM637.094,425.159c0.597-0.341,1.194-0.682,1.79-1.023c-0.341,0-0.682,0-1.023,0C637.605,424.477,637.35,424.818,637.094,425.159zM669.317,437.435c-0.511,0.341-1.023,0.682-1.534,1.023c0.597,0.085,1.194,0.17,1.79,0.256c0.35-0.555-0.164-0.253,0.511-0.511C669.581,437.338,670.17,437.944,669.317,437.435z M664.458,440.248c0.341-0.085,0.682-0.17,1.023-0.256c-0.171-0.085-0.341-0.17-0.511-0.256C664.799,439.907,664.628,440.077,664.458,440.248z' />\n                            <path id='shigeru_logo_kanji_w' fill='#ffffff' d='M853.449,463.52c-0.17-0.341-0.341-0.682-0.511-1.023C853.595,463.182,853.357,462.73,853.449,463.52z M811.763,232.332c8.615,7.241,17.914,15.785,26.341,24.039c9.071,8.885,17.239,23.264,6.393,32.99c-1.312,1.177-8.154,1.933-10.23,2.557c-1.227-3.355-4.161-0.642-6.649-2.302c-2.427-1.618-3.985-3.845-6.905-5.626c-5.887-3.59-5.904-11.058-13.043-13.043c-7.251-2.016-19.978-1.076-26.085,1.534c-0.132,0.056-3.172,1.672-3.58,0.512c-0.764,0.729-3.101,2.925-5.115,2.302c11.32-6.07,22.883-13.451,32.223-22.249c-2.725-9.317-22.976-26.146-30.433-34.525c0.597,0.171,1.194,0.341,1.79,0.511c-0.085-0.256-0.17-0.511-0.256-0.767c-1.303-0.843-1.637-0.896-2.557-2.557c3.95,0.424,7.66,2.804,10.741,4.348c3.41,0.938,6.82,1.875,10.23,2.813C799.774,226.22,807.01,228.337,811.763,232.332z M784.655,368.897c-0.171-0.085-0.341-0.171-0.511-0.256c-0.171-0.256-0.341-0.512-0.511-0.767C784.578,368.352,784.165,367.993,784.655,368.897z M783.121,369.153c-0.979-0.669-1.246-0.864-1.534-2.302C782.098,367.618,782.609,368.385,783.121,369.153z M778.773,376.313c-0.341,0-0.682,0-1.023,0c-0.17-0.341-0.341-0.682-0.511-1.023c0.833-1.022,0.645-0.316,0.511-1.279c-0.996-0.431-0.389,0.25-0.767-0.767c0.085,0.17,0.17,0.341,0.256,0.511c0.17,0.085,0.341,0.17,0.511,0.256c0.597,0.426,1.194,0.852,1.79,1.279C778.481,376.006,778.925,375.044,778.773,376.313z M775.96,372.477c-0.426-0.597-0.852-1.194-1.279-1.79c1.331,0.422,1.517,0.922,2.302,1.79C776.642,372.477,776.301,372.477,775.96,372.477zM558.582,449.71c-3.81,6.172-4.996,11.819-8.184,16.367c-2.919-0.781-2.733,0.559-4.859,1.79c-7.242-0.825-15.485-2.671-18.925-6.393c0.173-3.109-5.093-6.301-6.649-8.951c-0.17-2.983-0.341-5.968-0.511-8.951c-1.933-6.477-4.839-14.122-5.371-21.994c-0.291-4.304,13.787-25.124,16.879-31.967c7.122-15.763,11.094-33.234,14.321-48.846c1.501-7.262-1.299-12.935,0.256-18.925c6.118,0.625,16.26,4.846,20.715,10.23c1.394,1.684,2.229,4.737,4.092,6.649c-0.171,0.511-0.341,1.023-0.511,1.534c0.004,3.245,2.097,10.166,3.58,14.321c1.464,4.103,0.519,9.244,1.79,13.81C583.13,396.843,572.047,427.896,558.582,449.71z M604.871,439.225c-0.085-0.17-0.17-0.341-0.256-0.511c-0.511-0.341-1.023-0.682-1.534-1.023C604.144,438.005,605.172,438.231,604.871,439.225z M616.123,445.363c0-0.171,0-0.341,0-0.511c0.085,0.085,0.17,0.17,0.256,0.256c1.025,0.356,0.445-0.086,0.767,0.767C616.805,445.704,616.464,445.533,616.123,445.363z M665.992,443.317c-1.705,0.284-4.539,2.114-7.416,1.023c0.767-0.597,1.535-1.194,2.302-1.79c0.852,0.256,1.705,0.511,2.557,0.767c0.085-0.426,0.171-0.852,0.256-1.279c0.852,0.085,1.705,0.171,2.557,0.256C665.417,442.943,665.476,442.397,665.992,443.317z M853.449,497.789c0.085,1.023,0.171,2.046,0.256,3.069c-7.219,3.477-14.395,9.235-24.039,7.161c-0.468-0.101-2.151-0.361-2.557,0.511c-1.849-1.783-15.094-4.007-19.436-5.626c-3.414-1.273-9.276-5.271-13.298-7.416c-22.93-12.231-42.817-27.263-61.377-44.499c-6.649-6.989-13.299-13.981-19.948-20.971c-2.34-2.933-4.805-8.199-7.928-9.462c-4.347,3.324-8.695,6.65-13.043,9.974c-2.649,2.129-7.501,2.322-10.485,5.371c-0.767-0.171-1.535-0.341-2.302-0.511c-3.486,1.97-4.326,3.984-8.439,6.138c-3.604,1.888-7.02-1.976-12.02,0c-6.142,2.427-12.08,6.042-19.18,6.649c-1.937-1.539-2.511-1.669-5.626-1.023c0,0.085,0,0.17,0,0.256c0.682,0.256,1.364,0.511,2.046,0.767c-7.025,0.052-25.91-5.14-30.177-8.695c0.067-1.779-12.016-9.64-15.089-10.997c0-0.085,0-0.17,0-0.256c0.341-0.256,0.682-0.511,1.023-0.767c1.184,1.162,0.232,0.771,1.79,0.767c-1.153-2.935-3.408-4.857-4.859-6.905c0.085,0,0.171,0,0.256,0c5.74,2.986,9.552,3.566,16.367,5.626c-0.426-0.682-0.852-1.364-1.279-2.046c12.987,7.766,26.23-1.133,38.872-3.069c-0.171-0.085-0.341-0.17-0.512-0.256c-0.597-0.17-1.194-0.341-1.79-0.511c2.299-1.002,4.74-0.577,6.905-1.279c5.609-1.819,12.154-9.048,18.157-8.439c-0.239-1.039,0.326-0.282-0.511-1.023c6.2-3.905,11.339-7.811,16.367-12.787c-0.597,0.085-1.194,0.171-1.79,0.256c0.085-0.256,0.17-0.511,0.256-0.767c10.221-2.868-0.155-15.619-3.836-22.505c-10.049-18.8-19.81-42.31-29.666-62.4c-3.188-0.303-13.189,3.267-15.856,4.092c-17.224,5.329-49.61,1.357-56.007-11.764c12.284-0.351,23.368-8.661,30.433-9.974c0.738-1.288,1.081-2.018,2.046-2.557c-0.085,0.341-0.17,0.682-0.256,1.023c3.239-1.364,6.479-2.728,9.718-4.092c-0.365-0.953-0.487-0.583,0-1.79c-1.493,0.328-0.928,0.308-2.302-0.256c0.085,0.426,0.17,0.852,0.256,1.279c-2.526,0.202-2.836,1.839-5.115,1.279c0.81-0.536,9.496-7.202,8.439-9.207c-0.085,0.171-0.17,0.341-0.256,0.511c-0.426,0.426-0.852,0.852-1.279,1.279c-0.341-0.085-0.682-0.17-1.023-0.256c0.17-0.426,0.341-0.852,0.511-1.279c-0.341,0-0.682,0-1.023,0c-0.341,0.767-0.682,1.535-1.023,2.302c0.907,0.166,0.956-0.391,0.767,0.512c-0.426,0.682-0.852,1.364-1.279,2.046c-0.341-0.171-0.682-0.341-1.023-0.511c0.085-0.256,0.17-0.511,0.256-0.767c-0.852,0.511-1.705,1.023-2.557,1.534c0-0.085,0-0.171,0-0.256c0.085-0.341,0.171-0.682,0.256-1.023c2.27-0.886,1.433-1.23,3.325-0.767c-0.171-0.597-0.341-1.194-0.511-1.79c3.777-3.539,7.634-7.819,9.974-12.02c0.341,0.341,0.682,0.682,1.023,1.023c0.085-0.341,0.17-0.682,0.256-1.023c-0.437-3.637,2.446-3.214,4.092-5.882c-0.426,0-0.852,0-1.279,0c0.852-0.852,1.705-1.705,2.557-2.557c0.035-0.132-5.882-30.433-5.882-30.433c8.906-0.113,13.085,5.842,20.459,9.974c0.17,0,0.341,0,0.511,0c-0.203-2.223,7.733-13.009,10.23-15.344c-1.192-0.464-0.548,0.322-1.023-0.767c1.103-0.206,0.589,0.333,1.279-0.767c-0.511,0.005-0.241-0.061,0-0.511c0.773-6.169,8.349-13.007,11.253-19.436c6.527-14.452,15.008-29.685,19.436-46.8c0-0.085,0-0.171,0-0.256c-8.038-0.162-45.994,4.783-49.102,7.928c-5.976,6.047-7.88,28.317-9.718,34.269c-1.119,3.623,1.525,8.772,1.023,11.508c-0.505,2.752-5.502,7.684-4.348,11.253c-1.875,1.534-3.751,3.069-5.626,4.603c-18.336,9.107-30.361-23.083-36.059-29.666c-0.256,0.085-0.511,0.171-0.767,0.256c-7.505,20.458-21.062,32.756-43.476,22.249c-7.957-3.73-15.725-4.666-21.738-10.485c-0.622-0.602-3.731-0.585-5.371-1.534c-1.79-1.705-3.581-3.41-5.37-5.115c-0.941-0.787-1.982,0.68-2.813,0.256c-4.029-2.057-8.509-6.405-9.718-11.764c4.67-4.781,22.502-8.329,29.154-5.882c11.216-3.023,24.695-4.159,33.758-9.462c2.391-1.4,17.071-5.222,16.623-6.905c1.229-2.031-0.466-4.013-1.023-6.138c-2.04-7.779-5.17-29.944-1.023-35.036c-0.256,0-0.511,0-0.767,0c0-0.085,0-0.17,0-0.256c9.5,0.881,23.17,17.056,28.131,23.528c2.048,2.672,3.459,7.501,6.138,8.695c9.461-2.301,18.926-4.604,28.387-6.905c2.503-0.445,8.22-0.044,11.253-1.79c1.705-2.216,3.41-4.433,5.115-6.649c-0.938,2.046-1.876,4.092-2.813,6.138c14.053-1.107,31.082-4.261,44.243-5.371c3.237-10.728,7.673-22.862,10.485-33.246c1.705-6.296,1.513-15.959,0.511-20.459c-0.1-0.447-0.604-2.349-0.767-1.79c-0.819-5.018,1.981-7.226-0.511-13.043c0.085-0.085,0.17-0.17,0.256-0.256c0.938,0.682,1.875,1.364,2.813,2.046c-0.256-1.108-0.511-2.216-0.767-3.325c0.682,0.426,1.364,0.852,2.046,1.279c-0.17-0.256-0.341-0.511-0.511-0.767c0-0.256,0-0.511,0-0.767c3.403,1.174,5.334,4.333,7.416,6.905c0.578,0.714,3.401,1.108,4.092,2.046c10.429,14.166,20.959,26.554,25.318,43.22c1.321,5.051-5.667,15.935-5.882,18.669c0.727,0.505,0.327,0.371,1.023,0.511c3.458,1.033,9.311-1.645,13.043,0.767c3.737,2.416,8.527,2.916,12.531,4.859c7.164,3.476,22.668,14.79,25.83,19.948c1.907,3.111,3.291,5.711,4.603,9.207c0.085,1.364,0.171,2.728,0.256,4.092c-1.966,3.424-5.117,8.164-8.439,10.741c-12.594,9.767-33.069-12.27-36.315-17.646c-1.787-2.96-7.899-10.49-12.531-9.207c-1.329,0.368-14.485,4.785-14.577,4.859c-3.368,2.689-3.584,8.768-6.649,11.764c-5.043,4.929-8.83,12.247-14.577,18.669c-0.597,1.96-1.194,3.922-1.79,5.882c-0.369,0.627-5.753,7.174-6.649,5.37c-2.472,3.324-4.945,6.65-7.416,9.974c0.341,0.17,0.682,0.341,1.023,0.511c-4.983,0.592-8.936,10.137-13.043,12.787c-0.992,0.26-0.197,0.334-1.279-0.256c-1.289,5.647-2.498,5.705-8.695,10.23c1.227,0.815-0.188,0.424-1.023,1.279c0.256,0.597,0.511,1.194,0.767,1.79c0.511-0.512,1.023-1.023,1.534-1.534c-0.085,0.171-0.17,0.341-0.256,0.511c-0.767,1.023-1.535,2.046-2.302,3.069c1.772,3.005,4.603,5.747,7.161,7.416c2.387-1.364,4.774-2.728,7.161-4.092c1.313-1.141,1.463-3.134,3.069-4.092c11.454-6.831,21.473-9.889,36.315-10.741c14.84-0.852,32.731,21.586,9.207,29.41c0.853,1.36,0.875,1.419-0.256,2.557c-11.369,0.627-23.171,13.91-31.712,19.436c-3.008,1.946-13.306,4.158-14.066,5.882c-2.36,5.357,3.424,13.178,3.836,18.669c0.594,7.924,13.026,45.452,20.459,51.404c0.085-0.085,0.17-0.171,0.256-0.256c5.771-15.143,15.191-31.323,21.226-46.544c2.677-6.753-1.162-17.288,1.023-20.971c7.442,1.681,12.332,7.665,15.856,10.997c8.461,7.999,12.96,15.625,16.112,25.574c0.848,2.677-1.21,7.622-1.279,10.997c-0.597,0.938-1.194,1.875-1.79,2.813c-2.504,8.034-7.357,14.869-12.531,21.226c-0.426,1.108-0.852,2.216-1.279,3.325c-5.213,6.059-12.579,14.067-15.856,21.994c16.458,18.744,36.254,34.247,56.263,48.59c4.609,3.304,12.618,7.516,16.879,10.23c2.579,1.642,5.812,1.627,7.416,3.58c0.341-0.085,0.682-0.17,1.023-0.256c0.341-3.41,0.682-6.82,1.023-10.23c-0.682-3.154-1.364-6.309-2.046-9.462c0.663,1.179,0.613,2.087,1.79,2.813c-6.047-20.825-7.51-31.956-17.39-49.358c-1.364-2.813-2.728-5.627-4.092-8.439c-0.085,0.256-0.171,0.511-0.256,0.767c-2.319-3.803-2.448-5.069-4.859-8.951c0.085,0,0.171,0,0.256,0c1.642,0.436,2.813,0.256,2.813,0.256c1.141,2.598,1.362,5.063,3.069,7.161c0.985-0.377,0.123-0.383,1.023-0.256c0.747-1.286-0.535-0.563-0.767-1.534c-0.256,0-0.511,0-0.767,0c1.225-0.729,0.757-0.607,2.046,0c-1.023-2.046-2.046-4.092-3.069-6.138c0.341-0.085,0.682-0.17,1.023-0.256c4.603,6.904,9.207,13.811,13.81,20.715c-0.701-8.608-10.484-18.442-14.066-27.62c0.341-0.085,0.682-0.171,1.023-0.256c0.085,0,0.17,0,0.256,0c1.228,3.986,13.102,16.46,16.623,21.994c8.288,13.026,17.493,25.38,27.876,38.105c0.597-0.256,1.194-0.511,1.79-0.767c0.085,0.256,0.171,0.511,0.256,0.767c-0.17,0.341-0.341,0.682-0.511,1.023c-0.17-0.341-0.341-0.682-0.511-1.023c-0.085,0.341-0.17,0.682-0.256,1.023c0.767,0.426,1.535,0.852,2.302,1.279c0.171,0.597,0.341,1.194,0.511,1.79c1.52-0.702,7.879,16.51,9.718,15.856c0.677,0.337,1.474,1.59,1.79,1.023c3.32,4.083,1.487,10.871,6.905,13.043c-0.17-0.682-0.341-1.364-0.511-2.046c0.256,0,0.511,0,0.767,0c0.793,1.975,1.096,1.321,2.302,2.813c1.279,4.432,2.557,8.866,3.836,13.298c0.852,0.682,1.705,1.364,2.557,2.046C862.36,483.385,855.427,496.909,853.449,497.789z M601.546,425.415c-1.472,0.311-4.167-1.041-5.371-2.302C597.966,423.88,599.756,424.648,601.546,425.415z M598.733,422.602c2.12,0.329,3.588,0.694,4.859,1.79C601.973,423.795,600.352,423.199,598.733,422.602z M606.149,424.648c0.256,0.085,0.511,0.17,0.767,0.256C606.551,424.811,606.636,425.016,606.149,424.648z M651.927,416.72c0.085-0.17,0.171-0.341,0.256-0.511c0.256,0.085,0.511,0.17,0.767,0.256C652.609,416.549,652.268,416.635,651.927,416.72z M656.018,414.418c0.256,0,0.511,0,0.767,0C656.066,414.685,656.656,414.795,656.018,414.418z M661.133,411.605c0.256,0,0.511,0,0.767,0C661.214,411.949,661.252,411.703,661.133,411.605z M664.202,409.559c0.341,0.171,0.682,0.341,1.023,0.511c-0.256,0-0.511,0-0.767,0C664.373,409.9,664.287,409.73,664.202,409.559z M672.13,404.7c-0.719,0.266-0.13,0.377-0.767,0C671.619,404.7,671.874,404.7,672.13,404.7z M671.619,403.677c1.108-0.597,2.216-1.194,3.325-1.79c0.256,0.085,0.511,0.17,0.767,0.256c-1.256,0.977-2.918,1.811-3.58,2.046C671.96,404.018,671.789,403.848,671.619,403.677zM601.802,292.942c0.256,0.171,0.511,0.341,0.767,0.511C601.654,293.337,601.909,293.582,601.802,292.942z M605.382,292.942c-0.085-0.341-0.17-0.682-0.256-1.023C605.925,292.608,605.877,292.011,605.382,292.942z M605.126,290.641c0.256-0.256,0.511-0.511,0.767-0.767C605.894,289.873,606.133,291.047,605.126,290.641z M609.73,288.083c0-0.426,0-0.852,0-1.279c0.341,0.341,0.682,0.682,1.023,1.023c-0.085,0.085-0.17,0.17-0.256,0.256C610.241,288.083,609.985,288.083,609.73,288.083zM772.891,275.808c-0.426,0.17-0.852,0.341-1.279,0.511c0.256-0.256,0.511-0.511,0.767-0.767C772.55,275.637,772.721,275.723,772.891,275.808z M689.52,219.034c0-0.085,0-0.17,0-0.256c0.597-0.767,1.194-1.534,1.79-2.302C692.322,217.07,690.625,218.448,689.52,219.034z M675.71,234.89c-0.537,0.881-0.207,0.622-1.279,1.023c0.256-0.341,0.512-0.682,0.767-1.023C675.369,234.89,675.54,234.89,675.71,234.89z M673.664,237.703c-0.426,0.256-0.852,0.511-1.279,0.767c0.085-0.341,0.171-0.682,0.256-1.023c0.426-0.511,0.852-1.023,1.279-1.534C674.501,236.312,674.066,236.848,673.664,237.703z M714.838,276.831c-0.597,0.511-1.194,1.023-1.79,1.534c0.341-0.511,0.682-1.023,1.023-1.534C714.327,276.831,714.583,276.831,714.838,276.831z M707.166,282.201c0.085-0.341,0.17-0.682,0.256-1.023C707.344,281.73,707.587,281.629,707.166,282.201z M792.327,408.025c0.341,0.171,0.682,0.341,1.023,0.511c-0.256,0-0.511,0-0.767,0C792.498,408.366,792.412,408.195,792.327,408.025zM784.144,374.012c0.988,0.56,0.825,0.431,1.023,1.79c-0.17-0.341-0.341-0.682-0.511-1.023C784.485,374.523,784.314,374.267,784.144,374.012z M612.543,178.627c3.521-0.988,10.992-6.833,11.508-9.718c-2.609,2.121-9.623,3.171-13.043,6.649C611.52,176.581,612.031,177.604,612.543,178.627z M633.769,273.506c-0.785,2.136-7.978,4.11-6.649,6.905c-2.742,0.661-3.127,2.715-5.115,2.557c0.085-0.085,0.17-0.17,0.256-0.256c0.597-0.682,1.194-1.364,1.79-2.046c-0.171,0.171-0.341,0.341-0.511,0.511c-1.591,0.588-2.699,2.031-3.58,3.325c1.532-0.587,1.337-1.133,2.557-0.256c-1.414,0.323-4.294,2.96-5.626,4.348c7.057-1.085,14.227-5.842,18.413-8.695c-0.341-0.085-0.682-0.17-1.023-0.256c0.535-0.792,1.004-1.242,1.023-1.279C635.633,277.109,635.016,274.227,633.769,273.506zM616.89,278.109c0.664,0.462,0.312,0.083,0.256,0.767c0.085,0.085,0.17,0.17,0.256,0.256c0.511-0.511,1.023-1.023,1.534-1.534C618.255,277.768,617.572,277.939,616.89,278.109z M625.586,278.621c-0.256,0.426-0.511,0.852-0.767,1.279c0.597-0.341,1.194-0.682,1.79-1.023C626.268,278.791,625.927,278.706,625.586,278.621z M619.192,279.132c-0.17,0.17-0.341,0.341-0.511,0.511C618.944,279.614,619.9,278.986,619.192,279.132z M787.724,385.776c0.759,0.252,0.114,0.37,1.023,0c-1.325-0.56-1.567-1.058-2.557-1.79C786.6,385.251,786.556,385.261,787.724,385.776zM637.094,425.159c0.597-0.341,1.194-0.682,1.79-1.023c-0.341,0-0.682,0-1.023,0C637.605,424.477,637.35,424.818,637.094,425.159zM669.317,437.435c-0.511,0.341-1.023,0.682-1.534,1.023c0.597,0.085,1.194,0.17,1.79,0.256c0.35-0.555-0.164-0.253,0.511-0.511C669.581,437.338,670.17,437.944,669.317,437.435z M664.458,440.248c0.341-0.085,0.682-0.17,1.023-0.256c-0.171-0.085-0.341-0.17-0.511-0.256C664.799,439.907,664.628,440.077,664.458,440.248z' />\n                        </g>\n\n                    {/* #region ==================== PATHS ==================== */}\n\n                    </svg>\n\n                </A>\n\n            {/* #endregion ==================== LOGO (inline SVG) ==================== */}\n\n            </div>\n\n\n            <div className='navBarContainer'>\n\n                {/* <div className='workNav' id='workNavBarID' ref={e => { workNav_Ref = e }}>\n                    <div className='activeEmplDiv' id='activeEmplDivID' ref={activeEmplDiv_Ref}></div>\n                    {WorkNavItems}\n                </div> */}\n\n                <div className='resumeNav' id='resumeNavBarID' onClick={() => {props.setResumeModalOpen(!props.resumeModalOpen)}} ref={e => { resumeNav_Ref = e }}>\n                    <p className='resumeDdl' id='resumeDdlID'>download resume</p>\n                </div>\n\n                <div className='navBar' id='navBarID' ref={navBar_Ref}>\n\n                    <div className='activeNavDiv' id='activeNavDivID' ref={activeNavDiv_Ref}></div>\n\n                    {/* <A className='navItem' href='/shigimcp2021' id='homeID' onClick={() => { setWorkNavShow(workNavShow.reverse()); setResumeNavShow(resumeNavShow.reverse()); setMobileNavShow(false); }}>Home</A>\n                    <A className='navItem' href={initEmployer} id='workID' onClick={() => { setWorkNavShow(workNavShow.play()); setResumeNavShow(resumeNavShow.reverse()); setMobileNavShow(false); }}>Work</A>\n                    <A className='navItem' href='/shigimcp2021/isotope' id='isotopeID' onClick={() => { setWorkNavShow(workNavShow.reverse()); setResumeNavShow(resumeNavShow.reverse()); setMobileNavShow(false); }}>Isotope</A>\n                    <A className='navItem' href='/shigimcp2021/work' id='workID' onClick={() => { setWorkNavShow(workNavShow.reverse()); setResumeNavShow(resumeNavShow.reverse()); setMobileNavShow(false); }}>Work (Isotope)</A>\n                    <A className='navItem' href='/shigimcp2021/about' id='aboutID' onClick={() => { setWorkNavShow(workNavShow.reverse()); setResumeNavShow(resumeNavShow.reverse()); setMobileNavShow(false); }}>About</A>\n                    <A className='navItem' href='/shigimcp2021/resume' id='resumeID' onClick={() => { setWorkNavShow(workNavShow.reverse()); setResumeNavShow(resumeNavShow.play()); setMobileNavShow(false); }}>Resume</A>\n                    <A className='navItem' href='/shigimcp2021/contact' id='contactID' onClick={() => { setWorkNavShow(workNavShow.reverse()); setResumeNavShow(resumeNavShow.reverse()); setMobileNavShow(false); }}>Contact</A> */}\n\n                    <A className='navItem' href='/shigimcp2021' id='homeID' onClick={() => { setResumeNavShow(resumeNavShow.reverse()); setMobileNavShow(false); }}>Home</A>\n                    <A className='navItem' href='/shigimcp2021/work' id='workID' onClick={() => { setResumeNavShow(resumeNavShow.reverse()); setMobileNavShow(false); }}>Work (Isotope)</A>\n                    <A className='navItem' href='/shigimcp2021/about' id='aboutID' onClick={() => { setResumeNavShow(resumeNavShow.reverse()); setMobileNavShow(false); }}>About</A>\n                    <A className='navItem' href='/shigimcp2021/resume' id='resumeID' onClick={() => { setResumeNavShow(resumeNavShow.play()); setMobileNavShow(false); }}>Resume</A>\n                    <A className='navItem' href='/shigimcp2021/contact' id='contactID' onClick={() => { setResumeNavShow(resumeNavShow.reverse()); setMobileNavShow(false); }}>Contact</A>\n\n                </div>\n\n            </div>\n\n\n            <div className='navBurgerDiv' id='navBurgerID'>\n\n                <Burger\n                    onClick={() => { setMobileNavShow(!mobileNavShow) }}\n                    active={mobileNavShow}\n                    burger='spring'\n                    color='#cccccc'\n                    hoverOpacity={0.8}\n                    scale={0.75}\n                    // style={{ border: '1px solid #ff00ff' }}\n                />\n\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\n\n// import '../stylesheets/Wrapper.scss';\n\n\nexport const Wrapper = ({children}) => {\n    return (\n        <div className='wrapper'>\n            {children}\n        </div>\n    )\n}","// #region ==================== IMPORTS ====================\n\nimport React, { useRef, useMemo } from 'react';\n\nimport * as THREE from 'three';\nimport { useLoader, useUpdate } from 'react-three-fiber';\n\n// #endregion ==================== IMPORTS ====================\n\n\n// #region ==================== FUNCTION: Text - REF: https://spectrum.chat/react-three-fiber/general/best-way-to-render-text~8597ed37-45e2-4d9a-998d-7351ad5b08ef ====================\n\nfunction Text({ children, vAlign = 'center', hAlign = 'center', size = 1, color = '#0000ff', ...props }) {\n\n    // const font = useLoader(THREE.FontLoader, 'https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/fonts/ChaleParNinSix.json')\n    // const font = useLoader(THREE.FontLoader, 'https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/fonts/ChaletParNineteenSixty/ChaleParNinSix.json')\n    // const font = useLoader(THREE.FontLoader, 'https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/fonts/AvenirNext/AvenirNext-Regular.json')\n\n    // const font = useLoader(THREE.FontLoader, 'https://raw.githubusercontent.com/shigimcp/shigimcp2020-react/master/src/.github/fonts/ChaletParNineteenSixty/ChaleParNinSix.json')\n    // const font = useLoader(THREE.FontLoader, 'https://raw.githubusercontent.com/shigimcp/shigimcp2020-react/master/src/.github/fonts/AvenirNext/AvenirNext-Regular.json')\n    // const font = useLoader(THREE.FontLoader, 'https://raw.githubusercontent.com/shigimcp/shigimcp2020-react/master/src/.github/fonts/AvenirNext/AvenirNext-UltraLight.json')\n    // const font = useLoader(THREE.FontLoader, 'https://raw.githubusercontent.com/shigimcp/shigimcp2020-react/master/src/.github/fonts/AvenirNext/AvenirNextCyr-Light_Regular.json')\n    const font = useLoader(THREE.FontLoader, 'https://raw.githubusercontent.com/shigimcp/shigimcp2020-react/master/src/.github/fonts/AvenirNext/AvenirNextCyr-Thin_Regular.json')\n\n    const config = useMemo(\n        () => ({ font, size: 1, height: 0.125, curveSegments: 10, bevelEnabled: true, bevelThickness: 0, bevelSize: 0, bevelOffset: 0, bevelSegments: 0 }),\n        [font]\n    )\n\n    const meshRef = useUpdate(\n\n        self => {\n            const size = new THREE.Vector3()\n            self.geometry.computeBoundingBox()\n            self.geometry.boundingBox.getSize(size)\n            self.position.x = hAlign === 'center' ? -size.x / 2 : hAlign === 'right' ? 0 : -size.x\n            self.position.y = vAlign === 'center' ? -size.y / 2 : vAlign === 'top' ? 0 : -size.y\n        },\n\n        [children]\n    )\n\n\n    return (\n        <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n            <mesh ref={meshRef} castShadow>\n                <textGeometry attach=\"geometry\" args={[children, config]} />\n                <meshStandardMaterial attach=\"material\" color=\"#000000\" />\n            </mesh>\n        </group>\n    )\n}\n\n// #endregion ==================== FUNCTION: Text - REF: https://spectrum.chat/react-three-fiber/general/best-way-to-render-text~8597ed37-45e2-4d9a-998d-7351ad5b08ef ====================\n\n\nexport default function Hed() {\n\n    const hedRef = useRef(null);\n\n    return (\n        <group ref={hedRef}>\n            {/* <Text hAlign=\"left\" position={[0.7625, 1.5, -4]} children=\"Shigeru McPherson\" size={5} />\n            <Text hAlign=\"left\" position={[0, 0.8125, -4]} children=\"digital designer • art director\" size={3} />\n            <Text hAlign=\"left\" position={[-3.0625, 0.25, -4]} children=\"(work-in-progress)\" size={2} /> */}\n\n            {/* <Text hAlign=\"left\" position={[1.2625, 0.75, -4]} children=\"Shigeru McPherson\" size={5} />\n            <Text hAlign=\"left\" position={[0.5, 0.03125, -4]} children=\"digital designer • art director\" size={3} />\n            <Text hAlign=\"left\" position={[-2.03125, -0.5625, -4]} children=\"( a work in progress... )\" size={2} /> */}\n\n            <Text hAlign=\"left\" position={[1.125, 0.75, -4]} children=\"Shigeru McPherson\" size={5} />\n            <Text hAlign=\"left\" position={[0.5, 0.03125, -4]} children=\"digital designer • art director\" size={3} />\n            <Text hAlign=\"left\" position={[-2.05, -0.5625, -4]} children=\"( a work in progress... )\" size={2} />\n        </group>\n    );\n}\n","// #region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useRef, useMemo } from 'react';\n\nimport { Box3, Vector3 } from \"three\";\n\nimport { useLoader } from 'react-three-fiber';\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader';\nimport { useFrame } from 'react-three-fiber';\n\n// #endregion ==================== IMPORTS ====================\n\n\n\n// #region ==================== CONSTANTS / VARS ====================\n\nconst remoteGitImageLoc = 'https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/images/';\n\nconst getWidth = () => window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth;\n\nconst getHeight = () => window.innerHeight\n    || document.documentElement.clientHeight\n    || document.body.clientHeight;\n\n// #endregion ==================== CONSTANTS / VARS ====================\n\n\n\n// #region ==================== FUNCTIONS ====================\n\n// #region -------------------- FUNCTION: checkWindow(thisObject) --------------------\n\nfunction checkWindow(thisObject) {\n\n    let thisScale;\n\n    if (getHeight() < getWidth()) {\n\n        thisScale = 1;\n\n    } else {\n\n        thisScale = 0.45;\n    }\n\n    thisObject.scale.x = thisScale;\n    thisObject.scale.y = thisScale;\n    thisObject.scale.z = thisScale;\n}\n\n// #endregion -------------------- FUNCTION: checkWindow(thisObject) --------------------\n\n// #endregion ==================== FUNCTIONS ====================\n\n\n\n// #region ==================== LOGOMESH: EXTRUDE - REF: https://spectrum.chat/react-three-fiber/general/hole-from-imported-svg-is-reversing-should-be-a-donut-instead-is-a-dot~d235bb19-8d5c-4c4b-af74-faae8484204f ====================\n\nfunction LogoMesh(props) {\n\n    const meshScaleFactor = 0.05;\n    const meshColor = \"#0000ff\";\n\n\n    // #region -------------------- LOGOMESH extrudeSettings - REF: https://threejs.org/docs/#api/en/geometries/ExtrudeGeometry --------------------\n\n    let extrudeSettings = {\n        curveSegments: 7,\n        steps: 1,\n        depth: 5,\n        bevelEnabled: false,\n    };\n\n\n    if (props.extrudeDir === 'negative') {\n        extrudeSettings.depth = extrudeSettings.depth * -1;\n    };\n\n    // #endregion -------------------- LOGOMESH extrudeSettings - REF: https://threejs.org/docs/#api/en/geometries/ExtrudeGeometry --------------------\n\n\n    return (\n        <mesh id={props.id} scale={[meshScaleFactor, -meshScaleFactor, meshScaleFactor]} castShadow receiveShadow>\n            <meshNormalMaterial attach=\"material\" color={meshColor} wireframe={true} depthWrite={true} transparent opacity={props.fillOpacity} />\n            <extrudeBufferGeometry attach=\"geometry\" args={[[props.shape], extrudeSettings]} />\n        </mesh>\n    );\n}\n\n// #endregion ==================== LOGOMESH: EXTRUDE - REF: https://spectrum.chat/react-three-fiber/general/hole-from-imported-svg-is-reversing-should-be-a-donut-instead-is-a-dot~d235bb19-8d5c-4c4b-af74-faae8484204f ====================\n\n\n\n// #region ==================== LOGOSHAPE: SVG - REF: https://codesandbox.io/s/react-three-fiber-react-spring-svg-parallax-forked-8hdg1 ====================\n\nfunction LogoShape(props) {\n\n    // #region -------------------- LOGOSHAPE shapes --------------------\n\n    const { paths } = useLoader(SVGLoader, props.url)\n\n    const shapes = useMemo(() =>\n        paths.flatMap((thisPath, i) =>\n            thisPath.toShapes(true).map((shape) =>\n                ({ shape, color: props.fillColor, fillOpacity: props.fillOpacity, extrudeDir: props.extrudeDir, nodeID: thisPath.userData.node.id })\n            )\n        ), [paths, props]\n    );\n\n    // #endregion -------------------- LOGOSHAPE shapes --------------------\n\n\n    const logoShape_Ref = useRef();\n\n    // #region -------------------- LOGOSHAPE center - REF: https://muffinman.io/three-js-extrude-svg-path/ --------------------\n\n    useEffect(() => {\n\n        // #region - - - - - - - - - - - LOGOSHAPE useEffect: center - REF: https://muffinman.io/three-js-extrude-svg-path/ - - - - - - - - - - -\n\n        let bBox = new Box3().setFromObject(logoShape_Ref.current);\n        let bSize = new Vector3();\n\n        bBox.getSize(bSize);\n\n        let xOffset = bSize.x * -0.5;\n        let yOffset = bSize.y * 0.5;\n        // let yOffset = bSize.y * 0.46875;\n\n        logoShape_Ref.current.children.forEach(item => {\n            item.position.x = xOffset;\n            item.position.y = yOffset;\n        })\n\n        // #endregion - - - - - - - - - - - LOGOSHAPE useEffect: center - REF: https://muffinman.io/three-js-extrude-svg-path/ - - - - - - - - - - -\n\n\n        checkWindow(logoShape_Ref.current);\n\n\n        // #region - - - - - - - - - - - LOGOSHAPE useEffect: RESPONSIVE: WINDOW RESIZE - resizeListener - - - - - - - - - - -\n\n        let timeoutId = null;\n\n        const resizeListener = () => {\n\n            // prevent execution of previous setTimeout\n            clearTimeout(timeoutId);\n\n            timeoutId = setTimeout(() => checkWindow(logoShape_Ref.current))\n        }\n\n        window.addEventListener('resize', resizeListener);\n\n        return () => {\n            window.removeEventListener('resize', resizeListener);\n        }\n\n        // #endregion - - - - - - - - - - - LOGOSHAPE useEffect: RESPONSIVE: WINDOW RESIZE - resizeListener - - - - - - - - - - -\n\n\n    }, []);\n\n    // #endregion -------------------- LOGOSHAPE center - REF: https://muffinman.io/three-js-extrude-svg-path/ --------------------\n\n\n    // #region -------------------- LOGOSHAPE spin --------------------\n\n    useFrame(() => {\n        logoShape_Ref.current.rotation.y += 0.025;\n    });\n\n    // #endregion -------------------- LOGOSHAPE spin --------------------\n\n\n    return (\n        <group ref={logoShape_Ref}>\n            {shapes.map((props) => (\n                <LogoMesh key={props.shape.uuid} {...props} />\n            ))}\n        </group>\n    )\n};\n\n// #endregion ==================== LOGOSHAPE: SVG - REF: https://codesandbox.io/s/react-three-fiber-react-spring-svg-parallax-forked-8hdg1 ====================\n\n\nexport default function Logo() {\n\n    const logoSVG = remoteGitImageLoc + 'logo/shigeru_logo_extrude_stroke.svg';\n\n\n    return (\n        <LogoShape id=\"logoSVGid\" url={logoSVG} fillOpacity=\"0.0625\" extrudeDir=\"positive\" />\n    );\n}\n","// #region ==================== IMPORTS ====================\n\nimport React from 'react';\n\nimport Hed from \"./Hed\";\nimport Logo from \"./Logo\";\n\n// #endregion ==================== IMPORTS ====================\n\n\n\nexport default function Scene() {\n\n    // #region ==================== SCENE - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n    // #region -------------------- GROUNDPLANE --------------------\n\n    function GroundPlane() {\n        return (\n            <mesh rotation={[5, 0, 0]} position={[0, -5, 0]} receiveShadow>\n                <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n                <meshStandardMaterial attach=\"material\" color=\"#ffffff\" metalness={0.25} />\n            </mesh>\n        );\n    }\n\n    // #endregion -------------------- GROUNDPLANE --------------------\n\n\n    // #region -------------------- BACKDROP --------------------\n\n    function BackDrop() {\n\n        return (\n            <mesh position={[0, -1, -5]} receiveShadow>\n                <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n                <meshStandardMaterial attach=\"material\" color=\"#ffffff\" metalness={0.25} />\n            </mesh>\n        );\n    }\n\n    // #endregion -------------------- BACKDROP --------------------\n\n    // #endregion ==================== SCENE - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n\n    return (\n        <group>\n            <Hed />\n            <Logo />\n            <BackDrop />\n            <GroundPlane />\n        </group>\n    );\n}\n","// #region ==================== IMPORTS ====================\n\nimport React from \"react\";\n\n// #endregion ==================== IMPORTS ====================\n\n\n\n// export default () => {\nexport default function Lights(props) {\n\n    // #region ==================== LIGHTS - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n    // #region -------------------- LIGHTS: KeyLight --------------------\n\n    function KeyLight({ brightness, color }) {\n        return (\n            <rectAreaLight\n                width={3}\n                height={3}\n                color={color}\n                intensity={brightness}\n                position={[-2, 0, 5]}\n                lookAt={[0, 0, 0]}\n                penumbra={1}\n            />\n        );\n    }\n\n    // #endregion -------------------- LIGHTS: KeyLight --------------------\n\n\n    // #region -------------------- LIGHTS: FillLight --------------------\n\n    function FillLight({ brightness, color }) {\n        return (\n            <rectAreaLight\n                width={3}\n                height={3}\n                intensity={brightness}\n                color={color}\n                position={[2, 1, 4]}\n                lookAt={[0, 0, 0]}\n                penumbra={2}\n            />\n        );\n    }\n\n    // #endregion -------------------- LIGHTS: FillLight --------------------\n\n\n    // #region -------------------- LIGHTS: RimLight --------------------\n\n    function RimLight({ brightness, color }) {\n        return (\n            <rectAreaLight\n                width={2}\n                height={2}\n                intensity={brightness}\n                color={color}\n                position={[1, 4, -2]}\n                rotation={[0, 180, 0]}\n            />\n        );\n    }\n\n    // #endregion -------------------- LIGHTS: RimLight --------------------\n\n\n    // #region -------------------- LIGHTS: ShadowLight --------------------\n\n    function ShadowLight() {\n        return (\n            <directionalLight\n                castShadow\n                position={[2.5, 0, 5]}\n                intensity={5}\n                shadow-mapSize-width={1024}\n                shadow-mapSize-height={1024}\n                shadow-camera-near={0.01}\n                shadow-camera-far={100}\n                shadow-camera-left={-10}\n                shadow-camera-right={10}\n                shadow-camera-top={10}\n                shadow-camera-bottom={-10}\n            />\n        );\n    }\n\n    // #endregion -------------------- LIGHTS: ShadowLight --------------------\n\n    // #endregion ==================== LIGHTS - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n\n    return (\n        <group>\n            <KeyLight brightness={50} color=\"#ffffff\" />\n            <FillLight brightness={50} color=\"#ffffff\" />\n            <RimLight brightness={50} color=\"#ffffff\" />\n            <ShadowLight />\n        </group>\n    );\n}\n","//#region ==================== IMPORTS ====================\n\nimport React from \"react\";\nimport { useRef, useEffect } from \"react\";\n\nimport { useThree } from \"react-three-fiber\";\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== CAMERA - REF: https://github.com/pmndrs/react-three-fiber/blob/master/recipes.md#using-your-own-camera-rig ====================\n\nfunction Camera01(props) {\n    const cameraRef = useRef();\n    const { setDefaultCamera } = useThree();\n\n    // Make the camera known to the system\n    useEffect(() => void setDefaultCamera(\n        cameraRef.current\n    ), [setDefaultCamera]);\n\n\n    return (\n        <perspectiveCamera ref={cameraRef} {...props} />\n    )\n}\n\nexport default function Camera(props) {\n    return (\n        <Camera01 position={[0, 0, 7.5]} fov={40} />\n    )\n}\n\n//#endregion ==================== CAMERA - REF: https://github.com/pmndrs/react-three-fiber/blob/master/recipes.md#using-your-own-camera-rig ====================\n","//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { Suspense } from 'react';\n\nimport '../stylesheets/Home.scss';\n\n\n//#region -------------------- IMPORTS: ASSETS --------------------\n\nimport * as THREE from 'three';\n\nimport { Canvas } from 'react-three-fiber';\nimport Scene from '../components/three/Scene';\nimport Lights from '../components/three/Lights';\nimport Camera from '../components/three/Camera';\n\n//#endregion -------------------- IMPORTS: ASSETS --------------------\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n// export const Home = ({ locID }) => {\nexport const Home = (props) => {\n\n    // console.log('');\n    // console.log('==================== COMPONENT: Home.jsx ====================');\n\n    // // console.log('');\n    // console.log('props = ' + props);\n    // console.log(props);\n\n\n    // localStorage.setItem('navLoc', locID);\n\n    window.scene = new THREE.Scene();\n    window.THREE = THREE;\n\n\n    return (\n\n        <Canvas title='Home' shadowMap>\n            <Suspense fallback={null}>\n                <Lights />\n                <Camera />\n                {/* <Camera position={[0, 0, 7.5]} fov={40} /> */}\n                <Scene />\n            </Suspense>\n        </Canvas>\n    )\n}\n","// import employers from '../data/json/employers_http.json';\nimport employers from '../data/json/employers_https.json';\nimport work from '../data/json/work.json';\nimport about from '../data/json/about.json';\nimport skills from '../data/json/skills.json'\n\n\n// const employerData = employers.map((employer) => employer);\n// const workData = work.map((workItem) => workItem);\n// const aboutData = about.map((thought) => thought);\n// const skillData = skills.map((category) => category);\n\n\n// console.log('');\n// console.log('==========  MyData.jsx  ==========');\n\n// console.log('employers');\n// console.log(employers);\n// console.log('');\n\n// console.log('work');\n// console.log(work);\n// console.log('');\n\n// console.log('about');\n// console.log(about);\n// console.log('');\n\n// console.log('skills');\n// console.log(skills);\n// console.log('');\n\nlocalStorage.setItem('employers', employers);\nlocalStorage.setItem('work', work);\nlocalStorage.setItem('about', about);\nlocalStorage.setItem('skills', skills);\n\nlet myData = [employers, work, about, skills];\n\n// export default [employers, work, about, skills];\n// export default [employerData, workData, aboutData, skillData];\nexport default myData;\n","//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useRef } from 'react';\nimport { useLayoutEffect } from 'react';\n\nimport { gsap } from 'gsap';\nimport { MotionPathPlugin } from 'gsap/MotionPathPlugin';\n\nimport '../stylesheets/About.scss';\nimport myData from '../data/MyData';\n\n//#endregion ==================== IMPORTS ====================\n\n\n//#region ==================== GSAP: Register Plugins ====================\n\ngsap.registerPlugin(MotionPathPlugin);\n\n//#endregion ==================== GSAP: Register Plugins ====================\n\n\n\n//#region ==================== CONSTANTS ====================\n\nconst aboutData = myData[2];\n\n//#region -------------------- ANIMATION DURATIONs --------------------\n\n// const staggerDuration = 0.125;\n// const staggerDelay = 0.0375;\n\n// const waveDuration = 10;\n\n// const animDuration00 = 0.125;\nconst animDuration00_25 = 0.25;\nconst animDuration00_5 = 0.50;\n// const animDuration01 = 1.00;\n// const animDuration01_25 = 1.25;\n// const animDuration01_5 = 1.50;\n// const animDuration02 = 2.00;\n// const animDuration02_5 = 2.50;\n// const animDuration03 = 3.00;\n// const animDuration03_5 = 3.50;\n// const animDuration04 = 4.00;\n// const animDuration04_5 = 4.50;\n// const animDuration05 = 5.00;\n// const animDuration05_5 = 5.50;\n// const animDuration06 = 6.00;\n// const animDuration06_5 = 6.50;\n// const animDuration07 = 7.00;\n// const animDuration07_5 = 7.50;\n// const animDuration08 = 8.00;\n// const animDuration08_5 = 8.50;\n// const animDuration09 = 9.00;\n// const animDuration09_5 = 9.50;\n// const animDuration10 = 10.00;\n\n//#endregion -------------------- ANIMATION DURATIONs --------------------\n\n//#endregion ==================== CONSTANTS ====================\n\n\n\n//#region ==================== MyThoughts ====================\n\nfunction CurlLB(props) {\n    return (\n        <svg className='curlSvg' id={props.curlSvgID} brain={props.brain} thought={props.thought} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 50 100' enableBackground='0 0 50 100'>\n            <path className='curlPath' id={props.curlPathID} d='M10.164 93.706c7.735 9.34 24.605 8.114 30.362-2.544 2.813-5.207 3.003-11.594.186-16.84-2.904-5.41-9.065-8.555-15.283-9.188-6.42-.654-13.07 1.684-16.955 6.63-3.9 4.967-4.607 12.137.127 16.854 4.535 4.52 11.862 4.53 17.812 3.054 6.502-1.612 12.996-5.167 17.53-9.865 4.63-4.8 7.284-11.432 4.872-17.805-2.334-6.168-8.464-10.812-15.243-12.04-7.614-1.38-15.903.72-22.15 4.97C5.73 60.8.578 67.626 3.315 74.5c2.442 6.14 9.84 8.83 16.37 8.567 6.803-.276 13.363-3.14 18.18-7.65 4.74-4.442 7.87-10.615 7.76-16.987-.11-6.344-3.21-12.58-8.088-16.92-5.093-4.53-11.966-6.99-18.977-6.173-7.487.872-14.26 5.337-16.427 12.352-2.057 6.655 1.092 13.196 7.015 16.996 5.61 3.6 13.084 4.383 19.476 2.346 12.553-4.002 21.796-17.54 16.672-29.843-4.598-11.04-18.768-18.508-31.07-14.477C7.755 24.835 1.95 29.95.402 36.403c-1.618 6.75 1.804 13.23 7.733 17.036 13.012 8.35 31.07-.39 36.818-12.777 2.867-6.175 3.01-13.057-.23-19.13-2.94-5.506-8.712-10.04-15.203-11.203C15.903 7.89 1.992 21.103 8.207 33.824c2.564 5.248 8.34 8.883 14.24 10.03 6.566 1.274 13.086-.264 18.328-4.177 10.726-8.007 12.62-23.19 2.918-32.612-9.492-9.22-25.55-9.655-34.78.106-4.303 4.55-7.036 10.72-6.447 16.883.608 6.364 4.23 11.872 9.602 15.683 5.374 3.812 11.683 4.92 18.234 4.07 1.675-.22 2.557-2.22 2.17-3.603-.474-1.693-2.168-2.26-3.823-2.045C19.87 39.3 10.05 32.028 9.307 23.75 8.565 15.478 15.746 6.9 24.715 6.412c8.967-.49 18.345 6.243 18.482 15.054.128 8.205-7.13 16.42-16.13 16.4-8.49-.02-17.22-7.44-11.98-15.537 2.38-3.68 6.917-6.18 11.535-5.852 4.436.314 8.528 3.002 10.93 6.45 5.758 8.263 1.267 18.96-7.085 23.972-4.61 2.766-10.65 4.208-15.927 2.308-4.212-1.516-7.828-5.308-7.577-9.743.25-4.418 3.944-8.158 8.02-9.97 4.015-1.786 8.713-1.543 12.785-.068C36 32.41 41.685 40.547 39.008 48.822c-2.68 8.275-12.49 14.607-21.66 12.234-4.223-1.092-8.56-4.08-8.876-8.52-.35-4.902 3.66-8.895 8.41-10.203 9.777-2.69 19.336 4.31 21.423 13.225 2.078 8.875-5.134 17.536-13.882 20.112-4.005 1.18-9.16 1.445-12.698-1.087-4.502-3.223-1.064-8.445 2.16-11.16 7.48-6.3 22.26-8.297 27.79 1.364 5.072 8.86-6.388 16.947-13.93 19.792-3.786 1.427-8.92 2.65-12.772.775-4.126-2.008-3.626-6.896-1.337-10.037 5.212-7.15 17.96-5.482 22.176 1.703 4.825 8.224-1.31 18.583-11.122 19.276-4.643.328-9.373-1.22-12.64-4.367-1.235-1.193-2.912.538-1.886 1.776z' fill='#0000ff' />\n            <rect className='curlRect' id={props.curlRectID} width='100%' height='100%' fill='rgba(255,0,255,0.5)' onClick={(e) => handleThought(e.target)}></rect>\n        </svg>\n    );\n}\n\nfunction CurlRB(props) {\n    return (\n        <svg className='curlSvg' id={props.curlSvgID} brain={props.brain} thought={props.thought} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 50 100' enableBackground='0 0 50 100'>\n            <path className='curlPath' id={props.curlPathID} d='M39.836 93.706c-7.735 9.34-24.605 8.114-30.362-2.544-2.813-5.207-3.003-11.594-.186-16.84 2.904-5.41 9.065-8.555 15.283-9.188 6.42-.654 13.07 1.684 16.955 6.63 3.9 4.967 4.607 12.137-.127 16.854-4.535 4.52-11.862 4.53-17.812 3.054-6.502-1.612-12.996-5.167-17.53-9.865-4.63-4.8-7.284-11.432-4.872-17.805 2.334-6.168 8.464-10.812 15.243-12.04 7.614-1.38 15.903.72 22.15 4.97 5.692 3.87 10.844 10.695 8.108 17.57-2.442 6.14-9.84 8.83-16.37 8.567-6.803-.276-13.363-3.14-18.18-7.65-4.74-4.442-7.87-10.615-7.76-16.987.11-6.344 3.21-12.58 8.088-16.92 5.093-4.53 11.966-6.99 18.977-6.173 7.488.872 14.26 5.337 16.428 12.352 2.057 6.655-1.092 13.196-7.015 16.996-5.61 3.6-13.084 4.383-19.476 2.346-12.555-4-21.797-17.54-16.673-29.842 4.598-11.04 18.768-18.51 31.07-14.478 6.472 2.12 12.278 7.237 13.825 13.688 1.618 6.75-1.804 13.23-7.733 17.037-13.012 8.35-31.07-.39-36.818-12.777-2.867-6.175-3.01-13.057.23-19.13 2.94-5.506 8.712-10.04 15.203-11.203 13.615-2.44 27.526 10.774 21.31 23.495-2.564 5.248-8.34 8.883-14.24 10.03-6.566 1.274-13.086-.264-18.328-4.177C-1.5 31.668-3.395 16.486 6.307 7.065c9.492-9.22 25.55-9.655 34.78.106 4.303 4.55 7.036 10.72 6.447 16.883-.608 6.364-4.23 11.872-9.602 15.683-5.374 3.812-11.683 4.92-18.234 4.07-1.675-.22-2.557-2.22-2.17-3.603.474-1.693 2.168-2.26 3.823-2.045C30.13 39.3 39.95 32.028 40.693 23.75c.744-8.27-6.437-16.848-15.407-17.337-8.968-.49-18.345 6.24-18.483 15.053-.128 8.205 7.13 16.42 16.13 16.4 8.49-.02 17.22-7.44 11.98-15.537-2.38-3.68-6.917-6.18-11.535-5.852-4.436.314-8.528 3.002-10.93 6.45-5.757 8.264-1.266 18.96 7.086 23.972 4.61 2.766 10.65 4.208 15.927 2.308 4.212-1.516 7.828-5.308 7.577-9.743-.25-4.418-3.944-8.158-8.02-9.97-4.015-1.786-8.713-1.543-12.785-.068C14 32.41 8.315 40.547 10.992 48.822c2.68 8.275 12.49 14.607 21.66 12.234 4.223-1.092 8.56-4.08 8.876-8.52.35-4.902-3.66-8.895-8.41-10.203-9.777-2.69-19.336 4.31-21.423 13.225-2.078 8.875 5.134 17.536 13.882 20.112 4.005 1.18 9.16 1.445 12.698-1.087 4.502-3.223 1.064-8.445-2.16-11.16-7.48-6.3-22.26-8.297-27.79 1.364-5.072 8.86 6.388 16.947 13.93 19.792 3.786 1.427 8.92 2.65 12.772.775 4.126-2.008 3.626-6.896 1.337-10.037-5.212-7.15-17.96-5.482-22.176 1.703-4.825 8.224 1.31 18.583 11.122 19.276 4.643.328 9.373-1.22 12.64-4.367 1.235-1.193 2.912.538 1.886 1.776z' fill='#0000ff' />\n            <rect className='curlRect' id={props.curlRectID} width='100%' height='100%' fill='rgba(0,255,255,0.5)' onClick={(e) => handleThought(e.target)}></rect>\n        </svg>\n    );\n}\n\n\nfunction MyThoughts() {\n\n    const leftCurls = aboutData.filter(isLeft => isLeft.brain === 'left').map((thought) =>\n\n        <CurlLB\n            key={thought.about_index}\n            keyProxy={thought.brain + '_' + thought.about_index}\n            brain={thought.brain}\n            thought={thought.thought}\n            format={thought.format}\n            format_src={thought.format_src}\n            link={thought.link}\n            aWidth={thought.aWidth}\n            aHeight={thought.aHeight}\n\n            curlSvgID={'curlSvg' + thought.about_index}\n            curlPathID={'curlPath' + thought.about_index}\n            curlRectID={'curlRect' + thought.about_index}\n        />,\n    );\n\n    const rightCurls = aboutData.filter(isRight => isRight.brain === 'right').map((thought) =>\n\n        <CurlRB\n            key={thought.about_index}\n            keyProxy={thought.brain + '_' + thought.about_index}\n            brain={thought.brain}\n            thought={thought.thought}\n            format={thought.format}\n            format_src={thought.format_src}\n            link={thought.link}\n            aWidth={thought.aWidth}\n            aHeight={thought.aHeight}\n\n            curlSvgID={'curlSvg' + thought.about_index}\n            curlPathID={'curlPath' + thought.about_index}\n            curlRectID={'curlRect' + thought.about_index}\n        />,\n    );\n\n    return (\n        <>\n            {leftCurls}\n            {rightCurls}\n        </>\n    );\n}\n\n//#endregion ==================== MyThoughts ====================\n\n\n\n//#region ==================== FUNCTIONS ====================\n\n//#region -------------------- FUNCTION: randomize2x() --------------------\n\nfunction randomize2x() {\n    Math.random();\n    return Math.random();\n}\n\n//#endregion -------------------- FUNCTION: randomize2x() --------------------\n\n\n//#region -------------------- FUNCTION: getDimensions(thisObject) --------------------\n\nfunction getDimensions(thisObject) {\n\n    let thisObject_x = document.getElementById(thisObject.id).offsetLeft;\n    let thisObject_y = document.getElementById(thisObject.id).offsetTop;\n    let thisObject_w = document.getElementById(thisObject.id).offsetWidth;\n    let thisObject_h = document.getElementById(thisObject.id).offsetHeight;\n\n    return [thisObject_x, thisObject_y, thisObject_w, thisObject_h];\n}\n\n//#endregion -------------------- FUNCTION: getDimensions(thisContainer) --------------------\n\n\n//#region -------------------- FUNCTION: addGuides(refContainer) --------------------\n\nfunction addGuides(refContainer) {\n\n    let refContainerDims = getDimensions(refContainer);\n\n    // console.log('');\n    // console.log('-------------------- FUNCTION: addGuides(refContainer) --------------------');\n    // console.log('refContainer = ' + refContainer);\n    // console.log(refContainer);\n\n    // console.log('');\n    // console.log('refContainerDims = ' + refContainerDims);\n    // console.log(refContainerDims);\n\n\n    //#region -------------------- AFRO GUIDE (guideSVG): outerEllipse / innerEllipse --------------------\n\n    //#region - - - - - - - - - - - outerEllipse - - - - - - - - - - -\n\n    const outerEllipse = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    const outerEllipsePath = document.createElementNS('http://www.w3.org/2000/svg', 'ellipse');\n\n    let posFactor = 0.5;\n    let scaleFactor = 0.5;\n\n    // let posFactor = 1;\n    // let scaleFactor = 1;\n\n    // let outer_cx = refContainerDims[2];\n    // let outer_cy = refContainerDims[3];\n    // let outer_rx = refContainerDims[2];\n    // let outer_ry = refContainerDims[3];\n\n    // let outer_cx = refContainerDims[2] * posFactor;\n    // let outer_cy = refContainerDims[3] * posFactor;\n    // let outer_rx = refContainerDims[2] * scaleFactor;\n    // let outer_ry = refContainerDims[3] * scaleFactor;\n\n    let outer_cx = refContainerDims[2] * posFactor;\n    let outer_cy = refContainerDims[3] * posFactor;\n    let outer_rx = refContainerDims[2] * scaleFactor;\n    let outer_ry = refContainerDims[3] * scaleFactor;\n\n    let outer_stroke = 'red';\n    let outer_stroke_width = 2;\n    let outer_fill = 'green';\n\n    outerEllipse.setAttributeNS(null, 'version', '1.1');\n    outerEllipse.setAttributeNS(null, 'class', 'guideSVG');\n    outerEllipse.setAttributeNS(null, 'id', 'outerEllipseID');\n    outerEllipse.setAttributeNS(null, 'viewBox', '0 0 ' + refContainerDims[2] + ' ' + refContainerDims[3]);\n    outerEllipse.setAttributeNS(null, 'enable-background', '0 0 ' + refContainerDims[2] + ' ' + refContainerDims[3]);\n\n    outerEllipsePath.setAttributeNS(null, 'id', 'outerEllipsePathID');\n    outerEllipsePath.setAttribute('cx', outer_cx);\n    outerEllipsePath.setAttribute('cy', outer_cy);\n    outerEllipsePath.setAttribute('rx', outer_rx);\n    outerEllipsePath.setAttribute('ry', outer_ry);\n    outerEllipsePath.setAttribute('stroke', outer_stroke);\n    outerEllipsePath.setAttribute('stroke-width', outer_stroke_width);\n    outerEllipsePath.setAttribute('fill', outer_fill);\n\n\n    outerEllipse.appendChild(outerEllipsePath);\n\n    //#endregion - - - - - - - - - - - outerEllipse - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - innerEllipse - - - - - - - - - - -\n\n    const innerEllipse = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    const innerEllipsePath = document.createElementNS('http://www.w3.org/2000/svg', 'ellipse');\n\n    posFactor = 0.5;\n    scaleFactor = 0.2625;\n\n    // posFactor = 1;\n    // scaleFactor = 0.525;\n\n    // let inner_cx = refContainerDims[2];\n    // let inner_cy = refContainerDims[3] * 1.475;\n    // let inner_rx = refContainerDims[2];\n    // let inner_ry = refContainerDims[3];\n\n    let inner_cx = refContainerDims[2] * posFactor;\n    let inner_cy = refContainerDims[3] * posFactor * 1.475;\n    let inner_rx = refContainerDims[2] * scaleFactor;\n    let inner_ry = refContainerDims[3] * scaleFactor;\n\n    let inner_stroke = 'red';\n    let inner_stroke_width = 2;\n    let inner_fill = 'green';\n\n    innerEllipse.setAttributeNS(null, 'version', '1.1');\n    innerEllipse.setAttributeNS(null, 'class', 'guideSVG');\n    innerEllipse.setAttributeNS(null, 'id', 'innerEllipseID');\n    innerEllipse.setAttributeNS(null, 'viewBox', '0 0 ' + refContainerDims[2] + ' ' + refContainerDims[3]);\n    innerEllipse.setAttributeNS(null, 'enable-background', '0 0 ' + refContainerDims[2] + ' ' + refContainerDims[3]);\n\n    innerEllipsePath.setAttributeNS(null, 'id', 'innerEllipsePathID');\n    innerEllipsePath.setAttribute('cx', inner_cx);\n    innerEllipsePath.setAttribute('cy', inner_cy);\n    innerEllipsePath.setAttribute('rx', inner_rx);\n    innerEllipsePath.setAttribute('ry', inner_ry);\n    innerEllipsePath.setAttribute('stroke', inner_stroke);\n    innerEllipsePath.setAttribute('stroke-width', inner_stroke_width);\n    innerEllipsePath.setAttribute('fill', inner_fill);\n\n\n    innerEllipse.appendChild(innerEllipsePath);\n\n    //#endregion - - - - - - - - - - - innerEllipse - - - - - - - - - - -\n\n    //#endregion -------------------- AFRO GUIDE (guideSVG): outerEllipse / innerEllipse --------------------\n\n\n    return [outerEllipse, innerEllipse];\n}\n\n//#endregion -------------------- FUNCTION: addGuides(refContainer) --------------------\n\n\n//#region -------------------- FUNCTION: disperseChildren(parentContainer) --------------------\n\nfunction disperseChildren(parentContainer) {\n\n    // console.log('');\n    // console.log('-------------------- FUNCTION: disperseChildren(parentContainer) --------------------');\n    // console.log('parentContainer = ' + parentContainer);\n    // console.log(parentContainer);\n\n\n    //#region - - - - - - - - - - - SETUP - - - - - - - - - - -\n\n    const outerSVGDims = document.getElementById('outerEllipsePathID').getBoundingClientRect();\n    const innerSVGDims = document.getElementById('innerEllipsePathID').getBoundingClientRect();\n\n    const outerRadius = outerSVGDims.width;\n    const innerRadius = innerSVGDims.width;\n\n    // console.log('');\n    // console.log('outerSVGDims = ' + outerSVGDims);\n    // console.log(outerSVGDims);\n\n    // console.log('');\n    // console.log('innerSVGDims = ' + innerSVGDims);\n    // console.log(innerSVGDims);\n\n    // console.log('');\n    // console.log('outerRadius = ' + outerRadius);\n    // // console.log(outerRadius);\n\n    // console.log('innerRadius = ' + innerRadius);\n    // // console.log(innerRadius);\n\n    //#endregion - - - - - - - - - - - SETUP - - - - - - - - - - -\n\n\n    for (let p = 0; p < parentContainer.children.length; p++) {\n\n        let thisCurl = parentContainer.children[p];\n\n        let curlFactorX = 0.5;\n        let curlFactorY = 0.5;\n\n        // let minAngleDegrees;\n        // let maxAngleDegrees;\n\n\n        if (thisCurl.getAttribute('brain') === 'left') {\n\n            // minAngleDegrees = -90;\n            // maxAngleDegrees = -20;\n\n            let minAngleDegrees = -90;\n            let maxAngleDegrees = -20;\n\n            const thisAngle = (randomize2x() * (maxAngleDegrees - minAngleDegrees) + minAngleDegrees) / 180 * Math.PI;\n            const thisRadius = ((randomize2x() * (outerRadius - innerRadius)) + innerRadius);\n\n            const curlX = (Math.cos(thisAngle) * (thisRadius * curlFactorX)) + outerRadius * curlFactorX;\n            const curlY = (Math.sin(thisAngle) * (thisRadius * curlFactorY)) + outerRadius * curlFactorY;\n\n            const curlAngle = thisAngle * (180 / Math.PI) + 90;\n\n            gsap.set([thisCurl], { x: curlX, y: curlY, rotation: curlAngle });\n\n        } else {\n\n            // minAngleDegrees = -150;\n            // maxAngleDegrees = -90;\n\n            let minAngleDegrees = -150;\n            let maxAngleDegrees = -90;\n\n            const thisAngle = (randomize2x() * (maxAngleDegrees - minAngleDegrees) + minAngleDegrees) / 180 * Math.PI;\n            const thisRadius = ((randomize2x() * (outerRadius - innerRadius)) + innerRadius);\n\n            const curlX = (Math.cos(thisAngle) * (thisRadius * curlFactorX)) + outerRadius * curlFactorX;\n            const curlY = (Math.sin(thisAngle) * (thisRadius * curlFactorY)) + outerRadius * curlFactorY;\n\n            const curlAngle = thisAngle * (180 / Math.PI) + 90;\n\n            gsap.set([thisCurl], { x: curlX, y: curlY, rotation: curlAngle });\n        }\n\n        // const thisAngle = (randomize2x() * (maxAngleDegrees - minAngleDegrees) + minAngleDegrees) / 180 * Math.PI;\n        // const thisRadius = ((randomize2x() * (outerRadius - innerRadius)) + innerRadius);\n\n        // // const curlX = (Math.cos(thisAngle) * (thisRadius * curlFactorX)) + outerRadius * curlFactorX;\n        // const curlX = (Math.cos(thisAngle) * (thisRadius * curlFactorX));\n        // const curlY = (Math.sin(thisAngle) * (thisRadius * curlFactorY)) + outerRadius * curlFactorY;\n        // const curlAngle = thisAngle * (180 / Math.PI) + 90;\n\n        // gsap.set([thisCurl], { x: curlX, y: curlY, rotation: curlAngle });\n    }\n}\n\n//#endregion -------------------- FUNCTION: disperseChildren(parentContainer) --------------------\n\n\n//#region -------------------- FUNCTION: handleThought(thisThought) --------------------\n\nlet thoughtAnimTL = gsap.timeline({ delay: 0, paused: true });\n\nfunction handleThought(thisCurl) {\n\n    // console.log('');\n    // console.log('-------------------- FUNCTION: handleThought(thisCurl) --------------------');\n    // console.log('thisCurl = ' + thisCurl);\n    // console.log(thisCurl);\n\n\n    //#region -------------------- define objects --------------------\n\n    const thisCurlPath = thisCurl.parentElement.children[0];\n    const thisBrain = thisCurl.parentElement.getAttribute('brain');\n    const thisThought = thisCurl.parentElement.getAttribute('thought');\n    const thoughtBubble = document.getElementById('thoughtBubbleDivID');\n    const boing = document.getElementById('boingSvgID');\n    const boingPath = document.getElementById('boingPathID');\n\n    thoughtBubble.children[1].innerHTML = thisThought;\n\n    //#endregion -------------------- define objects --------------------\n\n\n    //#region -------------------- position boing and thoughtBubble --------------------\n\n    const thisCurlDims = thisCurl.getBoundingClientRect();\n    const outerEllipseDims = document.getElementById('outerEllipsePathID').getBoundingClientRect();\n    const boingDims = document.getElementById('boingSvgID').getBoundingClientRect();\n\n    // console.log('');\n    // console.log('thisCurlDims = ' + thisCurlDims);\n    // console.log(thisCurlDims);\n\n    // console.log('');\n    // console.log('outerEllipseDims = ' + outerEllipseDims);\n    // console.log(outerEllipseDims);\n\n    // console.log('');\n    // console.log('boingDims = ' + boingDims);\n    // console.log(boingDims);\n\n    // console.log('');\n    // console.log('thisBrain = ' + thisBrain);\n    // console.log(thisBrain);\n\n\n    let thisBoingX;\n    let thisBoingY;\n\n    if (thisBrain === 'left') {\n        gsap.set([boing], { rotationY: 0 });\n        thisBoingX = thisCurlDims.x + thisCurlDims.width * 0.5 - outerEllipseDims.x;\n        // thisBoingX = thisCurlDims.x + (thisCurlDims.width * 0.5) - (boingDims.width * 0.5) - (outerEllipseDims.width * 0.5);\n        thisBoingY = thisCurlDims.y - (thisCurlDims.height * 0.5) - (boingDims.height * 0.5) - outerEllipseDims.y;\n    } else {\n        gsap.set([boing], { rotationY: 180 });\n        thisBoingX = thisCurlDims.x - thisCurlDims.width * 0.5 - boingDims.width;\n        // thisBoingX = thisCurlDims.x + (thisCurlDims.width * 0.5) + (boingDims.width * 0.5) - outerEllipseDims.width;\n        thisBoingY = thisCurlDims.y - outerEllipseDims.y - (boingDims.height * 0.5) - (thisCurlDims.height * 0.5);\n    }\n\n    // console.log('');\n    // console.log('thisBoingX = ' + thisBoingX);\n    // // console.log(thisBoingX);\n\n    // // console.log('');\n    // console.log('thisBoingY = ' + thisBoingY);\n    // // console.log(thisBoingY);\n\n\n    gsap.set([boing], { x: thisBoingX, y: thisBoingY });\n    gsap.set([thoughtBubble], { motionPath: { path: boingPath, align: boingPath, alignOrigin: [0.5, 0.5], start: 1 } });\n\n\n    //#region - - - - - - - - - - - compensation for thoughtBubble going beyond left/right edges of viewport - - - - - - - - - - -\n\n    const thoughtBubbleDims = thoughtBubble.getBoundingClientRect();\n\n    // console.log('');\n    // console.log('handleThought(thisCurl) =>   thoughtBubbleDims = ' + thoughtBubbleDims);\n    // console.log('handleThought(thisCurl) =>   thoughtBubbleDims.x = ' + thoughtBubbleDims.x + '     thoughtBubbleDims.y = ' + thoughtBubbleDims.y + '     thoughtBubbleDims.width = ' + thoughtBubbleDims.width + '     thoughtBubbleDims.height = ' + thoughtBubbleDims.height);\n\n\n    let thisThoughtBubbleX;\n\n    if (thisBrain === 'right' && thoughtBubbleDims.x <= 0) {\n\n        thisThoughtBubbleX = -outerEllipseDims.x * 0.75;\n        gsap.set([thoughtBubble], { x: thisThoughtBubbleX });\n\n    } else if (thisBrain === 'left' && (thoughtBubbleDims.x + thoughtBubbleDims.width) >= window.innerWidth) {\n\n        thisThoughtBubbleX = outerEllipseDims.x + outerEllipseDims.width - thoughtBubbleDims.width - outerEllipseDims.x * 0.25;\n        gsap.set([thoughtBubble], { x: thisThoughtBubbleX });\n\n    }\n\n    //#endregion - - - - - - - - - - - compensation for thoughtBubble going beyond left/right edges of viewport - - - - - - - - - - -\n\n    //#endregion -------------------- position boing and thoughtBubble --------------------\n\n\n    thoughtAnimTL = gsap.timeline({ delay: 0, paused: true });\n\n    thoughtAnimTL\n        .to([thisCurlPath], { motionPath: { path: boingPath, align: boingPath, alignOrigin: [0.5, 0.5], autoRotate: 90 }, duration: animDuration00_5, ease: 'power3.out' }, 'frame00')\n\n        .set([thisCurl.parentElement], { autoAlpha: 0 }, 'frame01 -=0.125')\n        .fromTo([thoughtBubble], { scale: 0.875, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, duration: animDuration00_5, ease: 'elastic.out(1, 0.75)' }, 'frame01 -=0.125')\n\n        .set([thisCurlPath], { transform: 'matrix(1, 0, 0, 1, 0, 0)' }, 'frame02')\n    ;\n\n    thoughtAnimTL.play();\n}\n\n//#endregion -------------------- FUNCTION: handleThought(thisCurlPath) --------------------\n\n\n//#region -------------------- FUNCTION: closeThought(thoughtBubble) --------------------\n\nfunction closeThought(thoughtBubble) {\n    gsap.to([thoughtBubble], animDuration00_25, { autoAlpha: 0, ease: 'power1.out' });\n}\n\n//#endregion -------------------- FUNCTION: handleThought(thisCurlPath) --------------------\n\n\n//#region -------------------- FUNCTION: resetThoughts(parentContainer, thoughtBubble) --------------------\n\nfunction resetThoughts(parentContainer, thoughtBubble) {\n\n    closeThought(thoughtBubble);\n\n\n    for (let p = 0; p < parentContainer.children.length; p++) {\n\n        let thisCurl = parentContainer.children[p];\n\n        gsap.set([thisCurl], { autoAlpha: 1 });\n    }\n\n    disperseChildren(parentContainer);\n}\n\n//#endregion -------------------- FUNCTION: resetThoughts(parentContainer, thoughtBubble) --------------------\n\n//#endregion ==================== FUNCTIONS ====================\n\n\n\n//#region ==================== EXPORT ABOUT ====================\n\n// export const About = ({ locID }) => {\nexport const About = (props) => {\n\n    // console.log('');\n    // console.log('==================== COMPONENT: About.jsx ====================');\n\n    // // console.log('');\n    // console.log('props = ' + props);\n    // console.log(props);\n\n\n    // localStorage.setItem('navLoc', locID);\n\n\n    //#region ==================== ASSETS _Ref ====================\n\n    const aboutContainer_Ref = useRef(null);\n    const aboutAfro_Ref = useRef(null);\n    const afroContainer_Ref = useRef(null);\n\n    const curlContainer_Ref = useRef(null);\n    const thoughtBubble_Ref = useRef(null);\n    const boing_Ref = useRef(null);\n\n    const guideContainer_Ref = useRef(null);\n\n    const haiku_Ref = useRef(null);\n    const resetThoughts_Ref = useRef(null);\n\n    //#endregion ==================== ASSETS _Ref ====================\n\n\n    //#region ==================== useLayoutEffect: WINDOW RESIZE ====================\n\n    useLayoutEffect(() => {\n\n        //#region -------------------- ADD [AFRO] GUIDES --------------------\n\n        let thisEllipse = addGuides(afroContainer_Ref.current);\n\n        guideContainer_Ref.current.appendChild(thisEllipse[0]);\n        guideContainer_Ref.current.appendChild(thisEllipse[1]);\n\n        //#endregion -------------------- ADD [AFRO] GUIDES --------------------\n\n\n        disperseChildren(curlContainer_Ref.current);\n\n\n        //#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n        const resizeListener = () => {\n            disperseChildren(curlContainer_Ref.current);\n        };\n\n        window.addEventListener('resize', resizeListener);\n\n        // clean up function\n        return () => {\n            window.removeEventListener('resize', resizeListener);\n        }\n\n        //#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n    }, []);\n\n    //#endregion ==================== useLayoutEffect: WINDOW RESIZE ====================\n\n\n    return (\n\n        <div className='aboutContainer' id='aboutContainerID' ref={aboutContainer_Ref}>\n\n            <div className='haiku' onClick={() => closeThought(thoughtBubble_Ref.current)} ref={haiku_Ref}>\n                <h1>I have thoughts...</h1>\n                <h2>I keep them in my curls.</h2>\n                <h3>Sometimes, they try to escape.</h3>\n                <p className='credit'>Bad haiku, by Shigeru McPherson</p>\n                <p className='plea'>(Umm... This isn't haiku. Someone, please take her crayon away.)</p>\n            </div>\n\n\n        {/* #region ==================== SVG: AboutAfro ==================== */}\n\n            <div className='afroContainer' id='afroContainerID' onClick={() => closeThought(thoughtBubble_Ref.current)} ref={afroContainer_Ref}>\n\n                <svg version='1.1' className='aboutAfro' id='aboutAfroID' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 1000 880' ref={aboutAfro_Ref}>\n\n                    <defs>\n\n                        <clipPath id='shigeru_logo_afro_k_mask'>\n                            <rect id='header_mask_afro_k' x='0' y='0367.5' width='100%' height='517.5' fill='white' />\n                        </clipPath>\n\n                        <clipPath id='shigeru_logo_afro_w_mask'>\n                            <rect id='header_mask_afro_w' x='0' y='0' width='100%' height='367.5' fill='white' />\n                        </clipPath>\n\n                        <clipPath id='shigeru_logo_glasses_k_mask'>\n                            <rect id='header_mask_glasses_k' x='0' y='367.5' width='100%' height='517.5' fill='white' />\n                        </clipPath>\n\n                        <clipPath id='shigeru_logo_glasses_w_mask'>\n                            <rect id='header_mask_glasses_w' x='0' y='0' width='100%' height='367.5' fill='white' />\n                        </clipPath>\n\n                        <clipPath id='shigeru_logo_kanji_w_mask'>\n                            <rect id='header_mask_kanji' x='0' y='367.5' width='100%' height='367.5' fill='white' />\n                        </clipPath>\n\n\n                        <clipPath id='bg_mask'>\n                            <rect id='bg_mask_rect' x='0' y='60' width='200%' height='125%' fill='white' stroke='blue' />\n                        </clipPath>\n\n                    </defs>\n\n                    <g id='shigeru_logo_afro'>\n                        <path id='shigeru_logo_afro_k' d='M983.409,470.499c9.111-0.163,16.494-7.511,16.59-16.647c0.107-9.107-7.092-16.608-16.175-16.993c9.044-0.951,15.75-8.896,15.074-17.984c-0.677-9.078-8.474-15.944-17.556-15.569c8.918-1.721,14.918-10.193,13.459-19.195c-1.449-8.992-9.826-15.166-18.841-14.021c8.744-2.472,14.001-11.425,11.779-20.263c-2.242-8.905-11.218-14.367-20.165-12.328c8.619-3.136,13.17-12.579,10.184-21.254c-2.976-8.655-12.339-13.328-21.054-10.608c8.271-3.875,11.971-13.617,8.28-21.993c-3.681-8.348-13.353-12.233-21.788-8.857c7.855-4.549,10.715-14.522,6.358-22.542c-4.339-8.001-14.261-11.088-22.378-7.068c7.421-5.175,9.45-15.32,4.474-22.946c-4.966-7.616-15.063-9.914-22.832-5.299c6.957-5.742,8.165-15.983,2.618-23.186c-5.536-7.193-15.759-8.703-23.141-3.539c6.474-6.251,6.89-16.532,0.822-23.282c-6.059-6.742-16.349-7.482-23.306-1.808c5.952-6.713,5.585-16.974-0.957-23.244c-6.599-6.328-17.025-6.261-23.537,0.067c5.594-7.136,4.522-17.454-2.513-23.282c-7.044-5.838-17.44-5.01-23.47,1.76c5.073-7.51,3.276-17.723-4.164-23.051c-7.431-5.318-17.731-3.77-23.276,3.404c4.531-7.838,2.019-17.897-5.769-22.696c-7.787-4.789-17.962-2.529-22.976,5.01c3.98-8.136,0.782-18.002-7.315-22.253c-8.097-4.25-18.078-1.308-22.581,6.549c3.42-8.376-0.444-18.002-8.803-21.695c-8.357-3.702-18.106-0.106-22.078,8.011c2.831-8.578-1.652-17.907-10.242-21.041c-8.581-3.135-18.078,1.096-21.489,9.472c2.27-8.751-2.831-17.782-11.604-20.349c-8.764-2.568-17.943,2.261-20.813,10.829c1.68-8.867-3.99-17.532-12.9-19.532c-8.918-1.99-17.769,3.414-20.068,12.146c1.101-8.953-5.111-17.243-14.136-18.666c-9.025-1.423-17.508,4.54-19.247,13.397c0.541-9.011-6.194-16.888-15.286-17.743c-9.083-0.846-17.17,5.616-18.349,14.55c-0.048-9.011-7.256-16.435-16.378-16.723c-9.141-0.288-16.812,6.693-17.402,15.704c-0.59-9.011-8.252-16.003-17.383-15.733c-9.121,0.279-16.339,7.684-16.406,16.695C465.5,7.769,457.431,1.287,448.34,2.124v0.009c-9.092,0.837-15.837,8.703-15.315,17.705C431.305,10.981,422.831,5,413.798,6.413h0.009c-9.035,1.413-15.266,9.684-14.174,18.637c-2.281-8.732-11.122-14.156-20.04-12.175c-8.919,1.991-14.609,10.646-12.938,19.522c-2.841-8.578-12.03-13.425-20.803-10.876c-8.773,2.558-13.894,11.579-11.633,20.33c-3.402-8.386-12.88-12.636-21.48-9.511c-8.589,3.125-13.102,12.463-10.271,21.051c-3.942-8.145-13.701-11.761-22.069-8.078c-8.368,3.683-12.242,13.3-8.841,21.686c-4.483-7.866-14.464-10.828-22.561-6.588c-8.106,4.232-11.324,14.089-7.363,22.234c-5.005-7.549-15.17-9.819-22.967-5.049c-7.788,4.78-10.329,14.829-5.817,22.687c-5.517-7.184-15.817-8.752-23.266-3.443c-7.44,5.308-9.266,15.521-4.203,23.042c-6.02-6.79-16.416-7.636-23.46-1.808c-7.14,5.885-8.174,16.396-2.348,23.551c-6.474-6.578-17.083-6.751-23.779-0.356c-6.677,6.377-6.948,16.897-0.657,23.61c-6.957-6.03-17.518-5.415-23.702,1.443c-6.174,6.846-5.671,17.349,1.082,23.58c-7.392-5.471-17.856-4.049-23.489,3.25c-5.614,7.271-4.338,17.657,2.812,23.369c-7.788-4.818-18.059-2.568-23.093,5.116c-5.015,7.664-2.957,17.877,4.57,23.042c-8.136-4.135-18.156-1.077-22.533,6.963c-4.377,8.011-1.526,17.993,6.329,22.561c-8.435-3.395-18.117,0.471-21.808,8.818c-3.681,8.309-0.058,18.002,8.097,21.926c-8.677-2.635-17.943,2.029-20.919,10.626c-2.967,8.559,1.42,17.878,9.817,21.148c-8.831-1.837-17.614,3.568-19.836,12.358c-2.242,8.837,2.995,17.8,11.73,20.291c-9.015-1.173-17.392,4.992-18.871,13.983c-1.469,8.991,4.512,17.483,13.43,19.224c-9.082-0.394-16.89,6.453-17.585,15.531c-0.696,9.117,6.039,17.09,15.121,18.022c-9.121,0.327-16.378,7.828-16.29,16.964c0.077,9.136,7.45,16.493,16.561,16.676c-9.044,1.115-15.614,9.193-14.754,18.291c0.86,9.088,8.851,15.81,17.953,15.204c-8.928,1.875-14.783,10.492-13.15,19.474c1.643,8.992,10.184,15.012,19.199,13.628c-8.735,2.616-13.837,11.704-11.431,20.522c2.406,8.828,11.431,14.098,20.31,11.944c-8.493,3.346-12.812,12.829-9.662,21.416c3.15,8.588,12.58,13.079,21.238,10.194c-8.174,4.038-11.672,13.848-7.817,22.137c3.855,8.29,13.623,11.982,22.01,8.405c-7.817,4.684-10.503,14.743-5.981,22.695v-0.009c4.522,7.954,14.561,10.848,22.62,6.597c-7.401,5.289-9.276,15.521-4.136,23.09c5.131,7.568,15.373,9.646,23.064,4.779c-6.966,5.857-8.039,16.195-2.319,23.34c5.701,7.136,16.058,8.433,23.354,3.001c-6.483,6.356-6.764,16.742-0.532,23.426c6.232,6.693,16.648,7.203,23.508,1.25c-5.99,6.819-5.488,17.185,1.218,23.388c6.706,6.212,17.121,5.963,23.518-0.461c-5.459,7.222-4.203,17.512,2.927,23.224c7.131,5.703,17.489,4.713,23.412-2.135c-4.928,7.587-2.947,17.753,4.57,22.946c7.508,5.183,17.759,3.471,23.19-3.76c-4.377,7.905-1.691,17.907,6.164,22.561c7.865,4.664,17.982,2.241,22.889-5.376c-3.845,8.193-0.483,18.002,7.682,22.119c8.165,4.126,18.098,1.019,22.465-6.915c-3.285,8.434,0.734,17.993,9.16,21.561c8.416,3.568,18.117-0.193,21.943-8.386c-2.705,8.626,1.932,17.896,10.57,20.897v0.01c8.812,3.058,18.456-1.568,21.537-10.348c0.032-0.091,0.051-0.182,0.081-0.273c0.23,0.072,0.462,0.139,0.692,0.211c-0.139,0.485-0.27,0.975-0.367,1.467c-0.106,0.539-0.193,1.088-0.242,1.626c-0.058,0.548-0.087,1.106-0.087,1.654c0,0.558,0.029,1.116,0.087,1.664c0.049,0.538,0.136,1.087,0.242,1.625c0.107,0.539,0.252,1.077,0.406,1.606c0.165,0.519,0.348,1.039,0.56,1.549c0.213,0.501,0.444,1.01,0.706,1.49c0.26,0.481,0.541,0.962,0.85,1.414c0.31,0.461,0.638,0.903,0.986,1.327c0.347,0.432,0.725,0.846,1.12,1.23c0.387,0.385,0.802,0.76,1.228,1.116c0.425,0.347,0.879,0.673,1.343,0.971c0.454,0.308,0.928,0.596,1.42,0.847c0.483,0.259,0.986,0.5,1.498,0.702c0.502,0.211,1.024,0.404,1.555,0.558c0.522,0.163,1.063,0.298,1.604,0.404c0.542,0.116,1.092,0.193,1.643,0.25c0.551,0.058,1.112,0.086,1.662,0.086c0.551,0,1.112-0.028,1.663-0.086c0.55-0.057,1.101-0.134,1.642-0.25c0.542-0.106,1.082-0.24,1.604-0.404c0.522-0.154,1.053-0.347,1.556-0.558c0.512-0.202,1.014-0.442,1.497-0.702c0.483-0.251,0.966-0.539,1.42-0.847c0.464-0.298,0.909-0.625,1.333-0.971c0.435-0.356,0.851-0.731,1.237-1.116c0.396-0.384,0.763-0.798,1.121-1.23c0.348-0.424,0.677-0.866,0.985-1.327c0.3-0.453,0.59-0.933,0.851-1.414c0.251-0.481,0.493-0.99,0.705-1.49c0.212-0.51,0.396-1.029,0.56-1.549c0.155-0.529,0.29-1.067,0.406-1.606c0.107-0.538,0.184-1.087,0.242-1.625c0.059-0.548,0.087-1.106,0.087-1.664c0-0.548-0.028-1.105-0.087-1.654c-0.058-0.538-0.135-1.087-0.242-1.626c-0.116-0.538-0.251-1.076-0.406-1.606c-0.164-0.519-0.348-1.039-0.56-1.548c-0.212-0.501-0.454-1.011-0.705-1.491c-0.261-0.481-0.551-0.962-0.851-1.413c-0.309-0.452-0.637-0.903-0.985-1.327c-0.348-0.433-0.725-0.846-1.121-1.231c-0.386-0.384-0.802-0.76-1.227-1.115c-0.435-0.346-0.879-0.673-1.344-0.972c-0.454-0.307-0.937-0.596-1.42-0.846c-0.483-0.259-0.985-0.5-1.497-0.702c-0.503-0.212-1.034-0.404-1.556-0.558c-0.522-0.163-1.062-0.299-1.604-0.404c-0.541-0.115-1.092-0.193-1.642-0.251c-1.102-0.105-2.223-0.105-3.324,0c-0.551,0.058-1.101,0.135-1.643,0.251c-0.541,0.105-1.082,0.24-1.604,0.404c-0.531,0.154-1.053,0.346-1.555,0.558c-0.512,0.202-1.015,0.442-1.498,0.702c-0.493,0.25-0.966,0.539-1.43,0.846c-0.454,0.299-0.909,0.625-1.333,0.972c-0.087,0.073-0.167,0.154-0.253,0.228c-0.182-0.225-0.366-0.447-0.547-0.673c7.28-5.472,8.912-15.744,3.592-23.184h-0.009c-5.335-7.448-15.633-9.255-23.206-4.169c-0.159-0.247-0.314-0.498-0.472-0.746c7.842-4.689,10.53-14.781,5.967-22.743c-4.565-7.958-14.661-10.784-22.725-6.441c-0.134-0.259-0.265-0.519-0.398-0.779c8.258-3.987,11.827-13.832,7.972-22.169c-3.856-8.341-13.706-12.022-22.123-8.367c-0.112-0.268-0.222-0.538-0.333-0.806c8.557-3.329,12.901-12.881,9.702-21.495c-3.201-8.627-12.754-13.065-21.433-10.044c-0.091-0.274-0.18-0.549-0.27-0.823c8.791-2.71,13.811-11.933,11.239-20.763c-2.581-8.829-11.783-13.937-20.672-11.53c-0.073-0.284-0.143-0.568-0.215-0.853c8.96-2.092,14.616-10.954,12.656-19.938c-1.961-8.993-10.799-14.716-19.832-12.924c-0.052-0.286-0.104-0.571-0.155-0.857c9.085-1.476,15.334-9.927,14.006-19.022c-1.338-9.102-9.746-15.415-18.875-14.252c-0.032-0.291-0.065-0.583-0.097-0.874c9.155-0.822,15.998-8.781,15.349-17.945c-0.659-9.16-8.574-16.071-17.746-15.596c-0.009-0.29-0.015-0.578-0.024-0.867c9.171-0.087,16.631-7.441,16.747-16.619c0.113-9.152-7.147-16.674-16.297-17.006c0.018-0.285,0.039-0.566,0.057-0.85c0.536,0.052,1.069,0.084,1.601,0.084c8.396,0,15.681-6.223,16.754-14.733c1.144-9.022-5.127-17.252-14.074-18.687c0.056-0.277,0.112-0.555,0.169-0.831c1.374,0.34,2.755,0.516,4.109,0.516c7.275,0,13.99-4.703,16.194-11.993c2.591-8.612-2.094-17.666-10.505-20.66c0.108-0.254,0.22-0.503,0.329-0.755c2.419,1.212,5.013,1.798,7.577,1.798c5.797,0,11.45-2.982,14.6-8.328c4.525-7.682,2.22-17.45-5.062-22.386c0.17-0.214,0.339-0.429,0.51-0.641c3.227,2.978,7.348,4.496,11.479,4.496c4.136,0,8.281-1.501,11.547-4.529v-0.01c6.531-6.068,7.12-16.086,1.57-22.887c0.223-0.157,0.447-0.312,0.672-0.468c3.149,5.159,8.712,8.074,14.445,8.074c2.677,0,5.392-0.625,7.914-1.962c7.985-4.216,11.162-13.893,7.393-21.948c0.304-0.123,0.605-0.248,0.91-0.369c0.103,0.293,0.196,0.59,0.316,0.872c0.212,0.509,0.444,1.01,0.706,1.49c0.26,0.481,0.541,0.962,0.85,1.413c0.299,0.462,0.638,0.904,0.985,1.327c0.348,0.433,0.725,0.846,1.112,1.231c0.396,0.394,0.811,0.76,1.236,1.116c0.426,0.347,0.879,0.673,1.334,0.98c0.463,0.299,0.937,0.587,1.43,0.847c0.483,0.25,0.986,0.49,1.488,0.702c0.512,0.211,1.034,0.394,1.565,0.558c0.522,0.154,1.062,0.288,1.604,0.404c0.541,0.106,1.092,0.183,1.643,0.24c0.55,0.057,1.111,0.086,1.662,0.086s1.111-0.029,1.662-0.086c0.542-0.057,1.102-0.134,1.643-0.24c0.531-0.115,1.073-0.25,1.604-0.404c0.522-0.163,1.044-0.347,1.555-0.558c0.512-0.211,1.015-0.452,1.498-0.702c0.483-0.26,0.966-0.548,1.42-0.847c0.463-0.307,0.908-0.634,1.333-0.98c0.435-0.356,0.85-0.721,1.237-1.116c0.386-0.385,0.763-0.798,1.121-1.231c0.347-0.423,0.676-0.865,0.985-1.327c0.098-0.147,0.191-0.301,0.286-0.454c0.191,0.114,0.379,0.232,0.571,0.346c-0.048,0.083-0.104,0.159-0.151,0.243c-4.512,8.145-1.547,18.377,6.637,22.868h-0.009c2.59,1.424,5.401,2.097,8.155,2.097c5.962,0,11.739-3.136,14.822-8.704c0.049-0.088,0.084-0.179,0.131-0.268c0.199,0.101,0.397,0.205,0.597,0.305c-0.043,0.089-0.096,0.171-0.138,0.261c-3.942,8.424-0.271,18.435,8.203,22.359c2.31,1.068,4.735,1.567,7.112,1.567c6.377,0,12.484-3.606,15.353-9.742c0.042-0.09,0.071-0.183,0.111-0.273c0.203,0.086,0.406,0.173,0.61,0.259c-0.038,0.093-0.086,0.179-0.122,0.274c-3.353,8.675,0.995,18.407,9.71,21.753c2,0.76,4.049,1.125,6.068,1.125c6.793,0,13.199-4.106,15.788-10.79c0.036-0.094,0.059-0.19,0.094-0.285c0.209,0.072,0.419,0.143,0.628,0.215c-0.032,0.095-0.073,0.185-0.103,0.281c-2.764,8.877,2.232,18.301,11.15,21.052c1.671,0.509,3.353,0.749,5.005,0.749c7.217,0,13.904-4.635,16.146-11.858c0.028-0.09,0.043-0.18,0.069-0.269c0.215,0.059,0.433,0.113,0.648,0.172c-0.024,0.092-0.057,0.179-0.08,0.272c-2.165,9.039,3.439,18.118,12.532,20.272c1.314,0.307,2.628,0.461,3.933,0.461c7.643,0,14.58-5.203,16.435-12.935c0.022-0.094,0.032-0.187,0.052-0.281c0.216,0.044,0.43,0.091,0.646,0.135c-0.017,0.092-0.045,0.18-0.061,0.272c-1.565,9.164,4.628,17.858,13.837,19.416c0.956,0.163,1.913,0.24,2.85,0.24c8.097,0,15.257-5.809,16.658-14.012c0.017-0.097,0.02-0.193,0.034-0.289c0.219,0.03,0.439,0.059,0.658,0.089c-0.012,0.097-0.035,0.19-0.045,0.288c-0.966,9.241,5.788,17.512,15.074,18.474c0.589,0.067,1.188,0.096,1.768,0.096c8.551,0,15.894-6.443,16.802-15.099c0.009-0.087,0.006-0.173,0.014-0.26c0.219,0.016,0.439,0.029,0.658,0.044c-0.005,0.089-0.021,0.175-0.024,0.264c-0.367,9.29,6.899,17.119,16.232,17.484c0.223,0.009,0.454,0.019,0.677,0.019c9.034,0,16.522-7.106,16.88-16.165c0.004-0.095-0.005-0.188-0.003-0.283c0.226,0.002,0.452,0.004,0.678,0.006c0.001,0.096-0.01,0.19-0.008,0.286c0.212,9.156,7.739,16.435,16.9,16.435c0.135,0,0.27-0.009,0.406-0.009c9.333-0.222,16.716-7.924,16.503-17.224c-0.002-0.09-0.016-0.177-0.02-0.267c0.222-0.012,0.445-0.019,0.667-0.032c0.006,0.09,0.002,0.179,0.01,0.27c0.773,8.761,8.154,15.368,16.832,15.368c0.493,0,0.985-0.02,1.488-0.068c9.305-0.808,16.184-8.973,15.373-18.233c-0.008-0.094-0.029-0.184-0.039-0.277c0.244-0.029,0.487-0.061,0.73-0.09c0.049,0.345,0.091,0.691,0.158,1.031c0.107,0.538,0.242,1.077,0.406,1.596c0.164,0.529,0.348,1.048,0.56,1.548c0.212,0.51,0.444,1.01,0.705,1.49c0.261,0.491,0.542,0.962,0.851,1.424c0.309,0.452,0.637,0.904,0.985,1.327c0.348,0.424,0.725,0.837,1.112,1.231c0.395,0.384,0.811,0.76,1.236,1.105c0.426,0.347,0.879,0.683,1.333,0.981c0.464,0.308,0.938,0.587,1.43,0.846c0.483,0.259,0.985,0.49,1.488,0.702c0.512,0.211,1.034,0.393,1.565,0.557c0.522,0.154,1.062,0.299,1.604,0.405c0.541,0.105,1.092,0.192,1.642,0.24c0.551,0.057,1.112,0.086,1.663,0.086c0.55,0,1.111-0.029,1.662-0.086c0.036-0.003,0.073-0.01,0.109-0.013c-6.443,3.445-10.126,10.808-8.545,18.285c1.614,7.606,8.146,12.924,15.586,13.338c-7.112,2.414-11.972,9.358-11.402,17.157c0.58,7.895,6.542,14.117,14.049,15.377c-7.478,1.606-13.14,8.155-13.314,16.099c-0.164,7.982,5.294,14.791,12.753,16.666c-7.642,0.98-13.874,7.106-14.647,15.069c-0.783,7.982,4.173,15.194,11.517,17.609c-7.72,0.423-14.397,6.125-15.721,14.031c-1.324,7.905,3.121,15.444,10.271,18.349c-7.73-0.068-14.744,5.174-16.59,12.983c-1.846,7.799,2.097,15.617,9.054,18.983c-7.71-0.586-15.073,4.193-17.44,11.858c-2.358,7.665,1.053,15.724,7.778,19.542c-7.652-1.106-15.325,3.144-18.204,10.626h-0.009c-2.88,7.473-0.048,15.733,6.367,20.013c-7.536-1.655-15.479,2.01-18.919,9.241c-3.42,7.203-1.265,15.608,4.744,20.359c-7.333-2.212-15.498,0.779-19.518,7.655c-4,6.857-2.6,15.359,2.918,20.609c-7.063-2.837-15.411-0.644-20.059,5.779c-4.619,6.399-4.069,14.916,0.82,20.675c-0.477-0.255-0.972-0.492-1.477-0.691c-0.503-0.212-1.034-0.404-1.556-0.558c-0.522-0.163-1.062-0.299-1.604-0.404c-0.541-0.115-1.092-0.193-1.642-0.251c-1.102-0.105-2.223-0.105-3.324,0c-0.551,0.058-1.101,0.135-1.643,0.251c-0.541,0.105-1.082,0.24-1.604,0.404c-0.522,0.154-1.053,0.346-1.555,0.558c-0.512,0.202-1.014,0.442-1.497,0.702c-0.493,0.25-0.966,0.539-1.421,0.846c-0.463,0.299-0.917,0.625-1.343,0.972c-0.426,0.355-0.841,0.731-1.228,1.115c-0.395,0.385-0.773,0.798-1.12,1.231c-0.348,0.424-0.677,0.875-0.986,1.327s-0.589,0.933-0.85,1.413c-0.26,0.481-0.493,0.991-0.705,1.491c-0.213,0.509-0.396,1.028-0.56,1.548c-0.164,0.53-0.3,1.068-0.406,1.606c-0.107,0.539-0.193,1.088-0.252,1.626c-0.048,0.548-0.077,1.106-0.077,1.654c0,0.558,0.029,1.116,0.077,1.664c0.058,0.538,0.145,1.087,0.252,1.625c0.106,0.539,0.242,1.077,0.406,1.606c0.164,0.519,0.347,1.039,0.56,1.549c0.212,0.501,0.444,1.01,0.705,1.49c0.261,0.481,0.541,0.962,0.85,1.414c0.31,0.461,0.638,0.903,0.986,1.327c0.347,0.432,0.725,0.846,1.12,1.23c0.387,0.385,0.802,0.76,1.228,1.116c0.426,0.347,0.879,0.673,1.343,0.971c0.455,0.308,0.928,0.596,1.421,0.847c0.483,0.259,0.985,0.5,1.497,0.702c0.502,0.211,1.033,0.404,1.555,0.558c0.522,0.163,1.063,0.298,1.604,0.404c0.542,0.116,1.092,0.193,1.643,0.25c0.551,0.058,1.112,0.086,1.662,0.086c0.551,0,1.112-0.028,1.663-0.086c0.55-0.057,1.101-0.134,1.642-0.25c0.542-0.106,1.082-0.24,1.604-0.404c0.522-0.154,1.053-0.347,1.556-0.558c0.512-0.202,1.014-0.442,1.497-0.702c0.493-0.251,0.966-0.539,1.42-0.847c0.464-0.298,0.918-0.625,1.344-0.971c0.425-0.356,0.841-0.731,1.227-1.116c0.396-0.384,0.773-0.798,1.121-1.23c0.348-0.424,0.677-0.866,0.986-1.327c0.309-0.453,0.589-0.933,0.85-1.414c0.26-0.481,0.493-0.99,0.705-1.49c0.212-0.51,0.396-1.029,0.56-1.549c0.155-0.529,0.3-1.067,0.406-1.606c0.107-0.538,0.193-1.087,0.242-1.625c0.059-0.548,0.087-1.106,0.087-1.664c0-0.548-0.028-1.105-0.087-1.654c-0.048-0.538-0.135-1.087-0.242-1.626c-0.053-0.271-0.117-0.543-0.186-0.813c2.524,6.74,8.958,10.949,15.83,10.949c1.846,0,3.71-0.298,5.556-0.933h-0.009c8.647-2.991,13.305-12.271,10.599-20.907c3.806,8.213,13.507,11.993,21.943,8.434c8.435-3.549,12.454-13.118,9.179-21.561c4.348,7.953,14.291,11.078,22.465,6.962c8.174-4.106,11.547-13.915,7.71-22.119c4.88,7.636,15.015,10.069,22.89,5.424c7.885-4.665,10.58-14.714,6.146-22.638c5.401,7.308,15.701,9.068,23.247,3.876c7.536-5.193,9.527-15.397,4.571-22.994c5.903,6.905,16.29,7.924,23.45,2.221c7.16-5.712,8.416-16.031,2.918-23.273c6.387,6.482,16.833,6.761,23.567,0.548c6.725-6.212,7.237-16.608,1.217-23.427c6.841,6.001,17.296,5.52,23.547-1.173c6.251-6.684,5.991-17.079-0.503-23.446c7.285,5.462,17.654,4.183,23.373-2.953c5.729-7.136,4.676-17.474-2.281-23.339c7.691,4.885,17.934,2.817,23.084-4.741h-0.009c5.159-7.559,3.294-17.811-4.107-23.109c8.048,4.269,18.106,1.404,22.648-6.55h-0.009c4.531-7.934,1.865-17.993-5.923-22.695c8.368,3.587,18.145-0.086,22.01-8.367c3.865-8.279,0.387-18.089-7.768-22.148c8.648,2.885,18.079-1.586,21.248-10.155c3.16-8.578-1.13-18.061-9.594-21.426c8.86,2.145,17.875-3.106,20.3-11.915c2.425-8.809-2.657-17.907-11.401-20.542c9.024,1.404,17.576-4.596,19.228-13.588h0.009c1.652-8.982-4.184-17.608-13.092-19.503c9.091,0.616,17.073-6.087,17.953-15.175C999.003,479.721,992.453,471.624,983.409,470.499z' />\n                        <path id='shigeru_logo_afro_w' d='M983.409,470.499c9.111-0.163,16.494-7.511,16.59-16.647c0.107-9.107-7.092-16.608-16.175-16.993c9.044-0.951,15.75-8.896,15.074-17.984c-0.677-9.078-8.474-15.944-17.556-15.569c8.918-1.721,14.918-10.193,13.459-19.195c-1.449-8.992-9.826-15.166-18.841-14.021c8.744-2.472,14.001-11.425,11.779-20.263c-2.242-8.905-11.218-14.367-20.165-12.328c8.619-3.136,13.17-12.579,10.184-21.254c-2.976-8.655-12.339-13.328-21.054-10.608c8.271-3.875,11.971-13.617,8.28-21.993c-3.681-8.348-13.353-12.233-21.788-8.857c7.855-4.549,10.715-14.522,6.358-22.542c-4.339-8.001-14.261-11.088-22.378-7.068c7.421-5.175,9.45-15.32,4.474-22.946c-4.966-7.616-15.063-9.914-22.832-5.299c6.957-5.742,8.165-15.983,2.618-23.186c-5.536-7.193-15.759-8.703-23.141-3.539c6.474-6.251,6.89-16.532,0.822-23.282c-6.059-6.742-16.349-7.482-23.306-1.808c5.952-6.713,5.585-16.974-0.957-23.244c-6.599-6.328-17.025-6.261-23.537,0.067c5.594-7.136,4.522-17.454-2.513-23.282c-7.044-5.838-17.44-5.01-23.47,1.76c5.073-7.51,3.276-17.723-4.164-23.051c-7.431-5.318-17.731-3.77-23.276,3.404c4.531-7.838,2.019-17.897-5.769-22.696c-7.787-4.789-17.962-2.529-22.976,5.01c3.98-8.136,0.782-18.002-7.315-22.253c-8.097-4.25-18.078-1.308-22.581,6.549c3.42-8.376-0.444-18.002-8.803-21.695c-8.357-3.702-18.106-0.106-22.078,8.011c2.831-8.578-1.652-17.907-10.242-21.041c-8.581-3.135-18.078,1.096-21.489,9.472c2.27-8.751-2.831-17.782-11.604-20.349c-8.764-2.568-17.943,2.261-20.813,10.829c1.68-8.867-3.99-17.532-12.9-19.532c-8.918-1.99-17.769,3.414-20.068,12.146c1.101-8.953-5.111-17.243-14.136-18.666c-9.025-1.423-17.508,4.54-19.247,13.397c0.541-9.011-6.194-16.888-15.286-17.743c-9.083-0.846-17.17,5.616-18.349,14.55c-0.048-9.011-7.256-16.435-16.378-16.723c-9.141-0.288-16.812,6.693-17.402,15.704c-0.59-9.011-8.252-16.003-17.383-15.733c-9.121,0.279-16.339,7.684-16.406,16.695C465.5,7.769,457.431,1.287,448.34,2.124v0.009c-9.092,0.837-15.837,8.703-15.315,17.705C431.305,10.981,422.831,5,413.798,6.413h0.009c-9.035,1.413-15.266,9.684-14.174,18.637c-2.281-8.732-11.122-14.156-20.04-12.175c-8.919,1.991-14.609,10.646-12.938,19.522c-2.841-8.578-12.03-13.425-20.803-10.876c-8.773,2.558-13.894,11.579-11.633,20.33c-3.402-8.386-12.88-12.636-21.48-9.511c-8.589,3.125-13.102,12.463-10.271,21.051c-3.942-8.145-13.701-11.761-22.069-8.078c-8.368,3.683-12.242,13.3-8.841,21.686c-4.483-7.866-14.464-10.828-22.561-6.588c-8.106,4.232-11.324,14.089-7.363,22.234c-5.005-7.549-15.17-9.819-22.967-5.049c-7.788,4.78-10.329,14.829-5.817,22.687c-5.517-7.184-15.817-8.752-23.266-3.443c-7.44,5.308-9.266,15.521-4.203,23.042c-6.02-6.79-16.416-7.636-23.46-1.808c-7.14,5.885-8.174,16.396-2.348,23.551c-6.474-6.578-17.083-6.751-23.779-0.356c-6.677,6.377-6.948,16.897-0.657,23.61c-6.957-6.03-17.518-5.415-23.702,1.443c-6.174,6.846-5.671,17.349,1.082,23.58c-7.392-5.471-17.856-4.049-23.489,3.25c-5.614,7.271-4.338,17.657,2.812,23.369c-7.788-4.818-18.059-2.568-23.093,5.116c-5.015,7.664-2.957,17.877,4.57,23.042c-8.136-4.135-18.156-1.077-22.533,6.963c-4.377,8.011-1.526,17.993,6.329,22.561c-8.435-3.395-18.117,0.471-21.808,8.818c-3.681,8.309-0.058,18.002,8.097,21.926c-8.677-2.635-17.943,2.029-20.919,10.626c-2.967,8.559,1.42,17.878,9.817,21.148c-8.831-1.837-17.614,3.568-19.836,12.358c-2.242,8.837,2.995,17.8,11.73,20.291c-9.015-1.173-17.392,4.992-18.871,13.983c-1.469,8.991,4.512,17.483,13.43,19.224c-9.082-0.394-16.89,6.453-17.585,15.531c-0.696,9.117,6.039,17.09,15.121,18.022c-9.121,0.327-16.378,7.828-16.29,16.964c0.077,9.136,7.45,16.493,16.561,16.676c-9.044,1.115-15.614,9.193-14.754,18.291c0.86,9.088,8.851,15.81,17.953,15.204c-8.928,1.875-14.783,10.492-13.15,19.474c1.643,8.992,10.184,15.012,19.199,13.628c-8.735,2.616-13.837,11.704-11.431,20.522c2.406,8.828,11.431,14.098,20.31,11.944c-8.493,3.346-12.812,12.829-9.662,21.416c3.15,8.588,12.58,13.079,21.238,10.194c-8.174,4.038-11.672,13.848-7.817,22.137c3.855,8.29,13.623,11.982,22.01,8.405c-7.817,4.684-10.503,14.743-5.981,22.695v-0.009c4.522,7.954,14.561,10.848,22.62,6.597c-7.401,5.289-9.276,15.521-4.136,23.09c5.131,7.568,15.373,9.646,23.064,4.779c-6.966,5.857-8.039,16.195-2.319,23.34c5.701,7.136,16.058,8.433,23.354,3.001c-6.483,6.356-6.764,16.742-0.532,23.426c6.232,6.693,16.648,7.203,23.508,1.25c-5.99,6.819-5.488,17.185,1.218,23.388c6.706,6.212,17.121,5.963,23.518-0.461c-5.459,7.222-4.203,17.512,2.927,23.224c7.131,5.703,17.489,4.713,23.412-2.135c-4.928,7.587-2.947,17.753,4.57,22.946c7.508,5.183,17.759,3.471,23.19-3.76c-4.377,7.905-1.691,17.907,6.164,22.561c7.865,4.664,17.982,2.241,22.889-5.376c-3.845,8.193-0.483,18.002,7.682,22.119c8.165,4.126,18.098,1.019,22.465-6.915c-3.285,8.434,0.734,17.993,9.16,21.561c8.416,3.568,18.117-0.193,21.943-8.386c-2.705,8.626,1.932,17.896,10.57,20.897v0.01c8.812,3.058,18.456-1.568,21.537-10.348c0.032-0.091,0.051-0.182,0.081-0.273c0.23,0.072,0.462,0.139,0.692,0.211c-0.139,0.485-0.27,0.975-0.367,1.467c-0.106,0.539-0.193,1.088-0.242,1.626c-0.058,0.548-0.087,1.106-0.087,1.654c0,0.558,0.029,1.116,0.087,1.664c0.049,0.538,0.136,1.087,0.242,1.625c0.107,0.539,0.252,1.077,0.406,1.606c0.165,0.519,0.348,1.039,0.56,1.549c0.213,0.501,0.444,1.01,0.706,1.49c0.26,0.481,0.541,0.962,0.85,1.414c0.31,0.461,0.638,0.903,0.986,1.327c0.347,0.432,0.725,0.846,1.12,1.23c0.387,0.385,0.802,0.76,1.228,1.116c0.425,0.347,0.879,0.673,1.343,0.971c0.454,0.308,0.928,0.596,1.42,0.847c0.483,0.259,0.986,0.5,1.498,0.702c0.502,0.211,1.024,0.404,1.555,0.558c0.522,0.163,1.063,0.298,1.604,0.404c0.542,0.116,1.092,0.193,1.643,0.25c0.551,0.058,1.112,0.086,1.662,0.086c0.551,0,1.112-0.028,1.663-0.086c0.55-0.057,1.101-0.134,1.642-0.25c0.542-0.106,1.082-0.24,1.604-0.404c0.522-0.154,1.053-0.347,1.556-0.558c0.512-0.202,1.014-0.442,1.497-0.702c0.483-0.251,0.966-0.539,1.42-0.847c0.464-0.298,0.909-0.625,1.333-0.971c0.435-0.356,0.851-0.731,1.237-1.116c0.396-0.384,0.763-0.798,1.121-1.23c0.348-0.424,0.677-0.866,0.985-1.327c0.3-0.453,0.59-0.933,0.851-1.414c0.251-0.481,0.493-0.99,0.705-1.49c0.212-0.51,0.396-1.029,0.56-1.549c0.155-0.529,0.29-1.067,0.406-1.606c0.107-0.538,0.184-1.087,0.242-1.625c0.059-0.548,0.087-1.106,0.087-1.664c0-0.548-0.028-1.105-0.087-1.654c-0.058-0.538-0.135-1.087-0.242-1.626c-0.116-0.538-0.251-1.076-0.406-1.606c-0.164-0.519-0.348-1.039-0.56-1.548c-0.212-0.501-0.454-1.011-0.705-1.491c-0.261-0.481-0.551-0.962-0.851-1.413c-0.309-0.452-0.637-0.903-0.985-1.327c-0.348-0.433-0.725-0.846-1.121-1.231c-0.386-0.384-0.802-0.76-1.227-1.115c-0.435-0.346-0.879-0.673-1.344-0.972c-0.454-0.307-0.937-0.596-1.42-0.846c-0.483-0.259-0.985-0.5-1.497-0.702c-0.503-0.212-1.034-0.404-1.556-0.558c-0.522-0.163-1.062-0.299-1.604-0.404c-0.541-0.115-1.092-0.193-1.642-0.251c-1.102-0.105-2.223-0.105-3.324,0c-0.551,0.058-1.101,0.135-1.643,0.251c-0.541,0.105-1.082,0.24-1.604,0.404c-0.531,0.154-1.053,0.346-1.555,0.558c-0.512,0.202-1.015,0.442-1.498,0.702c-0.493,0.25-0.966,0.539-1.43,0.846c-0.454,0.299-0.909,0.625-1.333,0.972c-0.087,0.073-0.167,0.154-0.253,0.228c-0.182-0.225-0.366-0.447-0.547-0.673c7.28-5.472,8.912-15.744,3.592-23.184h-0.009c-5.335-7.448-15.633-9.255-23.206-4.169c-0.159-0.247-0.314-0.498-0.472-0.746c7.842-4.689,10.53-14.781,5.967-22.743c-4.565-7.958-14.661-10.784-22.725-6.441c-0.134-0.259-0.265-0.519-0.398-0.779c8.258-3.987,11.827-13.832,7.972-22.169c-3.856-8.341-13.706-12.022-22.123-8.367c-0.112-0.268-0.222-0.538-0.333-0.806c8.557-3.329,12.901-12.881,9.702-21.495c-3.201-8.627-12.754-13.065-21.433-10.044c-0.091-0.274-0.18-0.549-0.27-0.823c8.791-2.71,13.811-11.933,11.239-20.763c-2.581-8.829-11.783-13.937-20.672-11.53c-0.073-0.284-0.143-0.568-0.215-0.853c8.96-2.092,14.616-10.954,12.656-19.938c-1.961-8.993-10.799-14.716-19.832-12.924c-0.052-0.286-0.104-0.571-0.155-0.857c9.085-1.476,15.334-9.927,14.006-19.022c-1.338-9.102-9.746-15.415-18.875-14.252c-0.032-0.291-0.065-0.583-0.097-0.874c9.155-0.822,15.998-8.781,15.349-17.945c-0.659-9.16-8.574-16.071-17.746-15.596c-0.009-0.29-0.015-0.578-0.024-0.867c9.171-0.087,16.631-7.441,16.747-16.619c0.113-9.152-7.147-16.674-16.297-17.006c0.018-0.285,0.039-0.566,0.057-0.85c0.536,0.052,1.069,0.084,1.601,0.084c8.396,0,15.681-6.223,16.754-14.733c1.144-9.022-5.127-17.252-14.074-18.687c0.056-0.277,0.112-0.555,0.169-0.831c1.374,0.34,2.755,0.516,4.109,0.516c7.275,0,13.99-4.703,16.194-11.993c2.591-8.612-2.094-17.666-10.505-20.66c0.108-0.254,0.22-0.503,0.329-0.755c2.419,1.212,5.013,1.798,7.577,1.798c5.797,0,11.45-2.982,14.6-8.328c4.525-7.682,2.22-17.45-5.062-22.386c0.17-0.214,0.339-0.429,0.51-0.641c3.227,2.978,7.348,4.496,11.479,4.496c4.136,0,8.281-1.501,11.547-4.529v-0.01c6.531-6.068,7.12-16.086,1.57-22.887c0.223-0.157,0.447-0.312,0.672-0.468c3.149,5.159,8.712,8.074,14.445,8.074c2.677,0,5.392-0.625,7.914-1.962c7.985-4.216,11.162-13.893,7.393-21.948c0.304-0.123,0.605-0.248,0.91-0.369c0.103,0.293,0.196,0.59,0.316,0.872c0.212,0.509,0.444,1.01,0.706,1.49c0.26,0.481,0.541,0.962,0.85,1.413c0.299,0.462,0.638,0.904,0.985,1.327c0.348,0.433,0.725,0.846,1.112,1.231c0.396,0.394,0.811,0.76,1.236,1.116c0.426,0.347,0.879,0.673,1.334,0.98c0.463,0.299,0.937,0.587,1.43,0.847c0.483,0.25,0.986,0.49,1.488,0.702c0.512,0.211,1.034,0.394,1.565,0.558c0.522,0.154,1.062,0.288,1.604,0.404c0.541,0.106,1.092,0.183,1.643,0.24c0.55,0.057,1.111,0.086,1.662,0.086s1.111-0.029,1.662-0.086c0.542-0.057,1.102-0.134,1.643-0.24c0.531-0.115,1.073-0.25,1.604-0.404c0.522-0.163,1.044-0.347,1.555-0.558c0.512-0.211,1.015-0.452,1.498-0.702c0.483-0.26,0.966-0.548,1.42-0.847c0.463-0.307,0.908-0.634,1.333-0.98c0.435-0.356,0.85-0.721,1.237-1.116c0.386-0.385,0.763-0.798,1.121-1.231c0.347-0.423,0.676-0.865,0.985-1.327c0.098-0.147,0.191-0.301,0.286-0.454c0.191,0.114,0.379,0.232,0.571,0.346c-0.048,0.083-0.104,0.159-0.151,0.243c-4.512,8.145-1.547,18.377,6.637,22.868h-0.009c2.59,1.424,5.401,2.097,8.155,2.097c5.962,0,11.739-3.136,14.822-8.704c0.049-0.088,0.084-0.179,0.131-0.268c0.199,0.101,0.397,0.205,0.597,0.305c-0.043,0.089-0.096,0.171-0.138,0.261c-3.942,8.424-0.271,18.435,8.203,22.359c2.31,1.068,4.735,1.567,7.112,1.567c6.377,0,12.484-3.606,15.353-9.742c0.042-0.09,0.071-0.183,0.111-0.273c0.203,0.086,0.406,0.173,0.61,0.259c-0.038,0.093-0.086,0.179-0.122,0.274c-3.353,8.675,0.995,18.407,9.71,21.753c2,0.76,4.049,1.125,6.068,1.125c6.793,0,13.199-4.106,15.788-10.79c0.036-0.094,0.059-0.19,0.094-0.285c0.209,0.072,0.419,0.143,0.628,0.215c-0.032,0.095-0.073,0.185-0.103,0.281c-2.764,8.877,2.232,18.301,11.15,21.052c1.671,0.509,3.353,0.749,5.005,0.749c7.217,0,13.904-4.635,16.146-11.858c0.028-0.09,0.043-0.18,0.069-0.269c0.215,0.059,0.433,0.113,0.648,0.172c-0.024,0.092-0.057,0.179-0.08,0.272c-2.165,9.039,3.439,18.118,12.532,20.272c1.314,0.307,2.628,0.461,3.933,0.461c7.643,0,14.58-5.203,16.435-12.935c0.022-0.094,0.032-0.187,0.052-0.281c0.216,0.044,0.43,0.091,0.646,0.135c-0.017,0.092-0.045,0.18-0.061,0.272c-1.565,9.164,4.628,17.858,13.837,19.416c0.956,0.163,1.913,0.24,2.85,0.24c8.097,0,15.257-5.809,16.658-14.012c0.017-0.097,0.02-0.193,0.034-0.289c0.219,0.03,0.439,0.059,0.658,0.089c-0.012,0.097-0.035,0.19-0.045,0.288c-0.966,9.241,5.788,17.512,15.074,18.474c0.589,0.067,1.188,0.096,1.768,0.096c8.551,0,15.894-6.443,16.802-15.099c0.009-0.087,0.006-0.173,0.014-0.26c0.219,0.016,0.439,0.029,0.658,0.044c-0.005,0.089-0.021,0.175-0.024,0.264c-0.367,9.29,6.899,17.119,16.232,17.484c0.223,0.009,0.454,0.019,0.677,0.019c9.034,0,16.522-7.106,16.88-16.165c0.004-0.095-0.005-0.188-0.003-0.283c0.226,0.002,0.452,0.004,0.678,0.006c0.001,0.096-0.01,0.19-0.008,0.286c0.212,9.156,7.739,16.435,16.9,16.435c0.135,0,0.27-0.009,0.406-0.009c9.333-0.222,16.716-7.924,16.503-17.224c-0.002-0.09-0.016-0.177-0.02-0.267c0.222-0.012,0.445-0.019,0.667-0.032c0.006,0.09,0.002,0.179,0.01,0.27c0.773,8.761,8.154,15.368,16.832,15.368c0.493,0,0.985-0.02,1.488-0.068c9.305-0.808,16.184-8.973,15.373-18.233c-0.008-0.094-0.029-0.184-0.039-0.277c0.244-0.029,0.487-0.061,0.73-0.09c0.049,0.345,0.091,0.691,0.158,1.031c0.107,0.538,0.242,1.077,0.406,1.596c0.164,0.529,0.348,1.048,0.56,1.548c0.212,0.51,0.444,1.01,0.705,1.49c0.261,0.491,0.542,0.962,0.851,1.424c0.309,0.452,0.637,0.904,0.985,1.327c0.348,0.424,0.725,0.837,1.112,1.231c0.395,0.384,0.811,0.76,1.236,1.105c0.426,0.347,0.879,0.683,1.333,0.981c0.464,0.308,0.938,0.587,1.43,0.846c0.483,0.259,0.985,0.49,1.488,0.702c0.512,0.211,1.034,0.393,1.565,0.557c0.522,0.154,1.062,0.299,1.604,0.405c0.541,0.105,1.092,0.192,1.642,0.24c0.551,0.057,1.112,0.086,1.663,0.086c0.55,0,1.111-0.029,1.662-0.086c0.036-0.003,0.073-0.01,0.109-0.013c-6.443,3.445-10.126,10.808-8.545,18.285c1.614,7.606,8.146,12.924,15.586,13.338c-7.112,2.414-11.972,9.358-11.402,17.157c0.58,7.895,6.542,14.117,14.049,15.377c-7.478,1.606-13.14,8.155-13.314,16.099c-0.164,7.982,5.294,14.791,12.753,16.666c-7.642,0.98-13.874,7.106-14.647,15.069c-0.783,7.982,4.173,15.194,11.517,17.609c-7.72,0.423-14.397,6.125-15.721,14.031c-1.324,7.905,3.121,15.444,10.271,18.349c-7.73-0.068-14.744,5.174-16.59,12.983c-1.846,7.799,2.097,15.617,9.054,18.983c-7.71-0.586-15.073,4.193-17.44,11.858c-2.358,7.665,1.053,15.724,7.778,19.542c-7.652-1.106-15.325,3.144-18.204,10.626h-0.009c-2.88,7.473-0.048,15.733,6.367,20.013c-7.536-1.655-15.479,2.01-18.919,9.241c-3.42,7.203-1.265,15.608,4.744,20.359c-7.333-2.212-15.498,0.779-19.518,7.655c-4,6.857-2.6,15.359,2.918,20.609c-7.063-2.837-15.411-0.644-20.059,5.779c-4.619,6.399-4.069,14.916,0.82,20.675c-0.477-0.255-0.972-0.492-1.477-0.691c-0.503-0.212-1.034-0.404-1.556-0.558c-0.522-0.163-1.062-0.299-1.604-0.404c-0.541-0.115-1.092-0.193-1.642-0.251c-1.102-0.105-2.223-0.105-3.324,0c-0.551,0.058-1.101,0.135-1.643,0.251c-0.541,0.105-1.082,0.24-1.604,0.404c-0.522,0.154-1.053,0.346-1.555,0.558c-0.512,0.202-1.014,0.442-1.497,0.702c-0.493,0.25-0.966,0.539-1.421,0.846c-0.463,0.299-0.917,0.625-1.343,0.972c-0.426,0.355-0.841,0.731-1.228,1.115c-0.395,0.385-0.773,0.798-1.12,1.231c-0.348,0.424-0.677,0.875-0.986,1.327s-0.589,0.933-0.85,1.413c-0.26,0.481-0.493,0.991-0.705,1.491c-0.213,0.509-0.396,1.028-0.56,1.548c-0.164,0.53-0.3,1.068-0.406,1.606c-0.107,0.539-0.193,1.088-0.252,1.626c-0.048,0.548-0.077,1.106-0.077,1.654c0,0.558,0.029,1.116,0.077,1.664c0.058,0.538,0.145,1.087,0.252,1.625c0.106,0.539,0.242,1.077,0.406,1.606c0.164,0.519,0.347,1.039,0.56,1.549c0.212,0.501,0.444,1.01,0.705,1.49c0.261,0.481,0.541,0.962,0.85,1.414c0.31,0.461,0.638,0.903,0.986,1.327c0.347,0.432,0.725,0.846,1.12,1.23c0.387,0.385,0.802,0.76,1.228,1.116c0.426,0.347,0.879,0.673,1.343,0.971c0.455,0.308,0.928,0.596,1.421,0.847c0.483,0.259,0.985,0.5,1.497,0.702c0.502,0.211,1.033,0.404,1.555,0.558c0.522,0.163,1.063,0.298,1.604,0.404c0.542,0.116,1.092,0.193,1.643,0.25c0.551,0.058,1.112,0.086,1.662,0.086c0.551,0,1.112-0.028,1.663-0.086c0.55-0.057,1.101-0.134,1.642-0.25c0.542-0.106,1.082-0.24,1.604-0.404c0.522-0.154,1.053-0.347,1.556-0.558c0.512-0.202,1.014-0.442,1.497-0.702c0.493-0.251,0.966-0.539,1.42-0.847c0.464-0.298,0.918-0.625,1.344-0.971c0.425-0.356,0.841-0.731,1.227-1.116c0.396-0.384,0.773-0.798,1.121-1.23c0.348-0.424,0.677-0.866,0.986-1.327c0.309-0.453,0.589-0.933,0.85-1.414c0.26-0.481,0.493-0.99,0.705-1.49c0.212-0.51,0.396-1.029,0.56-1.549c0.155-0.529,0.3-1.067,0.406-1.606c0.107-0.538,0.193-1.087,0.242-1.625c0.059-0.548,0.087-1.106,0.087-1.664c0-0.548-0.028-1.105-0.087-1.654c-0.048-0.538-0.135-1.087-0.242-1.626c-0.053-0.271-0.117-0.543-0.186-0.813c2.524,6.74,8.958,10.949,15.83,10.949c1.846,0,3.71-0.298,5.556-0.933h-0.009c8.647-2.991,13.305-12.271,10.599-20.907c3.806,8.213,13.507,11.993,21.943,8.434c8.435-3.549,12.454-13.118,9.179-21.561c4.348,7.953,14.291,11.078,22.465,6.962c8.174-4.106,11.547-13.915,7.71-22.119c4.88,7.636,15.015,10.069,22.89,5.424c7.885-4.665,10.58-14.714,6.146-22.638c5.401,7.308,15.701,9.068,23.247,3.876c7.536-5.193,9.527-15.397,4.571-22.994c5.903,6.905,16.29,7.924,23.45,2.221c7.16-5.712,8.416-16.031,2.918-23.273c6.387,6.482,16.833,6.761,23.567,0.548c6.725-6.212,7.237-16.608,1.217-23.427c6.841,6.001,17.296,5.52,23.547-1.173c6.251-6.684,5.991-17.079-0.503-23.446c7.285,5.462,17.654,4.183,23.373-2.953c5.729-7.136,4.676-17.474-2.281-23.339c7.691,4.885,17.934,2.817,23.084-4.741h-0.009c5.159-7.559,3.294-17.811-4.107-23.109c8.048,4.269,18.106,1.404,22.648-6.55h-0.009c4.531-7.934,1.865-17.993-5.923-22.695c8.368,3.587,18.145-0.086,22.01-8.367c3.865-8.279,0.387-18.089-7.768-22.148c8.648,2.885,18.079-1.586,21.248-10.155c3.16-8.578-1.13-18.061-9.594-21.426c8.86,2.145,17.875-3.106,20.3-11.915c2.425-8.809-2.657-17.907-11.401-20.542c9.024,1.404,17.576-4.596,19.228-13.588h0.009c1.652-8.982-4.184-17.608-13.092-19.503c9.091,0.616,17.073-6.087,17.953-15.175C999.003,479.721,992.453,471.624,983.409,470.499z' />\n                    </g>\n\n                    <g id='shigeru_logo_glasses'>\n                        <path id='shigeru_logo_glasses_k' d='M683.583,658.185c21.768-25.116,36.743-63.418,17.696-85.395c-16.87-19.465-158.908-27.628-182.853,0c-2.859,3.298-4.938,6.735-6.367,10.262c-3.866-0.51-7.894-0.78-12.054-0.78s-8.189,0.27-12.054,0.78c-1.429-3.527-3.509-6.964-6.367-10.262c-23.945-27.628-165.982-19.465-182.853,0c-19.047,21.977-4.072,60.279,17.696,85.395s124.079,19.674,141.493-0.419c11.203-12.926,27.693-32.956,31.656-52.956c3.237-0.46,6.72-0.72,10.429-0.72s7.191,0.26,10.429,0.72c3.964,20,20.453,40.029,31.656,52.956C559.504,677.859,661.815,683.301,683.583,658.185z' />\n                        <path id='shigeru_logo_glasses_w' d='M683.583,658.185c21.768-25.116,36.743-63.418,17.696-85.395c-16.87-19.465-158.908-27.628-182.853,0c-2.859,3.298-4.938,6.735-6.367,10.262c-3.866-0.51-7.894-0.78-12.054-0.78s-8.189,0.27-12.054,0.78c-1.429-3.527-3.509-6.964-6.367-10.262c-23.945-27.628-165.982-19.465-182.853,0c-19.047,21.977-4.072,60.279,17.696,85.395s124.079,19.674,141.493-0.419c11.203-12.926,27.693-32.956,31.656-52.956c3.237-0.46,6.72-0.72,10.429-0.72s7.191,0.26,10.429,0.72c3.964,20,20.453,40.029,31.656,52.956C559.504,677.859,661.815,683.301,683.583,658.185z' />\n                    </g>\n\n                    <g id='shigeru_logo_kanji'>\n                        <path id='shigeru_logo_kanji_k' d='M853.449,463.52c-0.17-0.341-0.341-0.682-0.511-1.023C853.595,463.182,853.357,462.73,853.449,463.52z M811.763,232.332c8.615,7.241,17.914,15.785,26.341,24.039c9.071,8.885,17.239,23.264,6.393,32.99c-1.312,1.177-8.154,1.933-10.23,2.557c-1.227-3.355-4.161-0.642-6.649-2.302c-2.427-1.618-3.985-3.845-6.905-5.626c-5.887-3.59-5.904-11.058-13.043-13.043c-7.251-2.016-19.978-1.076-26.085,1.534c-0.132,0.056-3.172,1.672-3.58,0.512c-0.764,0.729-3.101,2.925-5.115,2.302c11.32-6.07,22.883-13.451,32.223-22.249c-2.725-9.317-22.976-26.146-30.433-34.525c0.597,0.171,1.194,0.341,1.79,0.511c-0.085-0.256-0.17-0.511-0.256-0.767c-1.303-0.843-1.637-0.896-2.557-2.557c3.95,0.424,7.66,2.804,10.741,4.348c3.41,0.938,6.82,1.875,10.23,2.813C799.774,226.22,807.01,228.337,811.763,232.332z M784.655,368.897c-0.171-0.085-0.341-0.171-0.511-0.256c-0.171-0.256-0.341-0.512-0.511-0.767C784.578,368.352,784.165,367.993,784.655,368.897z M783.121,369.153c-0.979-0.669-1.246-0.864-1.534-2.302C782.098,367.618,782.609,368.385,783.121,369.153z M778.773,376.313c-0.341,0-0.682,0-1.023,0c-0.17-0.341-0.341-0.682-0.511-1.023c0.833-1.022,0.645-0.316,0.511-1.279c-0.996-0.431-0.389,0.25-0.767-0.767c0.085,0.17,0.17,0.341,0.256,0.511c0.17,0.085,0.341,0.17,0.511,0.256c0.597,0.426,1.194,0.852,1.79,1.279C778.481,376.006,778.925,375.044,778.773,376.313z M775.96,372.477c-0.426-0.597-0.852-1.194-1.279-1.79c1.331,0.422,1.517,0.922,2.302,1.79C776.642,372.477,776.301,372.477,775.96,372.477zM558.582,449.71c-3.81,6.172-4.996,11.819-8.184,16.367c-2.919-0.781-2.733,0.559-4.859,1.79c-7.242-0.825-15.485-2.671-18.925-6.393c0.173-3.109-5.093-6.301-6.649-8.951c-0.17-2.983-0.341-5.968-0.511-8.951c-1.933-6.477-4.839-14.122-5.371-21.994c-0.291-4.304,13.787-25.124,16.879-31.967c7.122-15.763,11.094-33.234,14.321-48.846c1.501-7.262-1.299-12.935,0.256-18.925c6.118,0.625,16.26,4.846,20.715,10.23c1.394,1.684,2.229,4.737,4.092,6.649c-0.171,0.511-0.341,1.023-0.511,1.534c0.004,3.245,2.097,10.166,3.58,14.321c1.464,4.103,0.519,9.244,1.79,13.81C583.13,396.843,572.047,427.896,558.582,449.71z M604.871,439.225c-0.085-0.17-0.17-0.341-0.256-0.511c-0.511-0.341-1.023-0.682-1.534-1.023C604.144,438.005,605.172,438.231,604.871,439.225z M616.123,445.363c0-0.171,0-0.341,0-0.511c0.085,0.085,0.17,0.17,0.256,0.256c1.025,0.356,0.445-0.086,0.767,0.767C616.805,445.704,616.464,445.533,616.123,445.363z M665.992,443.317c-1.705,0.284-4.539,2.114-7.416,1.023c0.767-0.597,1.535-1.194,2.302-1.79c0.852,0.256,1.705,0.511,2.557,0.767c0.085-0.426,0.171-0.852,0.256-1.279c0.852,0.085,1.705,0.171,2.557,0.256C665.417,442.943,665.476,442.397,665.992,443.317z M853.449,497.789c0.085,1.023,0.171,2.046,0.256,3.069c-7.219,3.477-14.395,9.235-24.039,7.161c-0.468-0.101-2.151-0.361-2.557,0.511c-1.849-1.783-15.094-4.007-19.436-5.626c-3.414-1.273-9.276-5.271-13.298-7.416c-22.93-12.231-42.817-27.263-61.377-44.499c-6.649-6.989-13.299-13.981-19.948-20.971c-2.34-2.933-4.805-8.199-7.928-9.462c-4.347,3.324-8.695,6.65-13.043,9.974c-2.649,2.129-7.501,2.322-10.485,5.371c-0.767-0.171-1.535-0.341-2.302-0.511c-3.486,1.97-4.326,3.984-8.439,6.138c-3.604,1.888-7.02-1.976-12.02,0c-6.142,2.427-12.08,6.042-19.18,6.649c-1.937-1.539-2.511-1.669-5.626-1.023c0,0.085,0,0.17,0,0.256c0.682,0.256,1.364,0.511,2.046,0.767c-7.025,0.052-25.91-5.14-30.177-8.695c0.067-1.779-12.016-9.64-15.089-10.997c0-0.085,0-0.17,0-0.256c0.341-0.256,0.682-0.511,1.023-0.767c1.184,1.162,0.232,0.771,1.79,0.767c-1.153-2.935-3.408-4.857-4.859-6.905c0.085,0,0.171,0,0.256,0c5.74,2.986,9.552,3.566,16.367,5.626c-0.426-0.682-0.852-1.364-1.279-2.046c12.987,7.766,26.23-1.133,38.872-3.069c-0.171-0.085-0.341-0.17-0.512-0.256c-0.597-0.17-1.194-0.341-1.79-0.511c2.299-1.002,4.74-0.577,6.905-1.279c5.609-1.819,12.154-9.048,18.157-8.439c-0.239-1.039,0.326-0.282-0.511-1.023c6.2-3.905,11.339-7.811,16.367-12.787c-0.597,0.085-1.194,0.171-1.79,0.256c0.085-0.256,0.17-0.511,0.256-0.767c10.221-2.868-0.155-15.619-3.836-22.505c-10.049-18.8-19.81-42.31-29.666-62.4c-3.188-0.303-13.189,3.267-15.856,4.092c-17.224,5.329-49.61,1.357-56.007-11.764c12.284-0.351,23.368-8.661,30.433-9.974c0.738-1.288,1.081-2.018,2.046-2.557c-0.085,0.341-0.17,0.682-0.256,1.023c3.239-1.364,6.479-2.728,9.718-4.092c-0.365-0.953-0.487-0.583,0-1.79c-1.493,0.328-0.928,0.308-2.302-0.256c0.085,0.426,0.17,0.852,0.256,1.279c-2.526,0.202-2.836,1.839-5.115,1.279c0.81-0.536,9.496-7.202,8.439-9.207c-0.085,0.171-0.17,0.341-0.256,0.511c-0.426,0.426-0.852,0.852-1.279,1.279c-0.341-0.085-0.682-0.17-1.023-0.256c0.17-0.426,0.341-0.852,0.511-1.279c-0.341,0-0.682,0-1.023,0c-0.341,0.767-0.682,1.535-1.023,2.302c0.907,0.166,0.956-0.391,0.767,0.512c-0.426,0.682-0.852,1.364-1.279,2.046c-0.341-0.171-0.682-0.341-1.023-0.511c0.085-0.256,0.17-0.511,0.256-0.767c-0.852,0.511-1.705,1.023-2.557,1.534c0-0.085,0-0.171,0-0.256c0.085-0.341,0.171-0.682,0.256-1.023c2.27-0.886,1.433-1.23,3.325-0.767c-0.171-0.597-0.341-1.194-0.511-1.79c3.777-3.539,7.634-7.819,9.974-12.02c0.341,0.341,0.682,0.682,1.023,1.023c0.085-0.341,0.17-0.682,0.256-1.023c-0.437-3.637,2.446-3.214,4.092-5.882c-0.426,0-0.852,0-1.279,0c0.852-0.852,1.705-1.705,2.557-2.557c0.035-0.132-5.882-30.433-5.882-30.433c8.906-0.113,13.085,5.842,20.459,9.974c0.17,0,0.341,0,0.511,0c-0.203-2.223,7.733-13.009,10.23-15.344c-1.192-0.464-0.548,0.322-1.023-0.767c1.103-0.206,0.589,0.333,1.279-0.767c-0.511,0.005-0.241-0.061,0-0.511c0.773-6.169,8.349-13.007,11.253-19.436c6.527-14.452,15.008-29.685,19.436-46.8c0-0.085,0-0.171,0-0.256c-8.038-0.162-45.994,4.783-49.102,7.928c-5.976,6.047-7.88,28.317-9.718,34.269c-1.119,3.623,1.525,8.772,1.023,11.508c-0.505,2.752-5.502,7.684-4.348,11.253c-1.875,1.534-3.751,3.069-5.626,4.603c-18.336,9.107-30.361-23.083-36.059-29.666c-0.256,0.085-0.511,0.171-0.767,0.256c-7.505,20.458-21.062,32.756-43.476,22.249c-7.957-3.73-15.725-4.666-21.738-10.485c-0.622-0.602-3.731-0.585-5.371-1.534c-1.79-1.705-3.581-3.41-5.37-5.115c-0.941-0.787-1.982,0.68-2.813,0.256c-4.029-2.057-8.509-6.405-9.718-11.764c4.67-4.781,22.502-8.329,29.154-5.882c11.216-3.023,24.695-4.159,33.758-9.462c2.391-1.4,17.071-5.222,16.623-6.905c1.229-2.031-0.466-4.013-1.023-6.138c-2.04-7.779-5.17-29.944-1.023-35.036c-0.256,0-0.511,0-0.767,0c0-0.085,0-0.17,0-0.256c9.5,0.881,23.17,17.056,28.131,23.528c2.048,2.672,3.459,7.501,6.138,8.695c9.461-2.301,18.926-4.604,28.387-6.905c2.503-0.445,8.22-0.044,11.253-1.79c1.705-2.216,3.41-4.433,5.115-6.649c-0.938,2.046-1.876,4.092-2.813,6.138c14.053-1.107,31.082-4.261,44.243-5.371c3.237-10.728,7.673-22.862,10.485-33.246c1.705-6.296,1.513-15.959,0.511-20.459c-0.1-0.447-0.604-2.349-0.767-1.79c-0.819-5.018,1.981-7.226-0.511-13.043c0.085-0.085,0.17-0.17,0.256-0.256c0.938,0.682,1.875,1.364,2.813,2.046c-0.256-1.108-0.511-2.216-0.767-3.325c0.682,0.426,1.364,0.852,2.046,1.279c-0.17-0.256-0.341-0.511-0.511-0.767c0-0.256,0-0.511,0-0.767c3.403,1.174,5.334,4.333,7.416,6.905c0.578,0.714,3.401,1.108,4.092,2.046c10.429,14.166,20.959,26.554,25.318,43.22c1.321,5.051-5.667,15.935-5.882,18.669c0.727,0.505,0.327,0.371,1.023,0.511c3.458,1.033,9.311-1.645,13.043,0.767c3.737,2.416,8.527,2.916,12.531,4.859c7.164,3.476,22.668,14.79,25.83,19.948c1.907,3.111,3.291,5.711,4.603,9.207c0.085,1.364,0.171,2.728,0.256,4.092c-1.966,3.424-5.117,8.164-8.439,10.741c-12.594,9.767-33.069-12.27-36.315-17.646c-1.787-2.96-7.899-10.49-12.531-9.207c-1.329,0.368-14.485,4.785-14.577,4.859c-3.368,2.689-3.584,8.768-6.649,11.764c-5.043,4.929-8.83,12.247-14.577,18.669c-0.597,1.96-1.194,3.922-1.79,5.882c-0.369,0.627-5.753,7.174-6.649,5.37c-2.472,3.324-4.945,6.65-7.416,9.974c0.341,0.17,0.682,0.341,1.023,0.511c-4.983,0.592-8.936,10.137-13.043,12.787c-0.992,0.26-0.197,0.334-1.279-0.256c-1.289,5.647-2.498,5.705-8.695,10.23c1.227,0.815-0.188,0.424-1.023,1.279c0.256,0.597,0.511,1.194,0.767,1.79c0.511-0.512,1.023-1.023,1.534-1.534c-0.085,0.171-0.17,0.341-0.256,0.511c-0.767,1.023-1.535,2.046-2.302,3.069c1.772,3.005,4.603,5.747,7.161,7.416c2.387-1.364,4.774-2.728,7.161-4.092c1.313-1.141,1.463-3.134,3.069-4.092c11.454-6.831,21.473-9.889,36.315-10.741c14.84-0.852,32.731,21.586,9.207,29.41c0.853,1.36,0.875,1.419-0.256,2.557c-11.369,0.627-23.171,13.91-31.712,19.436c-3.008,1.946-13.306,4.158-14.066,5.882c-2.36,5.357,3.424,13.178,3.836,18.669c0.594,7.924,13.026,45.452,20.459,51.404c0.085-0.085,0.17-0.171,0.256-0.256c5.771-15.143,15.191-31.323,21.226-46.544c2.677-6.753-1.162-17.288,1.023-20.971c7.442,1.681,12.332,7.665,15.856,10.997c8.461,7.999,12.96,15.625,16.112,25.574c0.848,2.677-1.21,7.622-1.279,10.997c-0.597,0.938-1.194,1.875-1.79,2.813c-2.504,8.034-7.357,14.869-12.531,21.226c-0.426,1.108-0.852,2.216-1.279,3.325c-5.213,6.059-12.579,14.067-15.856,21.994c16.458,18.744,36.254,34.247,56.263,48.59c4.609,3.304,12.618,7.516,16.879,10.23c2.579,1.642,5.812,1.627,7.416,3.58c0.341-0.085,0.682-0.17,1.023-0.256c0.341-3.41,0.682-6.82,1.023-10.23c-0.682-3.154-1.364-6.309-2.046-9.462c0.663,1.179,0.613,2.087,1.79,2.813c-6.047-20.825-7.51-31.956-17.39-49.358c-1.364-2.813-2.728-5.627-4.092-8.439c-0.085,0.256-0.171,0.511-0.256,0.767c-2.319-3.803-2.448-5.069-4.859-8.951c0.085,0,0.171,0,0.256,0c1.642,0.436,2.813,0.256,2.813,0.256c1.141,2.598,1.362,5.063,3.069,7.161c0.985-0.377,0.123-0.383,1.023-0.256c0.747-1.286-0.535-0.563-0.767-1.534c-0.256,0-0.511,0-0.767,0c1.225-0.729,0.757-0.607,2.046,0c-1.023-2.046-2.046-4.092-3.069-6.138c0.341-0.085,0.682-0.17,1.023-0.256c4.603,6.904,9.207,13.811,13.81,20.715c-0.701-8.608-10.484-18.442-14.066-27.62c0.341-0.085,0.682-0.171,1.023-0.256c0.085,0,0.17,0,0.256,0c1.228,3.986,13.102,16.46,16.623,21.994c8.288,13.026,17.493,25.38,27.876,38.105c0.597-0.256,1.194-0.511,1.79-0.767c0.085,0.256,0.171,0.511,0.256,0.767c-0.17,0.341-0.341,0.682-0.511,1.023c-0.17-0.341-0.341-0.682-0.511-1.023c-0.085,0.341-0.17,0.682-0.256,1.023c0.767,0.426,1.535,0.852,2.302,1.279c0.171,0.597,0.341,1.194,0.511,1.79c1.52-0.702,7.879,16.51,9.718,15.856c0.677,0.337,1.474,1.59,1.79,1.023c3.32,4.083,1.487,10.871,6.905,13.043c-0.17-0.682-0.341-1.364-0.511-2.046c0.256,0,0.511,0,0.767,0c0.793,1.975,1.096,1.321,2.302,2.813c1.279,4.432,2.557,8.866,3.836,13.298c0.852,0.682,1.705,1.364,2.557,2.046C862.36,483.385,855.427,496.909,853.449,497.789z M601.546,425.415c-1.472,0.311-4.167-1.041-5.371-2.302C597.966,423.88,599.756,424.648,601.546,425.415z M598.733,422.602c2.12,0.329,3.588,0.694,4.859,1.79C601.973,423.795,600.352,423.199,598.733,422.602z M606.149,424.648c0.256,0.085,0.511,0.17,0.767,0.256C606.551,424.811,606.636,425.016,606.149,424.648z M651.927,416.72c0.085-0.17,0.171-0.341,0.256-0.511c0.256,0.085,0.511,0.17,0.767,0.256C652.609,416.549,652.268,416.635,651.927,416.72z M656.018,414.418c0.256,0,0.511,0,0.767,0C656.066,414.685,656.656,414.795,656.018,414.418z M661.133,411.605c0.256,0,0.511,0,0.767,0C661.214,411.949,661.252,411.703,661.133,411.605z M664.202,409.559c0.341,0.171,0.682,0.341,1.023,0.511c-0.256,0-0.511,0-0.767,0C664.373,409.9,664.287,409.73,664.202,409.559z M672.13,404.7c-0.719,0.266-0.13,0.377-0.767,0C671.619,404.7,671.874,404.7,672.13,404.7z M671.619,403.677c1.108-0.597,2.216-1.194,3.325-1.79c0.256,0.085,0.511,0.17,0.767,0.256c-1.256,0.977-2.918,1.811-3.58,2.046C671.96,404.018,671.789,403.848,671.619,403.677zM601.802,292.942c0.256,0.171,0.511,0.341,0.767,0.511C601.654,293.337,601.909,293.582,601.802,292.942z M605.382,292.942c-0.085-0.341-0.17-0.682-0.256-1.023C605.925,292.608,605.877,292.011,605.382,292.942z M605.126,290.641c0.256-0.256,0.511-0.511,0.767-0.767C605.894,289.873,606.133,291.047,605.126,290.641z M609.73,288.083c0-0.426,0-0.852,0-1.279c0.341,0.341,0.682,0.682,1.023,1.023c-0.085,0.085-0.17,0.17-0.256,0.256C610.241,288.083,609.985,288.083,609.73,288.083zM772.891,275.808c-0.426,0.17-0.852,0.341-1.279,0.511c0.256-0.256,0.511-0.511,0.767-0.767C772.55,275.637,772.721,275.723,772.891,275.808z M689.52,219.034c0-0.085,0-0.17,0-0.256c0.597-0.767,1.194-1.534,1.79-2.302C692.322,217.07,690.625,218.448,689.52,219.034z M675.71,234.89c-0.537,0.881-0.207,0.622-1.279,1.023c0.256-0.341,0.512-0.682,0.767-1.023C675.369,234.89,675.54,234.89,675.71,234.89z M673.664,237.703c-0.426,0.256-0.852,0.511-1.279,0.767c0.085-0.341,0.171-0.682,0.256-1.023c0.426-0.511,0.852-1.023,1.279-1.534C674.501,236.312,674.066,236.848,673.664,237.703z M714.838,276.831c-0.597,0.511-1.194,1.023-1.79,1.534c0.341-0.511,0.682-1.023,1.023-1.534C714.327,276.831,714.583,276.831,714.838,276.831z M707.166,282.201c0.085-0.341,0.17-0.682,0.256-1.023C707.344,281.73,707.587,281.629,707.166,282.201z M792.327,408.025c0.341,0.171,0.682,0.341,1.023,0.511c-0.256,0-0.511,0-0.767,0C792.498,408.366,792.412,408.195,792.327,408.025zM784.144,374.012c0.988,0.56,0.825,0.431,1.023,1.79c-0.17-0.341-0.341-0.682-0.511-1.023C784.485,374.523,784.314,374.267,784.144,374.012z M612.543,178.627c3.521-0.988,10.992-6.833,11.508-9.718c-2.609,2.121-9.623,3.171-13.043,6.649C611.52,176.581,612.031,177.604,612.543,178.627z M633.769,273.506c-0.785,2.136-7.978,4.11-6.649,6.905c-2.742,0.661-3.127,2.715-5.115,2.557c0.085-0.085,0.17-0.17,0.256-0.256c0.597-0.682,1.194-1.364,1.79-2.046c-0.171,0.171-0.341,0.341-0.511,0.511c-1.591,0.588-2.699,2.031-3.58,3.325c1.532-0.587,1.337-1.133,2.557-0.256c-1.414,0.323-4.294,2.96-5.626,4.348c7.057-1.085,14.227-5.842,18.413-8.695c-0.341-0.085-0.682-0.17-1.023-0.256c0.535-0.792,1.004-1.242,1.023-1.279C635.633,277.109,635.016,274.227,633.769,273.506zM616.89,278.109c0.664,0.462,0.312,0.083,0.256,0.767c0.085,0.085,0.17,0.17,0.256,0.256c0.511-0.511,1.023-1.023,1.534-1.534C618.255,277.768,617.572,277.939,616.89,278.109z M625.586,278.621c-0.256,0.426-0.511,0.852-0.767,1.279c0.597-0.341,1.194-0.682,1.79-1.023C626.268,278.791,625.927,278.706,625.586,278.621z M619.192,279.132c-0.17,0.17-0.341,0.341-0.511,0.511C618.944,279.614,619.9,278.986,619.192,279.132z M787.724,385.776c0.759,0.252,0.114,0.37,1.023,0c-1.325-0.56-1.567-1.058-2.557-1.79C786.6,385.251,786.556,385.261,787.724,385.776zM637.094,425.159c0.597-0.341,1.194-0.682,1.79-1.023c-0.341,0-0.682,0-1.023,0C637.605,424.477,637.35,424.818,637.094,425.159zM669.317,437.435c-0.511,0.341-1.023,0.682-1.534,1.023c0.597,0.085,1.194,0.17,1.79,0.256c0.35-0.555-0.164-0.253,0.511-0.511C669.581,437.338,670.17,437.944,669.317,437.435z M664.458,440.248c0.341-0.085,0.682-0.17,1.023-0.256c-0.171-0.085-0.341-0.17-0.511-0.256C664.799,439.907,664.628,440.077,664.458,440.248z' />\n                        <path id='shigeru_logo_kanji_w' d='M853.449,463.52c-0.17-0.341-0.341-0.682-0.511-1.023C853.595,463.182,853.357,462.73,853.449,463.52z M811.763,232.332c8.615,7.241,17.914,15.785,26.341,24.039c9.071,8.885,17.239,23.264,6.393,32.99c-1.312,1.177-8.154,1.933-10.23,2.557c-1.227-3.355-4.161-0.642-6.649-2.302c-2.427-1.618-3.985-3.845-6.905-5.626c-5.887-3.59-5.904-11.058-13.043-13.043c-7.251-2.016-19.978-1.076-26.085,1.534c-0.132,0.056-3.172,1.672-3.58,0.512c-0.764,0.729-3.101,2.925-5.115,2.302c11.32-6.07,22.883-13.451,32.223-22.249c-2.725-9.317-22.976-26.146-30.433-34.525c0.597,0.171,1.194,0.341,1.79,0.511c-0.085-0.256-0.17-0.511-0.256-0.767c-1.303-0.843-1.637-0.896-2.557-2.557c3.95,0.424,7.66,2.804,10.741,4.348c3.41,0.938,6.82,1.875,10.23,2.813C799.774,226.22,807.01,228.337,811.763,232.332z M784.655,368.897c-0.171-0.085-0.341-0.171-0.511-0.256c-0.171-0.256-0.341-0.512-0.511-0.767C784.578,368.352,784.165,367.993,784.655,368.897z M783.121,369.153c-0.979-0.669-1.246-0.864-1.534-2.302C782.098,367.618,782.609,368.385,783.121,369.153z M778.773,376.313c-0.341,0-0.682,0-1.023,0c-0.17-0.341-0.341-0.682-0.511-1.023c0.833-1.022,0.645-0.316,0.511-1.279c-0.996-0.431-0.389,0.25-0.767-0.767c0.085,0.17,0.17,0.341,0.256,0.511c0.17,0.085,0.341,0.17,0.511,0.256c0.597,0.426,1.194,0.852,1.79,1.279C778.481,376.006,778.925,375.044,778.773,376.313z M775.96,372.477c-0.426-0.597-0.852-1.194-1.279-1.79c1.331,0.422,1.517,0.922,2.302,1.79C776.642,372.477,776.301,372.477,775.96,372.477zM558.582,449.71c-3.81,6.172-4.996,11.819-8.184,16.367c-2.919-0.781-2.733,0.559-4.859,1.79c-7.242-0.825-15.485-2.671-18.925-6.393c0.173-3.109-5.093-6.301-6.649-8.951c-0.17-2.983-0.341-5.968-0.511-8.951c-1.933-6.477-4.839-14.122-5.371-21.994c-0.291-4.304,13.787-25.124,16.879-31.967c7.122-15.763,11.094-33.234,14.321-48.846c1.501-7.262-1.299-12.935,0.256-18.925c6.118,0.625,16.26,4.846,20.715,10.23c1.394,1.684,2.229,4.737,4.092,6.649c-0.171,0.511-0.341,1.023-0.511,1.534c0.004,3.245,2.097,10.166,3.58,14.321c1.464,4.103,0.519,9.244,1.79,13.81C583.13,396.843,572.047,427.896,558.582,449.71z M604.871,439.225c-0.085-0.17-0.17-0.341-0.256-0.511c-0.511-0.341-1.023-0.682-1.534-1.023C604.144,438.005,605.172,438.231,604.871,439.225z M616.123,445.363c0-0.171,0-0.341,0-0.511c0.085,0.085,0.17,0.17,0.256,0.256c1.025,0.356,0.445-0.086,0.767,0.767C616.805,445.704,616.464,445.533,616.123,445.363z M665.992,443.317c-1.705,0.284-4.539,2.114-7.416,1.023c0.767-0.597,1.535-1.194,2.302-1.79c0.852,0.256,1.705,0.511,2.557,0.767c0.085-0.426,0.171-0.852,0.256-1.279c0.852,0.085,1.705,0.171,2.557,0.256C665.417,442.943,665.476,442.397,665.992,443.317z M853.449,497.789c0.085,1.023,0.171,2.046,0.256,3.069c-7.219,3.477-14.395,9.235-24.039,7.161c-0.468-0.101-2.151-0.361-2.557,0.511c-1.849-1.783-15.094-4.007-19.436-5.626c-3.414-1.273-9.276-5.271-13.298-7.416c-22.93-12.231-42.817-27.263-61.377-44.499c-6.649-6.989-13.299-13.981-19.948-20.971c-2.34-2.933-4.805-8.199-7.928-9.462c-4.347,3.324-8.695,6.65-13.043,9.974c-2.649,2.129-7.501,2.322-10.485,5.371c-0.767-0.171-1.535-0.341-2.302-0.511c-3.486,1.97-4.326,3.984-8.439,6.138c-3.604,1.888-7.02-1.976-12.02,0c-6.142,2.427-12.08,6.042-19.18,6.649c-1.937-1.539-2.511-1.669-5.626-1.023c0,0.085,0,0.17,0,0.256c0.682,0.256,1.364,0.511,2.046,0.767c-7.025,0.052-25.91-5.14-30.177-8.695c0.067-1.779-12.016-9.64-15.089-10.997c0-0.085,0-0.17,0-0.256c0.341-0.256,0.682-0.511,1.023-0.767c1.184,1.162,0.232,0.771,1.79,0.767c-1.153-2.935-3.408-4.857-4.859-6.905c0.085,0,0.171,0,0.256,0c5.74,2.986,9.552,3.566,16.367,5.626c-0.426-0.682-0.852-1.364-1.279-2.046c12.987,7.766,26.23-1.133,38.872-3.069c-0.171-0.085-0.341-0.17-0.512-0.256c-0.597-0.17-1.194-0.341-1.79-0.511c2.299-1.002,4.74-0.577,6.905-1.279c5.609-1.819,12.154-9.048,18.157-8.439c-0.239-1.039,0.326-0.282-0.511-1.023c6.2-3.905,11.339-7.811,16.367-12.787c-0.597,0.085-1.194,0.171-1.79,0.256c0.085-0.256,0.17-0.511,0.256-0.767c10.221-2.868-0.155-15.619-3.836-22.505c-10.049-18.8-19.81-42.31-29.666-62.4c-3.188-0.303-13.189,3.267-15.856,4.092c-17.224,5.329-49.61,1.357-56.007-11.764c12.284-0.351,23.368-8.661,30.433-9.974c0.738-1.288,1.081-2.018,2.046-2.557c-0.085,0.341-0.17,0.682-0.256,1.023c3.239-1.364,6.479-2.728,9.718-4.092c-0.365-0.953-0.487-0.583,0-1.79c-1.493,0.328-0.928,0.308-2.302-0.256c0.085,0.426,0.17,0.852,0.256,1.279c-2.526,0.202-2.836,1.839-5.115,1.279c0.81-0.536,9.496-7.202,8.439-9.207c-0.085,0.171-0.17,0.341-0.256,0.511c-0.426,0.426-0.852,0.852-1.279,1.279c-0.341-0.085-0.682-0.17-1.023-0.256c0.17-0.426,0.341-0.852,0.511-1.279c-0.341,0-0.682,0-1.023,0c-0.341,0.767-0.682,1.535-1.023,2.302c0.907,0.166,0.956-0.391,0.767,0.512c-0.426,0.682-0.852,1.364-1.279,2.046c-0.341-0.171-0.682-0.341-1.023-0.511c0.085-0.256,0.17-0.511,0.256-0.767c-0.852,0.511-1.705,1.023-2.557,1.534c0-0.085,0-0.171,0-0.256c0.085-0.341,0.171-0.682,0.256-1.023c2.27-0.886,1.433-1.23,3.325-0.767c-0.171-0.597-0.341-1.194-0.511-1.79c3.777-3.539,7.634-7.819,9.974-12.02c0.341,0.341,0.682,0.682,1.023,1.023c0.085-0.341,0.17-0.682,0.256-1.023c-0.437-3.637,2.446-3.214,4.092-5.882c-0.426,0-0.852,0-1.279,0c0.852-0.852,1.705-1.705,2.557-2.557c0.035-0.132-5.882-30.433-5.882-30.433c8.906-0.113,13.085,5.842,20.459,9.974c0.17,0,0.341,0,0.511,0c-0.203-2.223,7.733-13.009,10.23-15.344c-1.192-0.464-0.548,0.322-1.023-0.767c1.103-0.206,0.589,0.333,1.279-0.767c-0.511,0.005-0.241-0.061,0-0.511c0.773-6.169,8.349-13.007,11.253-19.436c6.527-14.452,15.008-29.685,19.436-46.8c0-0.085,0-0.171,0-0.256c-8.038-0.162-45.994,4.783-49.102,7.928c-5.976,6.047-7.88,28.317-9.718,34.269c-1.119,3.623,1.525,8.772,1.023,11.508c-0.505,2.752-5.502,7.684-4.348,11.253c-1.875,1.534-3.751,3.069-5.626,4.603c-18.336,9.107-30.361-23.083-36.059-29.666c-0.256,0.085-0.511,0.171-0.767,0.256c-7.505,20.458-21.062,32.756-43.476,22.249c-7.957-3.73-15.725-4.666-21.738-10.485c-0.622-0.602-3.731-0.585-5.371-1.534c-1.79-1.705-3.581-3.41-5.37-5.115c-0.941-0.787-1.982,0.68-2.813,0.256c-4.029-2.057-8.509-6.405-9.718-11.764c4.67-4.781,22.502-8.329,29.154-5.882c11.216-3.023,24.695-4.159,33.758-9.462c2.391-1.4,17.071-5.222,16.623-6.905c1.229-2.031-0.466-4.013-1.023-6.138c-2.04-7.779-5.17-29.944-1.023-35.036c-0.256,0-0.511,0-0.767,0c0-0.085,0-0.17,0-0.256c9.5,0.881,23.17,17.056,28.131,23.528c2.048,2.672,3.459,7.501,6.138,8.695c9.461-2.301,18.926-4.604,28.387-6.905c2.503-0.445,8.22-0.044,11.253-1.79c1.705-2.216,3.41-4.433,5.115-6.649c-0.938,2.046-1.876,4.092-2.813,6.138c14.053-1.107,31.082-4.261,44.243-5.371c3.237-10.728,7.673-22.862,10.485-33.246c1.705-6.296,1.513-15.959,0.511-20.459c-0.1-0.447-0.604-2.349-0.767-1.79c-0.819-5.018,1.981-7.226-0.511-13.043c0.085-0.085,0.17-0.17,0.256-0.256c0.938,0.682,1.875,1.364,2.813,2.046c-0.256-1.108-0.511-2.216-0.767-3.325c0.682,0.426,1.364,0.852,2.046,1.279c-0.17-0.256-0.341-0.511-0.511-0.767c0-0.256,0-0.511,0-0.767c3.403,1.174,5.334,4.333,7.416,6.905c0.578,0.714,3.401,1.108,4.092,2.046c10.429,14.166,20.959,26.554,25.318,43.22c1.321,5.051-5.667,15.935-5.882,18.669c0.727,0.505,0.327,0.371,1.023,0.511c3.458,1.033,9.311-1.645,13.043,0.767c3.737,2.416,8.527,2.916,12.531,4.859c7.164,3.476,22.668,14.79,25.83,19.948c1.907,3.111,3.291,5.711,4.603,9.207c0.085,1.364,0.171,2.728,0.256,4.092c-1.966,3.424-5.117,8.164-8.439,10.741c-12.594,9.767-33.069-12.27-36.315-17.646c-1.787-2.96-7.899-10.49-12.531-9.207c-1.329,0.368-14.485,4.785-14.577,4.859c-3.368,2.689-3.584,8.768-6.649,11.764c-5.043,4.929-8.83,12.247-14.577,18.669c-0.597,1.96-1.194,3.922-1.79,5.882c-0.369,0.627-5.753,7.174-6.649,5.37c-2.472,3.324-4.945,6.65-7.416,9.974c0.341,0.17,0.682,0.341,1.023,0.511c-4.983,0.592-8.936,10.137-13.043,12.787c-0.992,0.26-0.197,0.334-1.279-0.256c-1.289,5.647-2.498,5.705-8.695,10.23c1.227,0.815-0.188,0.424-1.023,1.279c0.256,0.597,0.511,1.194,0.767,1.79c0.511-0.512,1.023-1.023,1.534-1.534c-0.085,0.171-0.17,0.341-0.256,0.511c-0.767,1.023-1.535,2.046-2.302,3.069c1.772,3.005,4.603,5.747,7.161,7.416c2.387-1.364,4.774-2.728,7.161-4.092c1.313-1.141,1.463-3.134,3.069-4.092c11.454-6.831,21.473-9.889,36.315-10.741c14.84-0.852,32.731,21.586,9.207,29.41c0.853,1.36,0.875,1.419-0.256,2.557c-11.369,0.627-23.171,13.91-31.712,19.436c-3.008,1.946-13.306,4.158-14.066,5.882c-2.36,5.357,3.424,13.178,3.836,18.669c0.594,7.924,13.026,45.452,20.459,51.404c0.085-0.085,0.17-0.171,0.256-0.256c5.771-15.143,15.191-31.323,21.226-46.544c2.677-6.753-1.162-17.288,1.023-20.971c7.442,1.681,12.332,7.665,15.856,10.997c8.461,7.999,12.96,15.625,16.112,25.574c0.848,2.677-1.21,7.622-1.279,10.997c-0.597,0.938-1.194,1.875-1.79,2.813c-2.504,8.034-7.357,14.869-12.531,21.226c-0.426,1.108-0.852,2.216-1.279,3.325c-5.213,6.059-12.579,14.067-15.856,21.994c16.458,18.744,36.254,34.247,56.263,48.59c4.609,3.304,12.618,7.516,16.879,10.23c2.579,1.642,5.812,1.627,7.416,3.58c0.341-0.085,0.682-0.17,1.023-0.256c0.341-3.41,0.682-6.82,1.023-10.23c-0.682-3.154-1.364-6.309-2.046-9.462c0.663,1.179,0.613,2.087,1.79,2.813c-6.047-20.825-7.51-31.956-17.39-49.358c-1.364-2.813-2.728-5.627-4.092-8.439c-0.085,0.256-0.171,0.511-0.256,0.767c-2.319-3.803-2.448-5.069-4.859-8.951c0.085,0,0.171,0,0.256,0c1.642,0.436,2.813,0.256,2.813,0.256c1.141,2.598,1.362,5.063,3.069,7.161c0.985-0.377,0.123-0.383,1.023-0.256c0.747-1.286-0.535-0.563-0.767-1.534c-0.256,0-0.511,0-0.767,0c1.225-0.729,0.757-0.607,2.046,0c-1.023-2.046-2.046-4.092-3.069-6.138c0.341-0.085,0.682-0.17,1.023-0.256c4.603,6.904,9.207,13.811,13.81,20.715c-0.701-8.608-10.484-18.442-14.066-27.62c0.341-0.085,0.682-0.171,1.023-0.256c0.085,0,0.17,0,0.256,0c1.228,3.986,13.102,16.46,16.623,21.994c8.288,13.026,17.493,25.38,27.876,38.105c0.597-0.256,1.194-0.511,1.79-0.767c0.085,0.256,0.171,0.511,0.256,0.767c-0.17,0.341-0.341,0.682-0.511,1.023c-0.17-0.341-0.341-0.682-0.511-1.023c-0.085,0.341-0.17,0.682-0.256,1.023c0.767,0.426,1.535,0.852,2.302,1.279c0.171,0.597,0.341,1.194,0.511,1.79c1.52-0.702,7.879,16.51,9.718,15.856c0.677,0.337,1.474,1.59,1.79,1.023c3.32,4.083,1.487,10.871,6.905,13.043c-0.17-0.682-0.341-1.364-0.511-2.046c0.256,0,0.511,0,0.767,0c0.793,1.975,1.096,1.321,2.302,2.813c1.279,4.432,2.557,8.866,3.836,13.298c0.852,0.682,1.705,1.364,2.557,2.046C862.36,483.385,855.427,496.909,853.449,497.789z M601.546,425.415c-1.472,0.311-4.167-1.041-5.371-2.302C597.966,423.88,599.756,424.648,601.546,425.415z M598.733,422.602c2.12,0.329,3.588,0.694,4.859,1.79C601.973,423.795,600.352,423.199,598.733,422.602z M606.149,424.648c0.256,0.085,0.511,0.17,0.767,0.256C606.551,424.811,606.636,425.016,606.149,424.648z M651.927,416.72c0.085-0.17,0.171-0.341,0.256-0.511c0.256,0.085,0.511,0.17,0.767,0.256C652.609,416.549,652.268,416.635,651.927,416.72z M656.018,414.418c0.256,0,0.511,0,0.767,0C656.066,414.685,656.656,414.795,656.018,414.418z M661.133,411.605c0.256,0,0.511,0,0.767,0C661.214,411.949,661.252,411.703,661.133,411.605z M664.202,409.559c0.341,0.171,0.682,0.341,1.023,0.511c-0.256,0-0.511,0-0.767,0C664.373,409.9,664.287,409.73,664.202,409.559z M672.13,404.7c-0.719,0.266-0.13,0.377-0.767,0C671.619,404.7,671.874,404.7,672.13,404.7z M671.619,403.677c1.108-0.597,2.216-1.194,3.325-1.79c0.256,0.085,0.511,0.17,0.767,0.256c-1.256,0.977-2.918,1.811-3.58,2.046C671.96,404.018,671.789,403.848,671.619,403.677zM601.802,292.942c0.256,0.171,0.511,0.341,0.767,0.511C601.654,293.337,601.909,293.582,601.802,292.942z M605.382,292.942c-0.085-0.341-0.17-0.682-0.256-1.023C605.925,292.608,605.877,292.011,605.382,292.942z M605.126,290.641c0.256-0.256,0.511-0.511,0.767-0.767C605.894,289.873,606.133,291.047,605.126,290.641z M609.73,288.083c0-0.426,0-0.852,0-1.279c0.341,0.341,0.682,0.682,1.023,1.023c-0.085,0.085-0.17,0.17-0.256,0.256C610.241,288.083,609.985,288.083,609.73,288.083zM772.891,275.808c-0.426,0.17-0.852,0.341-1.279,0.511c0.256-0.256,0.511-0.511,0.767-0.767C772.55,275.637,772.721,275.723,772.891,275.808z M689.52,219.034c0-0.085,0-0.17,0-0.256c0.597-0.767,1.194-1.534,1.79-2.302C692.322,217.07,690.625,218.448,689.52,219.034z M675.71,234.89c-0.537,0.881-0.207,0.622-1.279,1.023c0.256-0.341,0.512-0.682,0.767-1.023C675.369,234.89,675.54,234.89,675.71,234.89z M673.664,237.703c-0.426,0.256-0.852,0.511-1.279,0.767c0.085-0.341,0.171-0.682,0.256-1.023c0.426-0.511,0.852-1.023,1.279-1.534C674.501,236.312,674.066,236.848,673.664,237.703z M714.838,276.831c-0.597,0.511-1.194,1.023-1.79,1.534c0.341-0.511,0.682-1.023,1.023-1.534C714.327,276.831,714.583,276.831,714.838,276.831z M707.166,282.201c0.085-0.341,0.17-0.682,0.256-1.023C707.344,281.73,707.587,281.629,707.166,282.201z M792.327,408.025c0.341,0.171,0.682,0.341,1.023,0.511c-0.256,0-0.511,0-0.767,0C792.498,408.366,792.412,408.195,792.327,408.025zM784.144,374.012c0.988,0.56,0.825,0.431,1.023,1.79c-0.17-0.341-0.341-0.682-0.511-1.023C784.485,374.523,784.314,374.267,784.144,374.012z M612.543,178.627c3.521-0.988,10.992-6.833,11.508-9.718c-2.609,2.121-9.623,3.171-13.043,6.649C611.52,176.581,612.031,177.604,612.543,178.627z M633.769,273.506c-0.785,2.136-7.978,4.11-6.649,6.905c-2.742,0.661-3.127,2.715-5.115,2.557c0.085-0.085,0.17-0.17,0.256-0.256c0.597-0.682,1.194-1.364,1.79-2.046c-0.171,0.171-0.341,0.341-0.511,0.511c-1.591,0.588-2.699,2.031-3.58,3.325c1.532-0.587,1.337-1.133,2.557-0.256c-1.414,0.323-4.294,2.96-5.626,4.348c7.057-1.085,14.227-5.842,18.413-8.695c-0.341-0.085-0.682-0.17-1.023-0.256c0.535-0.792,1.004-1.242,1.023-1.279C635.633,277.109,635.016,274.227,633.769,273.506zM616.89,278.109c0.664,0.462,0.312,0.083,0.256,0.767c0.085,0.085,0.17,0.17,0.256,0.256c0.511-0.511,1.023-1.023,1.534-1.534C618.255,277.768,617.572,277.939,616.89,278.109z M625.586,278.621c-0.256,0.426-0.511,0.852-0.767,1.279c0.597-0.341,1.194-0.682,1.79-1.023C626.268,278.791,625.927,278.706,625.586,278.621z M619.192,279.132c-0.17,0.17-0.341,0.341-0.511,0.511C618.944,279.614,619.9,278.986,619.192,279.132z M787.724,385.776c0.759,0.252,0.114,0.37,1.023,0c-1.325-0.56-1.567-1.058-2.557-1.79C786.6,385.251,786.556,385.261,787.724,385.776zM637.094,425.159c0.597-0.341,1.194-0.682,1.79-1.023c-0.341,0-0.682,0-1.023,0C637.605,424.477,637.35,424.818,637.094,425.159zM669.317,437.435c-0.511,0.341-1.023,0.682-1.534,1.023c0.597,0.085,1.194,0.17,1.79,0.256c0.35-0.555-0.164-0.253,0.511-0.511C669.581,437.338,670.17,437.944,669.317,437.435z M664.458,440.248c0.341-0.085,0.682-0.17,1.023-0.256c-0.171-0.085-0.341-0.17-0.511-0.256C664.799,439.907,664.628,440.077,664.458,440.248z' />\n                    </g>\n\n                </svg>\n\n            </div>\n\n        {/* #endregion ==================== SVG: AboutAfro ==================== */}\n\n\n            <div className='guideContainer' id='guideContainerID' onClick={() => closeThought(thoughtBubble_Ref.current)} ref={guideContainer_Ref}></div>\n\n\n        {/* #region ==================== RESET THOUGHTS ==================== */}\n\n            <div className='resetThoughtsDiv' id='resetThoughtsDivID' onClick={() => resetThoughts(curlContainer_Ref.current, thoughtBubble_Ref.current)} ref={resetThoughts_Ref}>\n\n                <svg className='resetThoughtsSvg' id='resetThoughtsSvgID' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 400 280' enableBackground='new 0 0 400 280'>\n                    <path className='resetThoughtsPath' id='resetThoughtsPathID' d='M135.83 277.5c-16.127 0-30.895-9.492-37.623-24.184l-.798-1.744-1.893.32c-2.897.49-5.853.738-8.784.738-28.848 0-52.317-23.49-52.317-52.362 0-2.02.12-4.077.357-6.118l.237-2.038-1.953-.63C14.78 185.59 2.5 168.708 2.5 149.476c0-19.473 12.477-36.418 31.047-42.165l2.31-.714-.638-2.333c-.876-3.198-1.32-6.494-1.32-9.794 0-20.406 16.586-37.006 36.973-37.006 2.43 0 4.873.242 7.264.718l2.672.533.3-2.708c2.997-26.96 25.725-47.293 52.868-47.293 17.95 0 34.572 8.973 44.462 24.003l.995 1.512 1.747-.474c3.335-.902 6.77-1.36 10.21-1.36.603 0 1.202.02 1.798.047l1.72.077.685-1.578C203.103 13.664 220.112 2.5 238.93 2.5c25.207 0 45.93 19.72 47.178 44.896l.14 2.807 2.77-.465c2.57-.43 5.19-.65 7.79-.65 12.06 0 23.512 4.583 32.242 12.903l1.26 1.2 1.562-.763c5.976-2.92 12.4-4.4 19.097-4.4 24.036 0 43.59 19.572 43.59 43.63 0 8.104-2.236 16.017-6.47 22.88l-.76 1.23.69 1.27c2.564 4.75 3.92 10.13 3.92 15.56 0 9.508-4.128 18.537-11.325 24.773l-2.273 1.97 2.353 1.875c10.68 8.512 16.807 21.22 16.807 34.865 0 24.562-19.966 44.545-44.507 44.545-6.286 0-12.365-1.287-18.067-3.825l-1.93-.86-1.17 1.762c-6.574 9.907-17.58 15.82-29.438 15.82-16.456 0-30.96-11.662-34.485-27.73l-.82-3.743-3.096 2.258c-6.288 4.59-13.73 7.014-21.52 7.014-6.186 0-12.303-1.58-17.69-4.565l-1.69-.936-1.33 1.397c-7.814 8.182-18.333 12.688-29.62 12.688-4.728 0-9.373-.805-13.806-2.393l-2.414-.864-.803 2.435c-5.61 16.996-21.398 28.417-39.287 28.417z' fill='#ffff00' stroke='#ff0000' strokeWidth='5' strokeLinecap='butt' strokeMiterlimit='5' />\n                    {/* <text className='resetThoughtsText' id='resetThoughtsTextID' x='50%' y='50%' textAnchor='middle' stroke='#000000' dy='0.35em'>\n                        <tspan dx='12.5%' dy='-7.5%'>reset</tspan>\n                        <tspan dx='-50%' dy='17.5%'>my thoughts...</tspan>\n                    </text> */}\n                </svg>\n\n                <p className='resetThoughtsText'>\n                    reset<br />\n                    my thoughts...\n                </p>\n            </div>\n\n        {/* #endregion ==================== RESET THOUGHTS ==================== */}\n\n\n        {/* #region ==================== THOUGHTS ==================== */}\n\n            <svg className='boingSvg' id='boingSvgID' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 325 245' enableBackground='0 0 325 245' ref={boing_Ref}>\n                <path className='boingPath' id='boingPathID' d='M0 245c10.1-47.992 24.712-91.212 42.77-127.508s39.558-65.67 63.434-85.968S156.33 0 183.884 0s53.805 11.225 77.68 31.524 45.38 49.672 63.436 85.968' fill='none' stroke='#00ff00' strokeMiterlimit='10' />\n            </svg>\n\n            <div className='curlContainer' id='curlContainerID' ref={curlContainer_Ref}>\n                {/* <div className='guideContainer' id='guideContainerID' onClick={() => closeThought(thoughtBubble_Ref.current)} ref={guideContainer_Ref}></div> */}\n                <MyThoughts />\n            </div>\n\n            <div className='thoughtBubbleDiv' id='thoughtBubbleDivID' onClick={() => closeThought(thoughtBubble_Ref.current)} ref={thoughtBubble_Ref}>\n\n                <svg className='thoughtBubbleSvg' id='thoughtBubbleSvgID' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 400 280' enableBackground='new 0 0 400 280'>\n                    <path className='thoughtBubblePath' id='thoughtBubblePathID' d='M135.83 277.5c-16.127 0-30.895-9.492-37.623-24.184l-.798-1.744-1.893.32c-2.897.49-5.853.738-8.784.738-28.848 0-52.317-23.49-52.317-52.362 0-2.02.12-4.077.357-6.118l.237-2.038-1.953-.63C14.78 185.59 2.5 168.708 2.5 149.476c0-19.473 12.477-36.418 31.047-42.165l2.31-.714-.638-2.333c-.876-3.198-1.32-6.494-1.32-9.794 0-20.406 16.586-37.006 36.973-37.006 2.43 0 4.873.242 7.264.718l2.672.533.3-2.708c2.997-26.96 25.725-47.293 52.868-47.293 17.95 0 34.572 8.973 44.462 24.003l.995 1.512 1.747-.474c3.335-.902 6.77-1.36 10.21-1.36.603 0 1.202.02 1.798.047l1.72.077.685-1.578C203.103 13.664 220.112 2.5 238.93 2.5c25.207 0 45.93 19.72 47.178 44.896l.14 2.807 2.77-.465c2.57-.43 5.19-.65 7.79-.65 12.06 0 23.512 4.583 32.242 12.903l1.26 1.2 1.562-.763c5.976-2.92 12.4-4.4 19.097-4.4 24.036 0 43.59 19.572 43.59 43.63 0 8.104-2.236 16.017-6.47 22.88l-.76 1.23.69 1.27c2.564 4.75 3.92 10.13 3.92 15.56 0 9.508-4.128 18.537-11.325 24.773l-2.273 1.97 2.353 1.875c10.68 8.512 16.807 21.22 16.807 34.865 0 24.562-19.966 44.545-44.507 44.545-6.286 0-12.365-1.287-18.067-3.825l-1.93-.86-1.17 1.762c-6.574 9.907-17.58 15.82-29.438 15.82-16.456 0-30.96-11.662-34.485-27.73l-.82-3.743-3.096 2.258c-6.288 4.59-13.73 7.014-21.52 7.014-6.186 0-12.303-1.58-17.69-4.565l-1.69-.936-1.33 1.397c-7.814 8.182-18.333 12.688-29.62 12.688-4.728 0-9.373-.805-13.806-2.393l-2.414-.864-.803 2.435c-5.61 16.996-21.398 28.417-39.287 28.417z' fill='#ffff00' stroke='#ff0000' strokeWidth='5' strokeLinecap='butt' strokeMiterlimit='5' />\n                </svg>\n\n                <div className='thoughtBubbleText' id='thoughtBubbleTextID'>Blahbitty, blahbitty, blah...!</div>\n\n                <svg className='thoughtClose' id='thoughtCloseID' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30' enableBackground='new 0 0 30 30' onClick={() => closeThought(thoughtBubble_Ref.current)}>\n                    <circle className='thoughtClosePath' id='thoughtClosePathID' cx='15' cy='15' r='12.5' />\n                    <text className='thoughtCloseX' id='thoughtCloseXID' x='50%' y='50%' textAnchor='middle' stroke='#000000' dy='0.35em'>X</text>\n                </svg>\n\n            </div>\n\n        {/* #endregion ==================== THOUGHTS ==================== */}\n\n        </div>\n    )\n}\n\n//#endregion ==================== EXPORT ABOUT ====================\n","//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useRef } from 'react';\n// import { useState } from 'react';\nimport Moment from 'moment';\n\nimport '../stylesheets/Resume.scss';\n\nimport myData from '../data/MyData';\n\n//#endregion ==================== IMPORTS ====================\n\n\n//#region ==================== CONSTANTS ====================\n\n//#region -------------------- DATA --------------------\n\nconst employerData = myData[0];\nconst skillData = myData[3];\n\n//#endregion -------------------- DATA --------------------\n\n\n//#region -------------------- RESUME URLs --------------------\n\nconst remoteResumeLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/resume/';\n\n// const resumePDFurl = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/resume/smcpherson_resume_2021.pdf';\n// const resumeDOCXurl = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/resume/smcpherson_resume_2021.docx';\n// const resumeSimpleDOCXurl = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/resume/smcpherson_resume_2021_simplified.docx';\n// const resumeTXTurl = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/resume/smcpherson_resume_2021.txt';\n// const resumeZIPurl = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/resume/smcpherson_resume_2021.zip';\n\nconst resumePDFurl = remoteResumeLoc + 'smcpherson_resume_2021.pdf';\nconst resumeDOCXurl = remoteResumeLoc + 'smcpherson_resume_2021.docx';\nconst resumeSimpleDOCXurl = remoteResumeLoc + 'smcpherson_resume_2021_simplified.docx';\nconst resumeTXTurl = remoteResumeLoc + 'smcpherson_resume_2021.txt';\nconst resumeZIPurl = remoteResumeLoc + 'smcpherson_resume_2021.zip';\n\nconst resumePDFfilename = 'smcpherson_resume_2021.pdf';\nconst resumeDOCXfilename = 'smcpherson_resume_2021.docx';\nconst resumeSimpleDOCXfilename = 'smcpherson_resume_2021_simplified.docx';\nconst resumeTXTfilename = 'smcpherson_resume_2021.txt';\nconst resumeZIPfilename = 'smcpherson_resume_2021.zip';\n\n//#endregion -------------------- RESUME URLs --------------------\n\n//#endregion ==================== CONSTANTS ====================\n\n\n\n//#region ==================== EmployerItem ====================\n\n// const remoteImgLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';\nconst remoteImgLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/resume/';\n\n\nfunction EmployerItem(props) {\n\n    if (props.availability) {\n\n        return (\n            <div className='employerItem'>\n\n                {/* <img className='logo' src={remoteImgLoc + props.employerLogo} alt={'Employer: ' + props.employer} /> */}\n                {props.employerLogo ? <img className='logo' src={remoteImgLoc + props.employerLogo} alt={'Employer: ' + props.employer} /> : <img className='logo logoMissing' src={remoteImgLoc + 'shigeru_logo_transparent.svg'} alt={'Employer: ' + props.employer} />}\n\n                <div className='employerInfoContainer'>\n                    <h1>{props.employer}</h1>\n                    <h2>{props.title}</h2>\n\n                    {/* <div className='employerDates'>{props.dateStart} - {props.dateEnd}</div> */}\n                    {/* <div className='employerDates'>{Moment(props.dateStart).format('MM/YY')} - {Moment(props.dateEnd).format('MM/YY')}</div> */}\n                    {props.dateEnd ? <div className='employerDates'>{Moment(props.dateStart).format('MM/YY')} - {Moment(props.dateEnd).format('MM/YY')}</div> : <div className='employerDates'>{Moment(props.dateStart).format('MM/YY')}</div>}\n\n                    <ul>\n                        {props.info.split('\\n').map((thisInfo, key) => {\n                            return <li className='employerInfo' key={key}>{thisInfo}</li>\n                        })}\n                    </ul>\n\n                    {props.otherType ? <p dangerouslySetInnerHTML={ {__html: props.otherHtml} }></p> : ''}\n                    {props.software ? <p><b>Software:</b> {props.software}</p> : ''}\n                    {props.languages ? <p><b>Languages:</b> {props.languages}</p> : ''}\n                </div>\n            </div>\n        )\n\n    } else {\n        return null;\n    }\n}\n\n//#endregion ==================== EmployerItem ====================\n\n\n//#region ==================== EmployerList ====================\n\nfunction EmployerList() {\n\n    const employerItems = employerData.map((employer) =>\n        <EmployerItem\n            key={employer.album_id}\n            album_id={employer.album_id}\n            employer={employer.employer}\n            title={employer.title}\n            dateStart={employer.date_start}\n            dateEnd={employer.date_end}\n            info={employer.info}\n            otherInfo={employer.info_other}\n            otherHtml={employer.other_html}\n            otherType={employer.other_type}\n            other={employer.other}\n            software={employer.software}\n            languages={employer.languages}\n            employerLogoPath={employer.logopath}\n            employerLogo={employer.logo}\n            availability={employer.availability}\n        />\n    );\n\n    return (\n        <div className='employerList'>\n            {employerItems}\n        </div>\n    );\n}\n\n//#endregion ==================== EmployerList ====================\n\n\n\n//#region ==================== SkillChartItem ====================\n\nfunction SkillChartItem(props) {\n\n    // if (props.skill) {\n    if (props.skill && props.availability) {\n\n        return (\n            <div className='chartItem'>\n\n                <div className='chartCell'>\n                    <p>{props.skill}</p>\n                </div>\n\n                <div className='chartCell'>\n                    {props.notes.split('\\n').map((thisInfo, key) => {\n                        return <p key={key}>{thisInfo}</p>\n                    })}\n                </div>\n\n            </div>\n        )\n\n    } else {\n        return null;\n    }\n}\n\n//#endregion ==================== SkillChartItem ====================\n\n\n//#region ==================== SkillChart ====================\n\nfunction SkillChart(props) {\n\n    const skillItems = skillData.filter(thisCategory => thisCategory.category === props.category).map((skill) =>\n\n        <SkillChartItem\n            key={skill.index}\n            category={skill.category}\n            skill={skill.skill}\n            level={skill.level}\n            level_difference={skill.level_difference}\n            exp={skill.exp}\n            notes={skill.notes}\n            availability={skill.availability}\n        />\n    );\n\n    return (\n        <>\n            <h2 className='skillCatHed'>{props.category}</h2>\n\n            <div className='skillChart'>\n                {skillItems}\n            </div>\n        </>\n    );\n}\n\n//#endregion ==================== SkillChart ====================\n\n\n//#region ==================== SkillSet ====================\n\nfunction SkillSet() {\n\n    return (\n        <>\n            <SkillChart category='discipline' />\n            <SkillChart category='software' />\n            <SkillChart category='dev' />\n            <SkillChart category='3d' />\n            {/* <SkillChart category='info' /> */}\n        </>\n    );\n}\n\n//#endregion ==================== SkillSet ====================\n\n\n\nexport const Resume = (props) => {\n\n    // console.log('');\n    // console.log('==================== COMPONENT: Resume.jsx ====================');\n\n    // // console.log('');\n    // console.log('props = ' + props);\n    // console.log(props);\n\n\n    // localStorage.setItem('navLoc', locID);\n\n\n    //#region ==================== ASSETS _Ref ====================\n\n    const dialogModal_Ref = useRef(null);\n    const dialogHotspot_Ref = useRef(null);\n    const dialogBox_Ref = useRef(null);\n\n    //#endregion ==================== ASSETS _Ref ====================\n\n\n\n    return (\n        <>\n            <div className='employerContainer'>\n\n                <EmployerList />\n\n                <div className='eduContainer'>\n\n                    <h1 className='sectHed'>Education</h1>\n\n                    <img className='logo' id='eduLogoID' src={remoteImgLoc + 'logo_cu_seas.svg'} alt={'Education: Columbia University, School of Engineering and Applied Science'} />\n\n                    <div className='eduInfo'>\n                        <h1>Columbia University</h1>\n                        <h2>School of Engineering and Applied Science</h2>\n                        {/* <p className='eduDate'><b>BS Mechanical Engineering</b> - May 1990</p> */}\n                        <p className='eduDate'>BS Mechanical Engineering</p>\n                    </div>\n                </div>\n\n                <div className='skillContainer'>\n                    <h1 className='sectHed'>Skills</h1>\n                    <SkillSet />\n                </div>\n\n            </div>\n\n            <div className={props.resumeModalOpen === true ? 'dialogModal dialogModalOpen' : 'dialogModal dialogModalClosed'} id='dialogModalID' ref={dialogModal_Ref}>\n\n                <div className='dialogHotspot' id='dialogHotspotID' onClick={() => {props.setResumeModalOpen(!props.resumeModalOpen)}} ref={dialogHotspot_Ref}></div>\n\n                <div className='dialogBox' id='dialogBoxID' ref={dialogBox_Ref}>\n\n                    <button className='dialogCloseBTN' onClick={() => {props.setResumeModalOpen(!props.resumeModalOpen)}}>X</button>\n\n                    <div className='dialogHed' id='dialogHedID'>\n                        <p>Choose your format...</p>\n                    </div>\n\n                    <div className='dialogMenu' id='dialogMenuID'>\n                        {/* <a href={resumePDFurl} download target='_blank' rel='noreferrer'>*.pdf</a>\n                        <a href={resumeDOCXurl} download target='_blank' rel='noreferrer'>*.docx</a>\n                        <a href={resumeSimpleDOCXurl} download target='_blank' rel='noreferrer'>*.docx</a>\n                        <a href={resumeTXTurl} download target='_blank' rel='noreferrer'>*.txt</a> */}\n\n                        <a href={resumePDFurl} download target='_blank' rel='noreferrer'>{resumePDFfilename}</a>\n                        <a href={resumeDOCXurl} download target='_blank' rel='noreferrer'>{resumeDOCXfilename}</a>\n                        <a href={resumeSimpleDOCXurl} download target='_blank' rel='noreferrer'>{resumeSimpleDOCXfilename}</a>\n                        <a href={resumeTXTurl} download target='_blank' rel='noreferrer'>{resumeTXTfilename}</a>\n                    </div>\n\n                    <div className='dialogHed dialogHed02' id='dialogHed02ID'>\n                        <p>or download ALL...</p>\n                    </div>\n\n                    <div className='dialogMenu dialogMenu02' id='dialogMenu02ID'>\n                        <a href={resumeZIPurl} download target='_blank' rel='noreferrer'>{resumeZIPfilename}</a>\n                    </div>\n\n                </div>\n\n            </div>\n        </>\n    )\n}\n","//#region ==================== IMPORTS ====================\n\nimport React from 'react';\n\nimport '../stylesheets/Contact.scss';\n\n//#endregion ==================== IMPORTS ====================\n\n\n// export const Contact = ({ locID }) => {\nexport const Contact = (props) => {\n\n    // console.log('');\n    // console.log('==================== COMPONENT: Contact.jsx ====================');\n\n    // // console.log('');\n    // console.log('props = ' + props);\n    // console.log(props);\n\n\n    // localStorage.setItem('navLoc', locID);\n\n    return (\n        <div className='formContainer' id='formContainerID'>\n            <h1>Coming soon...</h1>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport '../stylesheets/NotFound.scss';\n\n\n// export const NotFound = ({ locID }) => {\nexport const NotFound = (props) => {\n\n    // console.log('');\n    // console.log('==================== COMPONENT: NotFound.jsx ====================');\n\n    // // console.log('');\n    // console.log('props = ' + props);\n    // console.log(props);\n\n\n    // localStorage.setItem('navLoc', locID);\n\n    return (\n        <div className=\"bodyContainer\" title=\"Not Found\">\n            <h1>OOPS!</h1>\n            <h2>The page you're looking for is Not Found... Page</h2>\n        </div>\n    )\n}","//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useRef } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n// import { useLayoutEffect } from 'react';\n// import { createRef } from 'react';\n\nimport Isotope from 'isotope-layout';\nimport Packery from 'isotope-packery';\n\nimport { isBrowser } from \"react-device-detect\";\n// import { isMobile } from \"react-device-detect\";\n// import { isBrowser, isMobile } from \"react-device-detect\";\n// import { BrowserView, MobileView, isBrowser, isMobile } from \"react-device-detect\";\n\nimport '../stylesheets/Global.scss';\nimport '../stylesheets/Isotope.scss';\n\nimport myData from '../data/MyData';\n\nimport { gsap } from 'gsap';\n\n//#endregion ==================== IMPORTS ====================\n\n\n//#region ==================== CONSTANTS n VARS ====================\n\nconst remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';\n\n// let navLoc;\n// let emplLoc;\n\n\n//#region -------------------- DATA --------------------\n\n// console.log('');\n// // console.log('myData = ' + myData);\n// console.log('myData = ');\n// console.log(myData);\n\nlet employerData = myData[0];\nlet workData = myData[1];\n\n// console.log('');\n// // console.log('employerData = ' + employerData);\n// console.log('employerData = ');\n// console.log(employerData);\n// // console.log(employerData[0].employer);\n\n// console.log('');\n// // console.log('workData = ' + workData);\n// console.log('workData = ');\n// console.log(workData);\n\n//#endregion -------------------- DATA --------------------\n\n\n//#region -------------------- FILTER ARRAY: filterEmployer --------------------\n\nconst filterEmployer = employerData.filter(isInGallery => isInGallery.isInGallery);\n\n// console.log('');\n// // console.log('filterEmployer = ' + filterEmployer);\n// console.log('filterEmployer = ');\n// console.log(filterEmployer);\n\n// filterEmployer.unshift(\nfilterEmployer.push(\n    {\n        \"album_index\": '00',\n        \"album_id\": \"*\",\n        \"employer\": \"All\",\n        \"title\": \"Digital Designer / Front-End Developer\",\n        \"date_start\": \"present\",\n        \"date_end\": \"present\",\n        \"info\": \"View ALL work\",\n        \"info_other\": \"\",\n        \"other_html\": \"\",\n        \"other_type\": \"\",\n        \"other\": \"\",\n        \"software\": \"\",\n        \"languages\": \"\",\n        //    \"logopath\": \"0elements/shigeru_logo.svg\",\n        //    \"logo\": \"shigeru_logo_transparent.svg\",\n        \"logopath\": \"#\",\n        \"logo\": \"#\",\n        \"slpath\": \"other/sl\",\n        \"thpath\": \"other/th\",\n        \"flpath\": \"https://www.shigimcp.com/img/other/\",\n        \"flpath_stage\": \"https://www.shigimcp.com/Xstage/shigimcp_2019/img/other/\",\n        \"availability\": true,\n        \"isInGallery\": true\n    }\n)\n\n// console.log('');\n// // console.log('filterEmployer = ' + filterEmployer);\n// console.log('filterEmployer = ');\n// console.log(filterEmployer);\n\n//#endregion -------------------- FILTER ARRAY: filterEmployer --------------------\n\n\n//#region -------------------- FILTER ARRAY: filterType - REF: https://github.com/rhernandog/gsap-flip-react/blob/master/src/App.js --------------------\n\nconst filterType = [\n    // { key: '0000', id: 'allCheck', value: 'all', label: 'All' },\n    { key: '0000', id: 'websiteCheck', value: 'website', label: 'Website' },\n    { key: '0001', id: 'mobileCheck', value: 'mobile', label: 'Mobile' },\n    { key: '0002', id: 'videoCheck', value: 'video', label: 'Video' },\n    { key: '0003', id: 'bannerCheck', value: 'banner', label: 'Banner' },\n    { key: '0004', id: 'printCheck', value: 'print', label: 'Print' },\n    { key: '0005', id: 'allCheck', value: '*', label: 'All' },\n];\n\n// console.log('');\n// console.log('filterType = ' + filterType);\n// console.log('filterType = ');\n// console.log(filterType);\n\n//#endregion -------------------- FILTER ARRAY: filterType - REF: https://github.com/rhernandog/gsap-flip-react/blob/master/src/App.js --------------------\n\n\n//#region -------------------- TIMELINES --------------------\n\n// console.log('-------------------- TIMELINES: workNavTL --------------------');\n\n// const workNavTL = new gsap.timeline();\nconst workNavTL = new gsap.timeline({ paused: true });\n\n//#endregion -------------------- TIMELINES --------------------\n\n//#endregion ==================== CONSTANTS n VARS ====================\n\n\n//#region ==================== FUNCTIONS ====================\n\nfunction handleClick(event) {\n\n    console.log('');\n    console.log('==================== FUNCTION: handleClick(event) ====================');\n    console.log('event = ' + event);\n    console.log(event);\n}\n\n//#endregion ==================== FUNCTIONS ====================\n\n\n\nexport const Isotope03 = (props) => {\n\n    // console.log('');\n    // console.log('==================== Isotope03 ====================');\n    // console.log('props = ' + props);\n    // console.log(props);\n\n    // console.log('');\n    // console.log('isBrowser = ' + isBrowser);\n    // // console.log(isBrowser);\n\n    // console.log('isMobile = ' + isMobile);\n    // // console.log(isMobile);\n\n\n    //#region ==================== ASSETS _Ref ====================\n\n    // init one ref to store the future isotope object\n    const isotope_Ref = useRef()\n\n    const workNav_Ref = useRef(null);\n\n    const employerNav_Ref = useRef(null);\n    const activeEmplDiv_Ref = useRef(null);\n\n    const typeNav_Ref = useRef(null);\n    const activeTypeDiv_Ref = useRef(null);\n\n    const toggleNav_Ref = useRef(null);\n    const toggleBtn_Ref = useRef(null);\n\n    const galleryContainer_Ref = useRef(null);\n    // const galleryItem_Ref = useRef(null);\n\n    //#endregion ==================== ASSETS _Ref ====================\n\n\n    //#region ==================== useState DEFs ====================\n\n    // store the filter keyword in a state\n    const [filterKey, setFilterKey] = useState('*');\n\n    // const [activeEmplDiv, setActiveEmplDiv] = useState(null);\n\n    const [workNavToggleText, setWorkNavToggleText] = useState('<< View by employer');\n    const [workNavToggleBtn, setWorkNavToggleBtn] = useState(true);\n\n    //#endregion ==================== useState DEFs ====================\n\n\n\n    //#region ==================== useLayoutEffect: setActiveEmplDiv / WINDOW RESIZE ====================\n\n    // useLayoutEffect(() => {\n\n    //     console.log('');\n    //     console.log('------------------------- useLayoutEffect: setActiveEmplDiv / WINDOW RESIZE -------------------------');\n\n    //     // console.log('');\n    //     // console.log('employerNav_Ref.current = ' + employerNav_Ref.current);\n    //     // console.log(employerNav_Ref.current);\n\n    //     console.log('employerNav_Ref.current.children[0] = ' + employerNav_Ref.current.children[0]);\n    //     console.log(employerNav_Ref.current.children[0]);\n\n\n    //     console.log('');\n    //     // console.log('typeNav_Ref.current = ' + typeNav_Ref.current);\n    //     // console.log(typeNav_Ref.current);\n    //     console.log('typeNav_Ref.current.children[0] = ' + typeNav_Ref.current.children[0]);\n    //     console.log(typeNav_Ref.current.children[0]);\n\n\n    //     //#region -------------------- setActiveEmplDiv --------------------\n\n    //     // let thisLocX;\n    //     // // let thisLocY;\n    //     // let thisLocW;\n    //     // // let thisLocH;\n\n    //     // const setActiveEmplDiv = () => {\n\n    //     //     // let thisLocX = document.getElementById(activeEmplDiv).offsetLeft;\n    //     //     // // let thisLocY = document.getElementById(activeEmplDiv).offsetTop;\n    //     //     // let thisLocW = document.getElementById(activeEmplDiv).offsetWidth;\n    //     //     // // let thisLocH = document.getElementById(activeEmplDiv).offsetHeight;\n\n    //     //     thisLocX = document.getElementById(activeEmplDiv).offsetLeft;\n    //     //     // thisLocY = document.getElementById(activeEmplDiv).offsetTop;\n    //     //     thisLocW = document.getElementById(activeEmplDiv).offsetWidth;\n    //     //     // thisLocH = document.getElementById(activeEmplDiv).offsetHeight;\n\n    //     //     gsap.set([activeEmplDiv_Ref.current], { x: thisLocX, width: thisLocW });\n    //     //     // gsap.set([activeEmplDiv_Ref.current], { x: thisLocX, top: thisLocY, width: thisLocW, height: thisLocH });\n    //     // }\n\n    //     // console.log('activeEmplDiv = ' + activeEmplDiv);\n    //     // console.log('thisLocX = ' + thisLocX);\n    //     // console.log('thisLocW = ' + thisLocW);\n\n    //     //#endregion -------------------- setActiveEmplDiv --------------------\n\n\n    //     //#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n    //     // window.addEventListener('resize', setActiveEmplDiv);\n\n    //     window.scrollTo(0, 0);\n\n    //     // // clean up function\n    //     // return () => {\n    //     //     window.removeEventListener('resize', setActiveEmplDiv);\n    //     // }\n\n    //     //#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n    // });\n\n    //#endregion ==================== useLayoutEffect: setActiveEmplDiv / WINDOW RESIZE ====================\n\n\n    //#region ==================== useEffect: setActiveEmplDiv / activeTypeDiv INIT ====================\n\n    useEffect(() => {\n    // useLayoutEffect(() => {\n\n        // console.log('');\n        // console.log('==================== useEffect: setActiveEmplDiv / activeTypeDiv INIT ====================');\n\n        // // console.log('activeEmplDiv_Ref.current = ' + activeEmplDiv_Ref.current);\n        // // console.log('employerNav_Ref.current = ' + employerNav_Ref.current);\n        // // console.log('employerNav_Ref.current.children[5] = ' + employerNav_Ref.current.children[5]);\n        // // console.log(employerNav_Ref.current.children[5]);\n\n        // // console.log(employerNav_Ref.current.children);\n        // // console.log(employerNav_Ref.current.children.length);\n        // console.log(employerNav_Ref.current.lastChild);\n\n        // // console.log(typeNav_Ref.current);\n        // console.log(typeNav_Ref.current.lastChild);\n\n\n        // let thisLocX = employerNav_Ref.current.lastChild.offsetLeft;\n        // let thisLocX = employerNav_Ref.current.offsetLeft + (employerNav_Ref.current.offsetWidth * 0.5) - employerNav_Ref.current.lastChild.offsetWidth;\n        // let thisLocX = employerNav_Ref.current.lastChild.offsetLeft - employerNav_Ref.current.offsetLeft + (employerNav_Ref.current.offsetWidth * 0.5);\n        let thisLocX = (employerNav_Ref.current.offsetWidth * 0.5) - (employerNav_Ref.current.lastChild.offsetWidth * 0.5);\n        let thisLocY = employerNav_Ref.current.lastChild.offsetTop;\n        let thisLocW = employerNav_Ref.current.lastChild.offsetWidth;\n        let thisLocH = employerNav_Ref.current.lastChild.offsetHeight;\n\n        // console.log('');\n        // console.log('thisLocX = ' + thisLocX + '     thisLocY = ' + thisLocY);\n        // console.log('thisLocW = ' + thisLocW + '     thisLocH = ' + thisLocH);\n\n\n        gsap.set([activeEmplDiv_Ref.current], { x: thisLocX, y: thisLocY, width: thisLocW, height: thisLocH });\n\n\n        thisLocX = (typeNav_Ref.current.offsetWidth * 0.5) - (typeNav_Ref.current.lastChild.offsetWidth * 0.5);\n        thisLocY = typeNav_Ref.current.lastChild.offsetTop;\n        thisLocW = typeNav_Ref.current.lastChild.offsetWidth;\n        thisLocH = typeNav_Ref.current.lastChild.offsetHeight;\n\n        // console.log('');\n        // console.log('thisLocX = ' + thisLocX + '     thisLocY = ' + thisLocY);\n        // console.log('thisLocW = ' + thisLocW + '     thisLocH = ' + thisLocH);\n\n\n        gsap.set([activeTypeDiv_Ref.current], { x: thisLocX, y: thisLocY, width: thisLocW, height: thisLocH });\n\n    }, [])\n    // }, [activeEmplDiv])\n\n    //#endregion ==================== useEffect: setActiveEmplDiv / activeTypeDiv INIT ====================\n\n\n    //#region ==================== useEffect: setActiveEmplDiv ====================\n\n    // useEffect(() => {\n\n    //     console.log('');\n    //     console.log('==================== useEffect: setActiveEmplDiv ====================');\n\n    //     // console.log('activeEmplDiv_Ref.current = ' + activeEmplDiv_Ref.current);\n    //     // console.log('employerNav_Ref.current = ' + employerNav_Ref.current);\n    //     // console.log('employerNav_Ref.current.children[5] = ' + employerNav_Ref.current.children[5]);\n    //     // console.log(employerNav_Ref.current.children[5]);\n\n    //     // console.log(employerNav_Ref.current.children);\n    //     // console.log(employerNav_Ref.current.children.length);\n    //     // console.log(employerNav_Ref.current.lastChild);\n\n    //     // console.log('filterKey = ' + filterKey);\n    //     // console.log('activeEmplDiv = ' + activeEmplDiv);\n    //     // console.log(activeEmplDiv);\n\n    //     if (activeEmplDiv) {\n\n    //         console.log('activeEmplDiv = ' + activeEmplDiv);\n    //         console.log(activeEmplDiv);\n\n    //         // console.log(activeEmplDiv.target);\n    //         // // console.log(activeEmplDiv.currentTarget);\n    //         // console.log(activeEmplDiv.target.parentNode);\n\n    //         // console.log(activeEmplDiv.clientX);\n    //         // console.log(activeEmplDiv.clientY);\n    //         // console.log(activeEmplDiv.screenX);\n    //         // console.log(activeEmplDiv.screenY);\n\n    //         console.log(activeEmplDiv.getBoundingClientRect().offsetLeft);\n    //         // console.log(activeEmplDiv.offsetLeft);\n\n\n    //         // let thisLocX = activeEmplDiv.offsetLeft;\n    //         // let thisLocY = activeEmplDiv.offsetTop;\n    //         // let thisLocW = activeEmplDiv.offsetWidth;\n    //         // let thisLocH = activeEmplDiv.offsetHeight;\n\n    //         // let thisLocX = activeEmplDiv.target.parentNode.offsetLeft;\n    //         // let thisLocY = activeEmplDiv.target.parentNode.offsetTop;\n    //         // let thisLocW = activeEmplDiv.target.parentNode.offsetWidth;\n    //         // let thisLocH = activeEmplDiv.target.parentNode.offsetHeight;\n\n    //         // console.log('');\n    //         // console.log('thisLocX = ' + thisLocX + '     thisLocY = ' + thisLocY);\n    //         // console.log('thisLocW = ' + thisLocW + '     thisLocH = ' + thisLocH);\n\n\n    //         // gsap.to([activeEmplDiv_Ref.current], { x: thisLocX, y: thisLocY, width: thisLocW, duration: 3.75 });\n\n    //     } else {\n\n    //         console.log('SORRY, BUD! activeEmplDiv = ' + activeEmplDiv);\n    //         console.log(activeEmplDiv);\n    //     }\n\n    // // }, [])\n    // }, [activeEmplDiv])\n    // // }, [filterKey, activeEmplDiv])\n\n    // // const handleActiveEmplDiv = key => () => setActiveEmplDiv(key);\n\n    //#endregion ==================== useEffect: workNavTL ====================\n\n\n    //#region ==================== useEffect: workNavTL ====================\n\n    useEffect(() => {\n\n        // console.log('');\n        // console.log('==================== useEffect: workNavTL ====================');\n        // console.log('workNavTL = ' + workNavTL);\n\n\n        let workNavWidth = employerNav_Ref.current.getBoundingClientRect().width;\n        let workNavHeight = employerNav_Ref.current.getBoundingClientRect().height;\n\n        // console.log('');\n        // console.log('==================== useEffect: workNavTL ====================');\n        // console.log('workNavWidth = ' + workNavWidth);\n        // console.log('workNavHeight = ' + workNavHeight);\n\n        if (isBrowser === true) {\n            workNavTL\n                .fromTo([employerNav_Ref.current], { y: -workNavHeight, autoAlpha: 0 }, { y: 0, autoAlpha: 1, duration: 0.5 }, 'frame01')\n                .fromTo([typeNav_Ref.current], { y: 0, autoAlpha: 1 }, { y: -workNavHeight, autoAlpha: 0, duration: 0.5 }, 'frame01')\n                // .fromTo([activeEmplDiv_Ref.current], { height: 0 }, { height: workNavHeight, duration: 0.5 }, 'frame01')\n        } else {\n            workNavTL\n                .fromTo([employerNav_Ref.current], { x: -workNavWidth, autoAlpha: 0 }, { x: 0, autoAlpha: 1, duration: 0.5 }, 'frame01')\n                .fromTo([typeNav_Ref.current], { x: 0, autoAlpha: 1 }, { x: -workNavWidth, autoAlpha: 0, duration: 0.5 }, 'frame01')\n                // .fromTo([activeEmplDiv_Ref.current], { width: 0 }, { width: workNavHeight, duration: 0.5 }, 'frame01')\n        }\n\n\n        if (workNavToggleBtn) {\n            workNavTL.restart();\n        }\n\n    // }, [])\n    // }, [workNavHeight])\n    }, [workNavToggleBtn])\n\n    //#endregion ==================== useEffect: workNavTL ====================\n\n\n    //#region ==================== useEffect: workNavToggleBtn ====================\n\n    useEffect(() => {\n\n        // console.log('');\n        // console.log('==================== useEffect: workNavToggleBtn ====================');\n        // console.log('workNavToggleBtn = ' + workNavToggleBtn);\n\n        // // console.log('');\n        // console.log('employerNav_Ref.current.lastChild = ' + employerNav_Ref.current.lastChild);\n        // console.log(employerNav_Ref.current.lastChild);\n\n        // console.log('');\n        // console.log('typeNav_Ref.current.lastChild = ' + typeNav_Ref.current.lastChild);\n        // console.log(typeNav_Ref.current.lastChild);\n\n\n        if (workNavToggleBtn) {\n            workNavTL.play();\n            setWorkNavToggleText('View by type');\n            typeNav_Ref.current.lastChild.click();\n        } else {\n            workNavTL.reverse();\n            setWorkNavToggleText('View by employer');\n            employerNav_Ref.current.lastChild.click();\n        }\n\n    // }, [])\n    }, [workNavToggleBtn])\n\n    //#endregion ==================== useEffect: workNavToggleBtn ====================\n\n\n    //#region ==================== useEffect: initialize an Isotope object with configs ====================\n\n    useEffect(() => {\n\n        // console.log('');\n        // console.log('==================== useEffect: initialize an Isotope object with configs ====================');\n\n\n        isotope_Ref.current = new Isotope('.galleryContainer', {\n\n            // itemSelector: '.filter-item',\n            itemSelector: '.workItem',\n            percentPosition: true,\n\n            // layoutMode: 'masonry',\n            // masonry: {\n            //     // columnWidth: 100,\n            //     // gutter: 20,\n            //     isFitWidth: true,\n            // }\n\n            layoutMode: 'packery',\n            // packery: {\n            //     gutter: 20,\n            //     columnWidth: '.workItem',\n            //     rowHeight: 60,\n            //     horizontal: true,\n            // }\n        })\n\n        // cleanup\n        return () => isotope_Ref.current.destroy()\n\n    }, [])\n\n    //#endregion ==================== useEffect: initialize an Isotope object with configs ====================\n\n\n    //#region ==================== useEffect: handleFilterKeyChange - handling filter key change ====================\n\n    useEffect(() => {\n\n        // console.log('');\n        // console.log('==================== useEffect: handleFilterKeyChange - handling filter key change ====================');\n        // console.log('filterKey = ' + filterKey);\n\n\n        filterKey === '*'\n            ? isotope_Ref.current.arrange({ filter: `*` })\n            : isotope_Ref.current.arrange({ filter: `.${filterKey}` });\n\n        window.scrollTo(0, 0);\n\n        // setActiveEmplDiv(filterKey);\n\n    }, [filterKey])\n\n    //#endregion ==================== useEffect: handleFilterKeyChange - handling filter key change ====================\n\n\n    //#region ==================== const handleFilterKeyChange: setFilterKey / activeEmplDiv_Ref / activeTypeDiv ====================\n\n    // const handleFilterKeyChange = key => () => setFilterKey(key);\n\n    const handleFilterKeyChange = key => (keyJSONnode) => {\n\n        // console.log('');\n        // console.log('==================== const handleFilterKeyChange: setFilterKey / activeEmplDiv_Ref / activeTypeDiv ====================');\n\n        // // console.log('key = ' + key);\n        // // console.log(key);\n\n        // // console.log('');\n        // // console.log('keyJSONnode = ' + keyJSONnode);\n        // // console.log(keyJSONnode);\n\n        // // console.log('');\n        // // console.log('keyJSONnode.target = ' + keyJSONnode.target);\n        // // console.log(keyJSONnode.target);\n\n        // console.log('');\n        // console.log('keyJSONnode.currentTarget = ' + keyJSONnode.currentTarget);\n        // console.log(keyJSONnode.currentTarget);\n\n        // console.log('');\n        // console.log('keyJSONnode.currentTarget.parentNode = ' + keyJSONnode.currentTarget.parentNode);\n        // console.log(keyJSONnode.currentTarget.parentNode);\n        // console.log('keyJSONnode.currentTarget.parentNode.id = ' + keyJSONnode.currentTarget.parentNode.id);\n\n\n        setFilterKey(key);\n        // setFilterKey(key.album_id);\n\n        // setActiveEmplDiv(keyJSONnode);\n        // setActiveEmplDiv(keyJSONnode.currentTarget);\n\n\n        // let thisLocX = employerNav_Ref.current.offsetLeft - (employerNav_Ref.current.offsetWidth * 0.5) + keyJSONnode.currentTarget.offsetLeft;\n        // let thisLocY = keyJSONnode.currentTarget.offsetTop;\n        // let thisLocW = keyJSONnode.currentTarget.offsetWidth;\n        // let thisLocH = keyJSONnode.currentTarget.offsetHeight;\n\n        // // console.log('');\n        // // console.log('thisLocX = ' + thisLocX + '     thisLocY = ' + thisLocY);\n        // // console.log('thisLocW = ' + thisLocW + '     thisLocH = ' + thisLocH);\n\n        let thisLocX;\n        let thisLocY;\n        let thisLocW;\n        let thisLocH;\n\n\n        if (keyJSONnode.currentTarget.parentNode.id === 'employerNavID') {\n\n            // thisLocX = employerNav_Ref.current.offsetLeft - (employerNav_Ref.current.offsetWidth * 0.5) + keyJSONnode.currentTarget.offsetLeft;\n            thisLocX = keyJSONnode.currentTarget.offsetLeft - (employerNav_Ref.current.offsetWidth * 0.5) + (keyJSONnode.currentTarget.offsetWidth * 0.5);\n            thisLocY = keyJSONnode.currentTarget.offsetTop;\n            thisLocW = keyJSONnode.currentTarget.offsetWidth;\n            thisLocH = keyJSONnode.currentTarget.offsetHeight;\n\n            // console.log('');\n            // console.log('thisLocX = ' + thisLocX + '     thisLocY = ' + thisLocY);\n            // console.log('thisLocW = ' + thisLocW + '     thisLocH = ' + thisLocH);\n\n            gsap.to([activeEmplDiv_Ref.current], { x: thisLocX, y: thisLocY, width: thisLocW, height: thisLocH, duration: 0.375 });\n\n        } else {\n\n            thisLocX = keyJSONnode.currentTarget.offsetLeft - (typeNav_Ref.current.offsetWidth * 0.5) + (keyJSONnode.currentTarget.offsetWidth * 0.5);\n            thisLocY = keyJSONnode.currentTarget.offsetTop;\n            thisLocW = keyJSONnode.currentTarget.offsetWidth;\n            thisLocH = keyJSONnode.currentTarget.offsetHeight;\n\n            // console.log('');\n            // console.log('thisLocX = ' + thisLocX + '     thisLocY = ' + thisLocY);\n            // console.log('thisLocW = ' + thisLocW + '     thisLocH = ' + thisLocH);\n\n            gsap.to([activeTypeDiv_Ref.current], { x: thisLocX, y: thisLocY, width: thisLocW, height: thisLocH, duration: 0.375 });\n        }\n\n\n        // gsap.to([activeEmplDiv_Ref.current], { x: thisLocX, y: thisLocY, width: thisLocW, height: thisLocH, duration: 0.375 });\n    };\n\n    //#endregion ==================== const handleFilterKeyChange: setFilterKey / activeEmplDiv_Ref / activeTypeDiv0 ====================\n\n\n\n    //#region ==================== COMPONENTS (workNav/workItems[s]): renderEmployers, renderFilters, renderElements ====================\n\n    //#region -------------------- renderEmployers: workNav --------------------\n\n    // const renderEmployers = () => {\n    function RenderEmployers() {\n\n        // console.log('');\n        // console.log('-------------------- renderEmployers --------------------');\n\n        return filterEmployer.map((e) =>\n            // <div className='workNavItem' key={e.album_index} onClick={handleFilterKeyChange(e.album_id)}>{e.employer}</div>\n            // <div className='workNavItemLogo' key={e.album_index} onClick={handleFilterKeyChange(e.album_id)}>\n            //     <img className='workNavLogo' key={e.album_index} onClick={handleFilterKeyChange(e.album_id)} src={remoteLoc + e.logopath} alt={e.employer} />\n\n            // <div className={e.logopath !== '#' ? 'workNavItemLogo' : 'workNavItem'} key={e.album_index} onClick={handleFilterKeyChange(e.album_id)}>\n            // <div className={e.logopath !== '#' ? 'workNavItemLogo' : 'workNavItem'} id={e.album_id + 'NavID'} key={e.album_index} onClick={handleFilterKeyChange(e.album_id)} ref={createRef(e.album_id + '_Ref')}>\n            // <div className={e.logopath !== '#' ? 'workNavItemLogo' : 'workNavItem'} id={e.album_id + 'NavID'} key={e.album_index} onClick={() => { handleFilterKeyChange(e.album_id); handleActiveEmplDiv(e) }}>\n            // <div className={e.logopath !== '#' ? 'workNavItemLogo' : 'workNavItem'} id={e.album_id + 'NavID'} key={e.album_index} onClick={() => { handleFilterKeyChange(e.album_id); handleActiveEmplDiv(e); }}>\n\n            <div className={e.logopath !== '#' ? 'workNavItemLogo' : 'workNavItem'} id={e.album_id + 'NavID'} key={e.album_index} onClick={handleFilterKeyChange(e.album_id)}>\n                {e.logopath !== '#' ? <img className='workNavLogo' src={remoteLoc + e.logopath} alt={e.employer} /> : e.employer}\n            </div>\n        );\n    };\n\n    //#endregion -------------------- renderEmployers: workNav --------------------\n\n\n    //#region -------------------- renderFilters: workNav --------------------\n\n    // const renderFilters = () => {\n    function RenderFilters() {\n\n        // console.log('');\n        // console.log('-------------------- renderFilters --------------------');\n\n        return filterType.map((e) =>\n            // <div className='workNavItem' key={e.key} onClick={handleFilterKeyChange(e.value)}>{e.label}</div>\n            <div className='workNavItem' id={e.label + 'NavID'} key={e.key} onClick={handleFilterKeyChange(e.value)}>{e.label}</div>\n        );\n    };\n\n    //#endregion -------------------- renderFilters: workNav --------------------\n\n\n    //#region -------------------- renderElements: workItem[s] --------------------\n\n    const renderElements = () => {\n    // function RenderElements() {\n\n        // console.log('');\n        // console.log('-------------------- renderElements --------------------');\n\n        return workData.filter(isSrc => isSrc.src !== '#').map((workItem, index) =>\n\n            <div \n                className={`workItem ${workItem.format} ${workItem.album_id} masonryWidth${workItem.masonryWidth} masonryHeight${workItem.masonryHeight}`}\n                id={workItem.album_id + 'DivID' + index}\n                key={index}\n                onClick={(event) => handleClick(event)}\n            >\n\n                <img\n                    src={remoteLoc + workItem.album_id + '/sl/' + workItem.src}\n                    alt={'workItem: ' + workItem.album_id}\n                />\n\n                <div className='itemInfo'>\n                    {/* <h3 className='masonry-title'>{employerData[workItem.album_index].employer}</h3>\n                    <p className='masonry-description'>{workItem.caption}</p> */}\n                    <h3>{employerData[workItem.album_index].employer}</h3>\n                    <p>{workItem.caption}</p>\n                </div>\n\n            </div>\n        );\n    };\n\n    //#endregion -------------------- renderElements: workItem[s] --------------------\n\n    //#endregion ==================== COMPONENTS (workNav/workItems[s]): renderEmployers, renderFilters, renderElements ====================\n\n\n\n    return (\n\n        <div className='isotopeContainer'>\n\n            <div className='workNavBar' id='workNavBarID' ref={workNav_Ref}>\n\n                {/* <div className='activeEmplDiv' id='activeEmplDivID' ref={activeEmplDiv_Ref}></div> */}\n\n                <div className='workNav employerNav' id='employerNavID' ref={employerNav_Ref}>\n                    <div className='activeEmplDiv' id='activeEmplDivID' ref={activeEmplDiv_Ref}></div>\n                    <RenderEmployers />\n                </div>\n\n                <div className='workNav typeNav' id='typeNavID' ref={typeNav_Ref}>\n                    <div className='activeTypeDiv' id='activeTypeDivID' ref={activeTypeDiv_Ref}></div>\n                    <RenderFilters />\n                </div>\n\n                <div className='toggleNav' id='toggleNavID' ref={toggleNav_Ref}>\n                    <div className='toggleBtn' onClick={(e) => { setWorkNavToggleBtn(!workNavToggleBtn); }} ref={toggleBtn_Ref}>\n                        {workNavToggleText}\n                        {/* <span className='toggleText'>{workNavToggleText}</span> */}\n                        {/* <div className='toggleText'>ReactJS v{React.version}</div> */}\n                    </div>\n                </div>\n\n            </div>\n\n            <div className='galleryContainer' ref={galleryContainer_Ref}>\n                {renderElements()}\n                {/* <RenderElements /> */}\n            </div>\n\n        </div>\n    )\n}\n","//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useRoutes } from 'hookrouter';\n\nimport './stylesheets/App.scss';\n\nimport { Wrapper } from './components/Wrapper';\nimport { Header } from './components/Header';\n\nimport { Home } from './pages/Home';\n// import { Work } from './pages/Work';\nimport { About } from './pages/About';\nimport { Resume } from './pages/Resume';\nimport { Contact } from './pages/Contact';\n\nimport { NotFound } from './pages/NotFound';\n\nimport { Isotope03 } from './pages/Isotope03';\n\n// import { useContext } from 'react';\n\n//#endregion ==================== IMPORTS ====================\n\n\n//#region ==================== ROUTES: REF https://blog.logrocket.com/how-react-hooks-can-replace-react-router/ ====================\n\n// const routes = {\n//     '/': () => <Home locID={'homeID'} loadStatus={true} />,\n//     '/shigimcp2021': () => <Home locID={'homeID'} loadStatus={true} />,\n//     '/shigimcp2021/': () => <Home locID={'homeID'} loadStatus={true} />,\n//     '/shigimcp2021/work/:currentEmployer': ({ currentEmployer }) => <Work currentEmployer={currentEmployer} locID={'workID'} loadStatus={true} />,\n//     '/shigimcp2021/about': () => <About locID={'aboutID'} loadStatus={true} />,\n//     // '/shigimcp2021/resume': () => <Resume locID={'resumeID'} loadStatus={true} />,\n//     '/shigimcp2021/resume': () => <Resume locID={'resumeID'} loadStatus={true} resumeModalOpen={resumeModalOpen} />,\n//     '/shigimcp2021/contact': () => <Contact locID={'contactID'} loadStatus={true} />,\n//     '/shigimcp2021/notfound': () => <NotFound locID={'notFoundID'} loadStatus={true} />,\n// }\n\n//#endregion ==================== ROUTES: REF https://blog.logrocket.com/how-react-hooks-can-replace-react-router/ ====================\n\n\nfunction App() {\n// const App = (props) => {\n\n    // console.log('');\n    // console.log('==================== COMPONENT: App.jsx ====================');\n\n    // // // console.log('');\n    // // console.log('props = ' + props);\n    // // console.log(props);\n\n\n    //#region ==================== use DEFs ====================\n\n    // REF: https://stackoverflow.com/questions/61836485/passing-data-to-sibling-components-with-react-hooks\n    // REF: https://stackoverflow.com/questions/62046448/toggle-two-components-using-react-hooks\n\n    const [resumeModalOpen, setResumeModalOpen] = useState(false);\n    // const [workNavEmplOpen, setWorkNavEmplOpen] = useState(false);\n\n    // console.log('resumeModalOpen = ' + resumeModalOpen);\n\n    //#endregion ==================== use DEFs ====================\n\n\n    //#region ==================== ROUTES: REF https://blog.logrocket.com/how-react-hooks-can-replace-react-router/ ====================\n\n    const routes = {\n        '/': () => <Home locID={'homeID'} loadStatus={true} />,\n        '/shigimcp2021': () => <Home locID={'homeID'} loadStatus={true} />,\n        '/shigimcp2021/': () => <Home locID={'homeID'} loadStatus={true} />,\n        // '/shigimcp2021/work/:currentEmployer': ({ currentEmployer }) => <Work currentEmployer={currentEmployer} locID={'workID'} loadStatus={true} />,\n        // '/shigimcp2021/work/:currentEmployer': ({ currentEmployer }) => <Work currentEmployer={currentEmployer} locID={'workID'} loadStatus={true} clearContent={clearContent} />,\n        '/shigimcp2021/work': () => <Isotope03 locID={'workID'} loadStatus={true} />,\n        // '/shigimcp2021/isotope': () => <Isotope03 locID={'isotopeID'} />,\n        // '/shigimcp2021/isotope': () => <Isotope03 locID={'isotopeID'} loadStatus={true} workNavEmplOpen={true} />,\n        // '/shigimcp2021/isotope': () => <Isotope03 locID={'isotopeID'} loadStatus={true} workNavEmplOpen={workNavEmplOpen} setWorkNavEmplOpen={setWorkNavEmplOpen} />,\n        '/shigimcp2021/about': () => <About locID={'aboutID'} loadStatus={true} />,\n        '/shigimcp2021/resume': () => <Resume locID={'resumeID'} loadStatus={true} resumeModalOpen={resumeModalOpen} setResumeModalOpen={setResumeModalOpen} />,\n        '/shigimcp2021/contact': () => <Contact locID={'contactID'} loadStatus={true} />,\n        '/shigimcp2021/notfound': () => <NotFound locID={'notFoundID'} loadStatus={true} />,\n    }\n\n    //#endregion ==================== ROUTES: REF https://blog.logrocket.com/how-react-hooks-can-replace-react-router/ ====================\n\n\n    const match = useRoutes(routes);\n\n    // // console.log('');\n    // console.log('match = ' + match);\n    // console.log(match);\n\n    // // console.log('');\n    // console.log('match.props = ' + match.props);\n    // console.log(match.props);\n\n\n    return (\n        <Wrapper>\n\n            <Header resumeModalOpen={resumeModalOpen} setResumeModalOpen={setResumeModalOpen} />\n            {/* <Header resumeModalOpen={resumeModalOpen} setResumeModalOpen={setResumeModalOpen} workNavEmplOpen={workNavEmplOpen} setWorkNavEmplOpen={setWorkNavEmplOpen} /> */}\n\n            {match || <NotFound locID={'notFoundID'} />}\n\n            {/* <ParentNum /> */}\n\n        </Wrapper>\n    )\n}\n\n\n\n\n//#region ==================== useContext: REF https://programmingwithmosh.com/javascript/learn-the-usecontext-hook-in-react/ ====================\n\n// const numInfo = {\n//     numInfo01: {\n//         num01: 36,\n//         num02: 50\n//     },\n//     numInfo02: {\n//         num01: 37,\n//         num02: 51\n//     }\n// };\n\n// const NumberContext = React.createContext(numInfo);\n\n// function ParentNum(){\n//     return (\n//         <NumberContext.Provider value={numInfo}>\n//             <h2>Use Context Example Component</h2>\n//             <NumDetailComponent />\n//             <MyOtherNumInfoComponent />\n//         </NumberContext.Provider>\n//     );\n// }\n\n// function NumDetailComponent(){\n\n//     const numDetails = useContext(NumberContext);\n\n//     return (\n//         <div className='display' id='display01'>\n//             <h3>numInfo01 Details</h3>\n//             <p>num01: {numDetails.numInfo01.num01}</p>\n//             <p>num02: {numDetails.numInfo01.num02}</p>\n//         </div>\n//     );\n// }\n\n// function MyOtherNumInfoComponent(){\n\n//     const numDetails = useContext(NumberContext);\n\n//     return (\n//         <div className='display' id='display02'>\n//             <h3>numInfo02 Details</h3>\n//             <p>num01: {numDetails.numInfo02.num01}</p>\n//             <p>num02: {numDetails.numInfo02.num02}</p>\n//         </div>\n//     );\n// }\n\n//#endregion ==================== useContext: REF https://programmingwithmosh.com/javascript/learn-the-usecontext-hook-in-react/ ====================\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './stylesheets/index.scss';\n\nimport App from './App';\n\n\nReactDOM.render(\n\n    // <React.StrictMode>\n        <App />,\n    // </React.StrictMode>,\n\n    document.getElementById('root')\n    // document.getElementById('rootContainer')\n);\n\n\n// If you want your app to work offline and load faster, you can change unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n// serviceWorker.register();\n"],"sourceRoot":""}